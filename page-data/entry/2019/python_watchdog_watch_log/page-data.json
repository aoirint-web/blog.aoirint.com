{
    "componentChunkName": "component---src-layouts-entry-page-layout-tsx",
    "path": "/entry/2019/python_watchdog_watch_log/",
    "result": {"data":{"mdx":{"id":"9afa83db-68d7-5a59-8b1a-dff34a51a36a","slug":"2019/python_watchdog_watch_log/","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"ログ監視 Python watchdog（ログローテーション未完成）\",\n  \"date\": \"2019-07-10 00:09:55\",\n  \"draft\": false,\n  \"channel\": \"技術ノート\",\n  \"category\": \"Python\",\n  \"tags\": [\"Python\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"ログ監視-python-watchdogログローテーション未完成\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#%E3%83%AD%E3%82%B0%E7%9B%A3%E8%A6%96-python-watchdog%E3%83%AD%E3%82%B0%E3%83%AD%E3%83%BC%E3%83%86%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E6%9C%AA%E5%AE%8C%E6%88%90\",\n    \"aria-label\": \"ログ監視 python watchdogログローテーション未完成 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u30ED\\u30B0\\u76E3\\u8996 Python watchdog\\uFF08\\u30ED\\u30B0\\u30ED\\u30FC\\u30C6\\u30FC\\u30B7\\u30E7\\u30F3\\u672A\\u5B8C\\u6210\\uFF09\"), mdx(\"p\", null, \"\\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u306E\\u30ED\\u30B0\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u76E3\\u8996\\u3059\\u308B\\u30B7\\u30B9\\u30C6\\u30E0\\u3092\\u3064\\u304F\\u308B\\u3002\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://qiita.com/ksato9700/items/ea4b769d010e8cf1fb0c\"\n  }, \"\\u30D5\\u30A1\\u30A4\\u30EB\\u306E\\u66F4\\u65B0\\u3092\\u304D\\u3063\\u304B\\u3051\\u306B\\u30B3\\u30DE\\u30F3\\u30C9\\u5B9F\\u884C (python\\u7DE8) - Qiita\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://qiita.com/hidetzu/items/dd51ea30758bd4c8e521\"\n  }, \"\\u30ED\\u30B0\\u76E3\\u8996\\u30B9\\u30AF\\u30EA\\u30D7\\u30C8 - Qiita\"))), mdx(\"p\", null, \"\\u4E0A\\u306E2\\u3064\\u3092\\u304C\\u3063\\u3061\\u3083\\u3093\\u3053\\u3057\\u305F\\u3084\\u3064\\u3092\\u4F5C\\u3063\\u305F\\u3002\\u30D5\\u30A1\\u30A4\\u30EB\\u306E\\u5909\\u66F4\\u76E3\\u8996\\u306Fwatchdog\\u3001\\u8AAD\\u307F\\u53D6\\u308A\\u306F\\u3075\\u3064\\u3046\\u306EIO\\u3002\"), mdx(\"p\", null, \"\\u203B \\u3046\\u30FC\\u3093\\u3001\\u30ED\\u30B0\\u30ED\\u30FC\\u30C6\\u30FC\\u30B7\\u30E7\\u30F3\\u5BFE\\u5FDC\\u304C\\u5FAE\\u5999\\u304B\\u3082\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"from watchdog.observers import Observer\\nfrom watchdog.events import FileSystemEventHandler\\nimport time\\nimport os\\nfrom stat import *\\n\\nclass FileWatchHandler(FileSystemEventHandler):\\n    def __init__(self, path):\\n        self.path = os.path.realpath(path)\\n        self.fp = None\\n        self.fpos = None\\n\\n        self.init()\\n\\n        filesize = os.stat(self.path)[ST_SIZE]\\n        self.fp.seek(filesize) # \\u30D5\\u30A1\\u30A4\\u30EB\\u672B\\u5C3E\\n        self.fpos = filesize\\n\\n    def init(self):\\n        fp = self.fp\\n        if fp:\\n            fp.close()\\n        fp = open(self.path, 'r')\\n\\n        self.fp = fp\\n        self.fpos = None\\n\\n    def on_created(self, event):\\n        if event.src_path == self.path:\\n            print('reset')\\n            self.init()\\n\\n    def on_modified(self, event):\\n        if event.src_path == self.path:\\n            print('modified')\\n            self.tail_f()\\n\\n    def tail_f(self):\\n        if self.fpos:\\n            self.fp.seek(self.fpos)\\n\\n        while True:\\n            self.fpos = self.fp.tell()\\n            line = self.fp.readline()\\n\\n            if not line:\\n                break\\n            self.analyze(line)\\n\\n    def analyze(self, line):\\n        # TODO:\\n        print('!', line)\\n\\n    def close(self):\\n        self.fp.close()\\n\\npath = 'test.txt'\\n\\nhandler = FileWatchHandler(path)\\nobserver = Observer()\\nobserver.schedule(handler, os.path.dirname(os.path.realpath(path)))\\nobserver.start()\\n\\ntry:\\n    observer.join()\\nexcept KeyboardInterrupt:\\n    pass\\n\\nobserver.stop()\\nhandler.close()\\n\\nprint('closed')\\n\")), mdx(\"p\", null, \"\\u203B \\u3061\\u3087\\u3063\\u3068\\u4FEE\\u6B63\\u3057\\u3066\\u307F\\u305F\\u3051\\u3069\\u3001\\u3084\\u3063\\u3071\\u308A\\u5FAE\\u5999\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"    def tail_f(self):\\n        filesize = os.stat(self.path)[ST_SIZE]\\n        if self.fpos:\\n            if self.fpos <= filesize:\\n                self.fp.seek(self.fpos)\\n            else:\\n                self.init()\\n\\n        while True:\\n            self.fpos = self.fp.tell()\\n            line = self.fp.readline()\\n            \\n            if not line:\\n                break\\n            self.analyze(line)\\n\")), mdx(\"p\", null, \"\\uFF08\\u30ED\\u30B0\\u30ED\\u30FC\\u30C6\\u30FC\\u30B7\\u30E7\\u30F3\\u306F\\u3068\\u3082\\u304B\\u304F\\u3001\\uFF09\\u3042\\u3068\\u306Fanalyze\\u95A2\\u6570\\u306B\\u65B0\\u3057\\u304Fappend\\u3055\\u308C\\u305F\\u884C\\u304C\\u5165\\u3063\\u3066\\u304F\\u308B\\u306E\\u3067\\u3001\\u305D\\u308C\\u305E\\u308C\\u89E3\\u6790\\u3059\\u308C\\u3070OK\\u3002\"), mdx(\"p\", null, \"\\u30ED\\u30B0\\u306F\\u5B9A\\u671F\\u7684\\u306B\\u5206\\u5272\\u3055\\u308C\\u3066\\u5225\\u30D5\\u30A1\\u30A4\\u30EB\\u306B\\u79FB\\u52D5\\u3001\\u65B0\\u3057\\u3044\\u30ED\\u30B0\\u304C\\u5165\\u3063\\u3066\\u304D\\u305F\\u3089\\u65B0\\u898F\\u30D5\\u30A1\\u30A4\\u30EB\\u306B\\u306A\\u308B\\u306E\\u3067\\u3001\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"on_created\"), \"\\u3067\\u958B\\u304D\\u76F4\\u3057\\uFF08\\u5B9F\\u306Fseek\\u3060\\u3051\\u3059\\u308C\\u3070\\u3044\\u3044\\u306E\\u304B\\u306A\\uFF1F\\uFF09\\u3002\\n\\u3053\\u306E\\u3068\\u304D\\u3001\\u4F5C\\u6210\\u3068\\u540C\\u6642\\u306B\\u5185\\u5BB9\\u304C\\u66F8\\u304D\\u8FBC\\u307E\\u308C\\u308B\\u3068\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"on_modified\"), \"\\u304C\\u843D\\u3068\\u3057\\u3061\\u3083\\u3063\\u305F\\u306E\\u3067\\u30D5\\u30A1\\u30A4\\u30EB\\u672B\\u5C3E\\u3078\\u306E\\u79FB\\u52D5\\u306F\\u5165\\u308C\\u3066\\u306A\\u3044\\u3002\\n\\u305D\\u308C\\u304B\\u3089\\u30EA\\u30CD\\u30FC\\u30E0\\u3067\\u30D5\\u30A1\\u30A4\\u30EB\\u304C\\u3084\\u3063\\u3066\\u304D\\u3066\\u3082\\u52D5\\u304B\\u306A\\u3044\\uFF08\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"on_moved\"), \"\\u3067\\u3044\\u3051\\u308B\\u3051\\u3069\\uFF09\\u3002\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"observer.join\"), \"\\u3063\\u3066\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"join\"), \"\\u3060\\u3057\\u5225\\u30B9\\u30EC\\u30C3\\u30C9\\u306E\\u7D42\\u4E86\\u5F85\\u3061\\u3060\\u3068\\u601D\\u3046\\u306E\\u3067\\u3001\\u3053\\u308C\\u3067\\u3044\\u3044\\u304B\\u306A\\u3001\\u3068\\u601D\\u3063\\u305F\\u3051\\u3069\\u516C\\u5F0F\\u30B5\\u30F3\\u30D7\\u30EB\\uFF08\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/gorakhargosh/watchdog\"\n  }, \"GitHub - gorakhargosh/watchdog: Python library and shell utilities to monitor filesystem events.\"), \"\\uFF09\\u306F\\u9055\\u3046...\\u3002\\u307E\\u3042\\u30D7\\u30ED\\u30BB\\u30B9\\u6B7B\\u3093\\u3060\\u3089\\u306A\\u3093\\u306B\\u305B\\u3088\\u6B62\\u307E\\u308B\\u3068\\u9858\\u3063\\u3066\\u3002\"), mdx(\"p\", null, \"\\u672B\\u5C3E\\u8FFD\\u5F93\\u52D5\\u4F5C\\u304C\\u3051\\u3063\\u3053\\u3046\\u9762\\u5012\\u304F\\u3055\\u3044\\u306E\\u3067\\u3001\\u3059\\u306A\\u304A\\u306B\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tail -f\"), \"\\u3092Popen\\u3059\\u308C\\u3070\\u3088\\u304B\\u3063\\u305F\\u304B\\u306A...\"), mdx(\"p\", null, \"diff\\u3082\\u305D\\u306E\\u3046\\u3061\\u4F7F\\u3046\\u304B\\u3082\\uFF1F\\u3000\\u4ECA\\u56DE\\u306F\\u95A2\\u4FC2\\u306A\\u3044\\u3051\\u3069\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.python.org/ja/3/library/difflib.html\"\n  }, \"difflib --- \\u5DEE\\u5206\\u306E\\u8A08\\u7B97\\u3092\\u52A9\\u3051\\u308B \\u2014 Python 3.7.4 \\u30C9\\u30AD\\u30E5\\u30E1\\u30F3\\u30C8\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://kakurasan.hatenadiary.jp/entry/20100308/p1\"\n  }, \"Python\\u306Edifflib\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u3092\\u7528\\u3044\\u3066\\u8907\\u6570\\u884C\\u30C6\\u30AD\\u30B9\\u30C8\\u3069\\u3046\\u3057\\u306E\\u5DEE\\u5206\\u3092\\u53D6\\u5F97\\u3059\\u308B - \\u8A66\\u9A13\\u904B\\u7528\\u4E2D\\u306ALinux\\u5099\\u5FD8\\u9332\\u30FB\\u65E7\\u8A18\\u4E8B\"))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"ログ監視 Python watchdog（ログローテーション未完成） アプリケーションのログファイルを監視するシステムをつくる。 ファイルの更新をきっかけにコマンド実行 (python編) - Qiita ログ監視スクリプト - Qiita 上の…","tableOfContents":{"items":[{"url":"#ログ監視-python-watchdogログローテーション未完成","title":"ログ監視 Python watchdog（ログローテーション未完成）"}]},"frontmatter":{"title":"ログ監視 Python watchdog（ログローテーション未完成）","date":"2019-07-10T00:09:55.000Z","updated":null,"noindex":null,"channel":"技術ノート","category":"Python","tags":["Python"]}}},"pageContext":{"id":"9afa83db-68d7-5a59-8b1a-dff34a51a36a"}},
    "staticQueryHashes": []}