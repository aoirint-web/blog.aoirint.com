{
    "componentChunkName": "component---src-layouts-entry-page-layout-tsx",
    "path": "/entry/2019/jetson_nano_setup_and_try/",
    "result": {"data":{"mdx":{"id":"7b94e649-4dc0-53e8-882a-9a8c3ecb44d2","slug":"2019/jetson_nano_setup_and_try/","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Jetson Nano セットアップとおためし\",\n  \"date\": \"2019-12-02 10:00:00\",\n  \"draft\": false,\n  \"channel\": \"技術ノート\",\n  \"category\": \"Jetson Nano\",\n  \"tags\": [\"Jetson Nano\", \"機械学習\", \"組み込み\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"jetson-nano-セットアップとおためし\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#jetson-nano-%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97%E3%81%A8%E3%81%8A%E3%81%9F%E3%82%81%E3%81%97\",\n    \"aria-label\": \"jetson nano セットアップとおためし permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Jetson Nano \\u30BB\\u30C3\\u30C8\\u30A2\\u30C3\\u30D7\\u3068\\u304A\\u305F\\u3081\\u3057\"), mdx(\"p\", null, \"\\u30E1\\u30E2\\u3002\"), mdx(\"h2\", {\n    \"id\": \"tplink-wireless-driver\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#tplink-wireless-driver\",\n    \"aria-label\": \"tplink wireless driver permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"TPLink Wireless Driver\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.nvidia.com/embedded/jetson-nano-developer-kit\"\n  }, \"\\u958B\\u767A\\u30DC\\u30FC\\u30C9\"), \"\\u306B\\u306FWi-Fi\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u304C\\u4E57\\u3063\\u3066\\u306A\\u3044\\u306E\\u3067\\u3001USB\\u30C9\\u30F3\\u30B0\\u30EB\\u3067\\u7121\\u7DDALAN\\u306B\\u3064\\u306A\\u3050\\uFF08\\u30BB\\u30C3\\u30C8\\u30A2\\u30C3\\u30D7\\u306F\\u6709\\u7DDA\\u3067\\uFF09\\u3002\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.tp-link.com/jp/home-networking/adapter/archer-t2u-nano/\"\n  }, \"TPLink Archer T2U Nano\"), \"\\u3092\\u4F7F\\u3046\\u3002\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://yaplog.jp/shizuka2/archive/256\"\n  }, \"tp-link Archer T2U Nano AC600\\u3092Linux\\u3067\\u4F7F\\u3046\\u65B9\\u6CD5 \\uFF5C Shizuka's Style (Duo)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://qiita.com/daisuzu_/items/8d6913f3bda1b7434526\"\n  }, \"Jetson Nano \\u3067 TP-LINK Archer T2U Nano \\u3092\\u4F7F\\u3046 - Qiita\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://devtalk.nvidia.com/default/topic/1051503/jetson-nano/make-usb-wifi-dongle-rtl8812au-works-on-nano/\"\n  }, \"https://devtalk.nvidia.com/default/topic/1051503/jetson-nano/make-usb-wifi-dongle-rtl8812au-works-on-nano/\"))), mdx(\"p\", null, \"NVIDIA Developer Forums\\u306E\\u3064\\u3044\\u6700\\u8FD1\\uFF0811/27\\uFF09\\u306E\\u30DD\\u30B9\\u30C8\\u3067\\u3001\\u65B0\\u3057\\u3044commit\\u3067\\u52D5\\u304B\\u306A\\u304F\\u306A\\u3063\\u3061\\u3083\\u3063\\u305F\\u304B\\u3089Commit ID\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"d277c36\"), \"\\u304C\\u3044\\u3044\\u3088\\u3001\\u3063\\u3066\\u3044\\u3063\\u3066\\u308B\\u4EBA\\u304C\\u3044\\u308B\\u3002\\u3067\\u3082T2U Nano\\u306EID\\u304C\\u767B\\u9332\\u3055\\u308C\\u305F\\u306E\\u306F2\\u3064\\u5F8C\\u306E\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"4235b0e\"), \"\\u306A\\u306E\\u3067\\u3001\\u3053\\u308C\\u3092\\u4F7F\\u3063\\u3066\\u307F\\u305F\\u3051\\u3069\\u3001\\u3053\\u308C\\u3067\\u52D5\\u3044\\u305F\\uFF08OS\\u306Fr32.2.3\\uFF09\\u3002\\u3053\\u306E1\\u3064\\u5F8C\\uFF08\\u73FE\\u5728master\\u306E\\u6700\\u65B0commit\\uFF09\\u306E\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fa68771\"), \"\\u306F\\u63A5\\u7D9A\\u304C\\u78BA\\u7ACB\\u3057\\u306A\\u304B\\u3063\\u305F\\uFF08\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u306E\\u5165\\u529B\\u3092\\u4F55\\u5EA6\\u3067\\u3082\\u6C42\\u3081\\u3089\\u308C\\u308B\\uFF09\\u3002\\u8B66\\u544A\\u56DE\\u907F\\u306E\\u305F\\u3081\\u306B\\u30EA\\u30D5\\u30A1\\u30AF\\u30BF\\u30EA\\u30F3\\u30B0\\u3057\\u305F\\u3089\\u30D0\\u30B0\\u3063\\u305F\\u3063\\u307D\\u3044\\uFF08\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/abperiasamy/rtl8812AU_8821AU_linux/commit/fa68771376a637c0b5f9cfa53da008570939a259#commitcomment-35946948\"\n  }, \"\\u30B3\\u30DF\\u30C3\\u30C8\\u30B3\\u30E1\\u30F3\\u30C8\"), \"\\u3001\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/abperiasamy/rtl8812AU_8821AU_linux/pull/310\"\n  }, \"\\u30D7\\u30EB\\u30EA\\u30AF\"), \"\\uFF09\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"sudo apt install dkms\\n\\ngit clone https://github.com/abperiasamy/rtl8812AU_8821AU_linux.git\\ngit checkout 4235b0ec7d7220a6364586d8e25b1e8cb99c36f1\\n\\nEdit Makefile\\nCONFIG_PLATFORM_I386_PC = n\\nCONFIG_PLATFORM_ARM_JET_NANO = y\\n\\nsudo make -f Makefile.dkms install\\nreboot\\n\")), mdx(\"h2\", {\n    \"id\": \"ibus-mozc\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#ibus-mozc\",\n    \"aria-label\": \"ibus mozc permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"ibus-mozc\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"sudo apt install ibus-mozc\\nkillall ibus-daemon\\nibus-daemon -x &\\n\")), mdx(\"h2\", {\n    \"id\": \"python\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#python\",\n    \"aria-label\": \"python permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Python\"), mdx(\"p\", null, \"PyTorch\\u4F7F\\u3046\\u306A\\u3089\\u30B7\\u30B9\\u30C6\\u30E0\\u306EPython 3.6.9\\u3092\\u4F7F\\u3046\\u306E\\u304C\\u3088\\u3055\\u305D\\u3046\\u3060\\u3063\\u305F\\u306E\\u3067\\u3001\\u305D\\u306E\\u307E\\u307E\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"sudo apt install python3-pip\\n\")), mdx(\"h2\", {\n    \"id\": \"jetson-stats\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#jetson-stats\",\n    \"aria-label\": \"jetson stats permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"jetson-stats\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://qiita.com/yamamo-to/items/161f7dcf96704b07a1f9\"\n  }, \"Jetson Nano\\u306EGPU\\u30E2\\u30CB\\u30BF\\u30EA\\u30F3\\u30B0 - Qiita\"))), mdx(\"p\", null, \"\\u3044\\u3044\\u611F\\u3058\\u306B\\u72B6\\u614B\\u3092\\u78BA\\u8A8D\\u3067\\u304D\\u308B\\u3084\\u3064\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"# pip3 install jetson-stats\\n# jtop\\nNVIDIA Jetson NANO/TX1 - Jetpack UNKNOWN [L4T 32.2.3]\\nCPU1 [|||||    Schedutil -  21%] 614MHz\\nCPU2 [|||      Schedutil -  15%] 614MHz\\nCPU3 [|||||    Schedutil -  20%] 614MHz\\nCPU4 [||||     Schedutil -  18%] 614MHz\\n\\nMem [|||||||||||||||||||||||||||||||                   2.1G/4.0GB] (lfb 95x4MB)\\nImm [                                                    0kB/252kB] (lfb 252kB)\\nSwp [                                                 0.0GB/2.0GB] (cached 0MB)\\nEMC [||                                                              4%] 1.6GHz\\n\\nGPU [||||                                                            7%] 153MHz\\nDsk [########################                                    10.1GB/29.2GB]\\n          [info]          [Sensor]   [Temp]         [Power/mW]   [Cur]   [Avr]\\nUpT: 0 days 0:30:1        AO         39.50C         POM_5V_CPU   288     672\\nFAN [         0%] Ta=  0% CPU        32.00C         POM_5V_GPU   82      85\\nJetson Clocks: [inactive] GPU        28.00C         POM_5V_IN    1895    2511\\nNV Power[0]: MAXN         PLL        30.00C\\nAPE: 25MHz                PMIC      100.00C\\nHW engine:                thermal    29.75C\\n ENC: NOT RUNNING\\n DEC: NOT RUNNING\\n\")), mdx(\"p\", null, \"\\u3044\\u3061\\u304A\\u3046\\u30C7\\u30D5\\u30A9\\u30EB\\u30C8\\u3067\\u3082\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tegrastats\"), \"\\u3067\\u72B6\\u614B\\u3092watch\\u3067\\u304D\\u308B\\u3002\"), mdx(\"h2\", {\n    \"id\": \"パフォーマンス最大化発熱注意\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E3%83%91%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%B3%E3%82%B9%E6%9C%80%E5%A4%A7%E5%8C%96%E7%99%BA%E7%86%B1%E6%B3%A8%E6%84%8F\",\n    \"aria-label\": \"パフォーマンス最大化発熱注意 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u30D1\\u30D5\\u30A9\\u30FC\\u30DE\\u30F3\\u30B9\\u6700\\u5927\\u5316\\uFF08\\u767A\\u71B1\\u6CE8\\u610F\\uFF09\"), mdx(\"p\", null, \"5V4A\\u306EDC\\u96FB\\u6E90\\u3092\\u7528\\u610F\\u3057\\u3066\\u3001J48\\u306B\\u30B8\\u30E3\\u30F3\\u30D1\\u30FC\\u30D4\\u30F3\\u3092\\u633F\\u3059\\uFF08\\u96FB\\u6E90\\u4E0D\\u8DB3\\u3067\\u843D\\u3061\\u308B\\u304B\\u3082\\uFF09\\u3002\"), mdx(\"p\", null, \"\\u30B3\\u30DE\\u30F3\\u30C9\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jetson_clocks\"), \"\\u306F\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u306A\\u3057\\u3067\\u547C\\u3073\\u51FA\\u3059\\u3068CPU\\u3001GPU\\u3001EMC\\uFF08\\u30E1\\u30E2\\u30EA\\uFF1F\\uFF09\\u306E\\u30AF\\u30ED\\u30C3\\u30AF\\u3092\\u6700\\u5927\\u5316\\u3059\\u308B\\u3002\\u71B1\\u66B4\\u8D70\\u3059\\u308B\\u304B\\u3082\\u306A\\u306E\\u3067\\u71B1\\u5BFE\\u7B56\\u3057\\u3066\\u306A\\u3044\\u5834\\u5408\\u306F\\u3084\\u3089\\u306A\\u3044\\u65B9\\u304C\\u3044\\u3044\\u304B\\u3082\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"\\u30D8\\u30EB\\u30D7\\n# jetson_clocks -h\\n\\n\\u30C7\\u30D5\\u30A9\\u30EB\\u30C8\\u306E\\u8A2D\\u5B9A\\n# jetson_clocks --show\\nSOC family:tegra210  Machine:NVIDIA Jetson Nano Developer Kit\\nOnline CPUs: 0-3\\nCPU Cluster Switching: Disabled\\ncpu0: Online=1 Governor=schedutil MinFreq=102000 MaxFreq=1428000 CurrentFreq=1036800 IdleStates: WFI=1 c7=1 \\ncpu1: Online=1 Governor=schedutil MinFreq=102000 MaxFreq=1428000 CurrentFreq=921600 IdleStates: WFI=1 c7=1 \\ncpu2: Online=1 Governor=schedutil MinFreq=102000 MaxFreq=1428000 CurrentFreq=1132800 IdleStates: WFI=1 c7=1 \\ncpu3: Online=1 Governor=schedutil MinFreq=102000 MaxFreq=1428000 CurrentFreq=1428000 IdleStates: WFI=1 c7=1 \\nGPU MinFreq=76800000 MaxFreq=921600000 CurrentFreq=230400000\\nEMC MinFreq=204000000 MaxFreq=1600000000 CurrentFreq=1600000000 FreqOverride=0\\nFan: speed=0\\nNV Power Mode: MAXN\\n\\n# jetson_clocks --store ~/default_clocks.data\\n\\n# jetson_clocks\\n\\n# jetson_clocks --show\\nSOC family:tegra210  Machine:NVIDIA Jetson Nano Developer Kit\\nOnline CPUs: 0-3\\nCPU Cluster Switching: Disabled\\ncpu0: Online=1 Governor=schedutil MinFreq=1428000 MaxFreq=1428000 CurrentFreq=1428000 IdleStates: WFI=0 c7=0 \\ncpu1: Online=1 Governor=schedutil MinFreq=1428000 MaxFreq=1428000 CurrentFreq=1428000 IdleStates: WFI=0 c7=0 \\ncpu2: Online=1 Governor=schedutil MinFreq=1428000 MaxFreq=1428000 CurrentFreq=1428000 IdleStates: WFI=0 c7=0 \\ncpu3: Online=1 Governor=schedutil MinFreq=1428000 MaxFreq=1428000 CurrentFreq=1428000 IdleStates: WFI=0 c7=0 \\nGPU MinFreq=921600000 MaxFreq=921600000 CurrentFreq=921600000\\nEMC MinFreq=204000000 MaxFreq=1600000000 CurrentFreq=1600000000 FreqOverride=1\\nFan: speed=255\\nNV Power Mode: MAXN\\n\\n# jetson_clocks --restore ~/default_clocks.data\\n# jetson_clocks --show\\nSOC family:tegra210  Machine:NVIDIA Jetson Nano Developer Kit\\nOnline CPUs: 0-3\\nCPU Cluster Switching: Disabled\\ncpu0: Online=1 Governor=schedutil MinFreq=102000 MaxFreq=1428000 CurrentFreq=1428000 IdleStates: WFI=1 c7=1 \\ncpu1: Online=1 Governor=schedutil MinFreq=102000 MaxFreq=1428000 CurrentFreq=921600 IdleStates: WFI=1 c7=1 \\ncpu2: Online=1 Governor=schedutil MinFreq=102000 MaxFreq=1428000 CurrentFreq=1132800 IdleStates: WFI=1 c7=1 \\ncpu3: Online=1 Governor=schedutil MinFreq=102000 MaxFreq=1428000 CurrentFreq=1326000 IdleStates: WFI=1 c7=1 \\nGPU MinFreq=76800000 MaxFreq=921600000 CurrentFreq=230400000\\nEMC MinFreq=204000000 MaxFreq=1600000000 CurrentFreq=1600000000 FreqOverride=0\\nFan: speed=0\\nNV Power Mode: MAXN\\n\")), mdx(\"h2\", {\n    \"id\": \"pytorch\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#pytorch\",\n    \"aria-label\": \"pytorch permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"PyTorch\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://devtalk.nvidia.com/default/topic/1049071/jetson-nano/pytorch-for-jetson-nano-version-1-3-0-now-available/\"\n  }, \"https://devtalk.nvidia.com/default/topic/1049071/jetson-nano/pytorch-for-jetson-nano-version-1-3-0-now-available/\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"pip3 install numpy # takes long..\\npip3 install torch-1.3.0-cp36-cp36m-linux_aarch64.whl\\n\")), mdx(\"h2\", {\n    \"id\": \"torchvision\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#torchvision\",\n    \"aria-label\": \"torchvision permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"TorchVision\"), mdx(\"p\", null, \"setup.py\\u304B\\u3089install\\u306E\\u9014\\u4E2D\\u3067Pillow\\u304C\\u81EA\\u52D5\\u3067\\u30D3\\u30EB\\u30C9\\u3055\\u308C\\u308B\\u3051\\u3069\\u3001\\u30E9\\u30A4\\u30D6\\u30E9\\u30EA\\u304C\\u306A\\u3044\\u3068\\u5931\\u6557\\u3059\\u308B\\u306E\\u3067\\u4E8B\\u524D\\u30A4\\u30F3\\u30B9\\u30C8\\u30FC\\u30EB\\u3002\"), mdx(\"p\", null, \"\\u5FC5\\u9808\\u306F\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"libjpeg\"), \"\\u3068\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"zlib\"), \"\\u3002\\u3042\\u3068\\u4F7F\\u3044\\u305D\\u3046\\u306A\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"libfreetype\"), \"\\u3082\\uFF08\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"zlib\"), \"\\u3068\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"libfreetype\"), \"\\u306F\\u30C7\\u30D5\\u30A9\\u30EB\\u30C8\\u3067\\u5165\\u3063\\u3066\\u308B\\uFF09\\u3002\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://pillow.readthedocs.io/en/stable/installation.html\"\n  }, \"Installation \\u2014 Pillow (PIL Fork) 6.2.1 documentation\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"sudo apt install libjpeg-turbo8-dev zlib1g-dev\\nsudo apt install libfreetype6-dev\\n\\npip3 install Pillow\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"git clone https://github.com/pytorch/vision.git\\ncd vision\\npython3 setup.py install --user # takes long..\\n\")), mdx(\"h2\", {\n    \"id\": \"動作テスト\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E5%8B%95%E4%BD%9C%E3%83%86%E3%82%B9%E3%83%88\",\n    \"aria-label\": \"動作テスト permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u52D5\\u4F5C\\u30C6\\u30B9\\u30C8\"), mdx(\"p\", null, \"\\uFF08Clock\\uFF1A\\u30C7\\u30D5\\u30A9\\u30EB\\u30C8\\uFF09\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"pip3 install ipython\\necho 'export PATH=$HOME/.local/bin:$PATH' >> ~/.bashrc\\nsource ~/.bashrc\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"In [1]: import torch                                                            \\n\\nIn [2]: torch.cuda.is_available()\\nOut[2]: True\\n\\nIn [3]: torch.cuda.device_count()\\nOut[3]: 1\\n\\nIn [4]: device = torch.device('cuda:0')\\n\\nIn [5]: x = torch.randn(1, 3, 40, 40)\\n\\nIn [6]: x = x.to(device)\\n\\nIn [7]: x.shape\\nOut[7]: torch.Size([1, 3, 40, 40])\\n\\nIn [8]: x\\nOut[8]: \\ntensor([[[[-0.0362, -0.6796,  0.6484,  ..., -0.5588,  0.3949, -0.8214],\\n          [-0.5975,  0.6352,  0.9712,  ..., -0.4434,  0.4439, -0.2363],\\n          [ 0.2326,  0.1052,  0.5346,  ..., -0.7047, -0.0173, -1.1312],\\n          ...,\\n          [-0.0730, -0.7666,  0.7147,  ...,  0.8821, -0.0262, -0.6976],\\n          [ 0.9593,  1.0495,  0.6041,  ...,  0.2833,  0.5237, -0.5829],\\n          [-0.4293, -1.9287,  0.6741,  ..., -1.0791, -0.5570, -0.3463]],\\n\\n         [[-0.5106, -0.3363,  0.2770,  ..., -1.6835,  2.2409,  0.5745],\\n          [-0.9233,  0.7389,  0.6966,  ..., -0.5657, -0.4024, -0.5671],\\n          [-1.7160, -1.3546,  0.4675,  ...,  1.8385, -0.9948,  1.0485],\\n          ...,\\n          [ 0.8693,  0.2434,  0.7501,  ..., -0.9752,  2.3783, -0.4887],\\n          [-0.2279, -1.1861, -1.2003,  ..., -0.7934,  0.3169, -2.3324],\\n          [-1.1039, -1.6662, -0.0719,  ...,  0.6115,  2.2238, -0.8375]],\\n\\n         [[-1.2368,  0.3786, -0.7985,  ...,  0.0504,  0.3354, -0.3505],\\n          [ 0.3309,  0.8257,  0.4800,  ..., -1.6101, -0.4429,  0.3643],\\n          [ 0.5604,  1.6997, -0.5299,  ..., -0.4896,  1.0926,  0.0423],\\n          ...,\\n          [ 1.8049, -1.0500, -1.3723,  ..., -0.4516,  0.5884,  1.3404],\\n          [ 0.3622,  0.6343, -0.0500,  ..., -0.0991,  0.9009,  0.7298],\\n          [ 2.3776, -0.1111,  0.2054,  ..., -1.4465, -2.2340, -1.0085]]]],\\n       device='cuda:0')\\n\")), mdx(\"p\", null, \"\\u52D5\\u3044\\u305F\\u3051\\u3069\\u3001to\\u304C\\u3081\\u3063\\u3061\\u3083\\u9045\\u304B\\u3063\\u305F\\u6C17\\u304C\\u3059\\u308B..\"), mdx(\"h2\", {\n    \"id\": \"toが遅いなんぞこれ\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#to%E3%81%8C%E9%81%85%E3%81%84%E3%81%AA%E3%82%93%E3%81%9E%E3%81%93%E3%82%8C\",\n    \"aria-label\": \"toが遅いなんぞこれ permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"to\\u304C\\u9045\\u3044\\u3002\\u306A\\u3093\\u305E\\u3053\\u308C\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"In [1]: import time\\nIn [2]: import torch\\n\\nIn [3]: x = torch.randn(1, 3, 40, 40)\\n\\nIn [4]: ts = time.time(); x = x.cuda(); elapsed = time.time() - ts;\\n\\nIn [5]: elapsed\\nOut[5]: 8.121735572814941\\n\")), mdx(\"p\", null, \"8\\u79D2...\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"In [6]: z = torch.randn(1, 3, 40, 40)\\n\\nIn [7]: ts = time.time(); z = z.cuda(); elapsed = time.time() - ts;\\n\\nIn [8]: elapsed\\nOut[8]: 0.0011272430419921875\\n\\nIn [9]: y = torch.randn(1, 3, 512, 512)\\n\\nIn [10]: ts = time.time(); y = y.cuda(); elapsed = time.time() - ts;\\n\\nIn [11]: elapsed\\nOut[11]: 0.02282571792602539\\n\")), mdx(\"p\", null, \"\\u521D\\u56DE\\u3060\\u3051\\u9045\\u3044\\u3002\\u521D\\u671F\\u5316\\u3067\\u3082\\u8D70\\u3063\\u3066\\u308B\\u3093\\u3060\\u308D\\u3046\\u304B..\"), mdx(\"p\", null, \"ipython\\u30D7\\u30ED\\u30BB\\u30B9\\u306EMem\\u3092\\u898B\\u3066\\u307F\\u308B\\u3068\\u3001\\u521D\\u56DE\\u306EtoGPU\\u306E\\u524D\\u5F8C\\u3067600MiB\\u304F\\u3089\\u3044Mem\\u4F7F\\u7528\\u91CF\\u304C\\u5897\\u3048\\u305F\\u304C\\u30012\\u56DE\\u76EE\\u4EE5\\u964D\\u306F0.1MiB\\u304F\\u3089\\u3044\\u306E\\u5897\\u52A0\\u3060\\u3063\\u305F\\u3002\\u521D\\u56DE\\u306B\\u306A\\u306B\\u304B\\u3057\\u3089\\u306E\\u521D\\u671F\\u5316\\u51E6\\u7406\\u304C\\u5165\\u3063\\u3066\\u308B\\u3063\\u307D\\u3044..\"), mdx(\"h2\", {\n    \"id\": \"メモリ\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E3%83%A1%E3%83%A2%E3%83%AA\",\n    \"aria-label\": \"メモリ permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u30E1\\u30E2\\u30EA\"), mdx(\"p\", null, \"\\u30C7\\u30B9\\u30AF\\u30C8\\u30C3\\u30D7\\u74B0\\u5883\\u3042\\u308A\\u3001\\u30D6\\u30E9\\u30A6\\u30B6\\u4ED8\\u304D\\u3067Mem 2.2/4.0GB\\u3001Swap 1.3/2.0GB\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"import torch\\n\\nx = torch.randn(1, 3, 512, 512)\\nx = x.cuda()\\n\\nz = torch.randn(1, 3, 512, 512)\\nz = z.cuda()\\n\")), mdx(\"p\", null, \"ipython\\u30D7\\u30ED\\u30BB\\u30B9\\u3092\\u307F\\u308B\\u3068\\u3001\\u8D77\\u52D5\\u76F4\\u5F8C33.6MiB\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"import torch\"), \"\\u306769.0MiB\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"x = torch.randn(1, 3, 512, 512)\"), \"\\u306772.4MiB\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"x = x.cuda()\"), \"\\u3067726MiB\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"z = torch.randn(1, 3, 512, 512)\"), \"\\u3067729MiB\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"z = z.cuda()\"), \"\\u3067729Mib\\u5909\\u5316\\u306A\\u3057\\u3002\"), mdx(\"h2\", {\n    \"id\": \"速度\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E9%80%9F%E5%BA%A6\",\n    \"aria-label\": \"速度 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u901F\\u5EA6\"), mdx(\"p\", null, \"\\uFF08Clock\\uFF1A\\u30C7\\u30D5\\u30A9\\u30EB\\u30C8\\uFF09\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"In [1]: import time\\n\\nIn [2]: import torch\\n\\nIn [3]: import torchvision.models as M\\n\\nIn [4]: x = torch.randn(1, 3, 224, 224)\\n\\nIn [5]: x = x.cuda()\\n\\nIn [6]: model = M.resnet50(pretrained=False)\\n\\nIn [7]: model = model.cuda()\\n\\nIn [8]: model.eval();\\n\\nIn [9]: with torch.no_grad():\\n   ...:     ts = time.time()\\n   ...:     y = model(x)\\n   ...:     elapsed = time.time() - ts\\n   ...:                                                                         \\n\\nIn [10]: elapsed                                                                \\nOut[10]: 20.638437747955322\\n\\nIn [11]: y.device                                                               \\nOut[11]: device(type='cuda', index=0)\\n\")), mdx(\"p\", null, \"\\u3042\\u308C\\uFF1F \\u3068\\u3066\\u3082\\u9045\\u3044\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"In [12]: z = torch.randn(1, 3, 224, 224)                                        \\n\\nIn [13]: z = z.cuda()                                                           \\n\\nIn [14]: with torch.no_grad(): \\n    ...:     ts = time.time() \\n    ...:     w = model(z) \\n    ...:     elapsed = time.time() - ts \\n    ...:                                                                        \\n\\nIn [15]: elapsed                                                                \\nOut[15]: 0.5333945751190186\\n\")), mdx(\"p\", null, \"\\u3046\\u30FC\\u3093\\uFF1F\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"In [16]: s = torch.randn(1, 3, 224, 224)\\n\\nIn [17]: s = s.cuda()\\n\\nIn [18]: with torch.no_grad():\\n    ...:     ts = time.time()\\n    ...:     t = model(s)\\n    ...:     elapsed = time.time() - ts\\n    ...:     \\n\\nIn [19]: elapsed\\nOut[19]: 0.04768824577331543\\n\\nIn [20]: u = torch.randn(1, 3, 224, 224).cuda()\\n\\nIn [21]: with torch.no_grad():\\n    ...:     ts = time.time()\\n    ...:     v = model(u)\\n    ...:     elapsed = time.time() - ts\\n    ...:     \\n\\nIn [22]: elapsed\\nOut[22]: 0.045920610427856445\\n\")), mdx(\"p\", null, \"2\\u56DE\\u304F\\u3089\\u3044\\u5B9F\\u884C\\u3057\\u306A\\u3044\\u3068\\u3044\\u3044\\u30D1\\u30D5\\u30A9\\u30FC\\u30DE\\u30F3\\u30B9\\u304C\\u3067\\u306A\\u3044\\u307F\\u305F\\u3044\\u3067\\u3059\\u306D..\"), mdx(\"p\", null, \"\\u4ED5\\u5207\\u308A\\u76F4\\u3057\\u3067\\u3082\\u3046\\u4E00\\u56DE\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"In [1]: import time\\n\\nIn [2]: import torch\\n\\nIn [3]: import torchvision.models as M\\n\\nIn [4]: model = M.resnet50(pretrained=False)\\n\\nIn [5]: model = model.cuda()\\n\\nIn [6]: model.eval();\\n\\nIn [7]: x = torch.randn(1, 3, 224, 224)\\n\\nIn [8]: x = x.cuda()\\n\\nIn [9]: with torch.no_grad():\\n   ...:     ts = time.time()\\n   ...:     y = model(x)\\n   ...:     elapsed = time.time() - ts\\n   ...:     \\n\\nIn [10]: elapsed                                                                \\nOut[10]: 7.917057514190674\\n\")), mdx(\"h2\", {\n    \"id\": \"スワップ作成\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E3%82%B9%E3%83%AF%E3%83%83%E3%83%97%E4%BD%9C%E6%88%90\",\n    \"aria-label\": \"スワップ作成 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u30B9\\u30EF\\u30C3\\u30D7\\u4F5C\\u6210\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://qiita.com/na0AaooQ/items/278a11ed905995bd16af\"\n  }, \"AWS Amazon Linux \\u30B9\\u30EF\\u30C3\\u30D7\\u30D5\\u30A1\\u30A4\\u30EB\\u4F5C\\u6210\\u306B\\u3088\\u308ASwap\\u9818\\u57DF\\u306E\\u30B5\\u30A4\\u30BA\\u3092\\u5897\\u3084\\u3059 - Qiita\"))), mdx(\"p\", null, \"\\u3053\\u306E\\u3042\\u3068\\u306E\\u7BC0\\u3067\\u30E1\\u30E2\\u30EA\\u4E0D\\u8DB3\\u306B\\u9665\\u3063\\u305F\\u306E\\u3067swapfile\\u3092\\u8FFD\\u52A0\\u3059\\u308B\\uFF08Default Mem: 4GB\\u3001Swap: 2GB\\uFF09\\u30022GB\\u8FFD\\u52A0\\u3059\\u308B\\u3053\\u3068\\u306B\\u3059\\u308B\\u3002Swap\\u306B\\u4E57\\u308B\\u3068\\u30D1\\u30D5\\u30A9\\u30FC\\u30DE\\u30F3\\u30B9\\u4F4E\\u4E0B\\u3059\\u308B\\u306F\\u305A\\u306A\\u306E\\u3067\\u6CE8\\u610F\\u3002\"), mdx(\"p\", null, \"\\u6B21\\u306E\\u7BC0\\u3067\\u5909\\u63DB\\u3092Jetson Nano\\u3067\\u30B4\\u30EA\\u62BC\\u3055\\u306A\\u3051\\u308C\\u3070\\u5FC5\\u8981\\u306A\\u3044\\u304B\\u3082\\u3057\\u308C\\u306A\\u3044\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"# check storage capacity\\ndf -h\\n\\ndd if=/dev/zero of=/swapfile bs=1M count=2048\\nchmod 600 /swapfile\\n\\nmkswap /swapfile\\nswapon /swapfile\\n\\n# Append to /etc/fstab\\n/swapfile            swap                     swap           defaults                                     0 0\\n\\n# check swap size\\njtop\\n\")), mdx(\"h2\", {\n    \"id\": \"高速化tensorrt\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E9%AB%98%E9%80%9F%E5%8C%96tensorrt\",\n    \"aria-label\": \"高速化tensorrt permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u9AD8\\u901F\\u5316\\uFF08TensorRT\\uFF09\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://qiita.com/karaage0703/items/67050f2418aa6bb3851a#nvidia-tensorrt%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E3%83%A2%E3%83%87%E3%83%AB%E3%81%AE%E6%9C%80%E9%81%A9%E5%8C%96\"\n  }, \"Jetson Nano\\u3067\\u30EA\\u30A2\\u30EB\\u30BF\\u30A4\\u30E0\\u306B\\u7269\\u4F53\\u691C\\u51FA\\u3092\\u3059\\u308B\\u65B9\\u6CD5\\uFF08TensorFlow Object Detection API/NVIDIA TensorRT\\uFF09 - Qiita\"))), mdx(\"p\", null, \"\\u9AD8\\u901F\\u5316\\u306E\\u305F\\u3081\\u306B\\u306FNVIDIA\\u306ETensorRT\\u306A\\u308B\\u30D7\\u30ED\\u30B0\\u30E9\\u30E0\\u3067\\u30E2\\u30C7\\u30EB\\u3092\\u6700\\u9069\\u5316\\u3059\\u308B\\u5FC5\\u8981\\u304C\\u3042\\u308B\\u3089\\u3057\\u3044\\u30021\\u56DE\\u76EE2\\u56DE\\u76EE\\u306E\\u30AA\\u30FC\\u30D0\\u30FC\\u30D8\\u30C3\\u30C9\\u304C\\u306A\\u304F\\u306A\\u308B\\u3053\\u3068\\u3092\\u671F\\u5F85\\u3002\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developer.nvidia.com/tensorrt\"\n  }, \"NVIDIA TensorRT | NVIDIA Developer\"))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"You can import trained models from every deep learning framework into TensorRT.\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/NVIDIA-AI-IOT/torch2trt\"\n  }, \"GitHub - NVIDIA-AI-IOT/torch2trt: An easy to use PyTorch to TensorRT converter\"))), mdx(\"p\", null, \"PyTorch\\u7528\\u306E\\u5909\\u63DB\\u30B9\\u30AF\\u30EA\\u30D7\\u30C8\\u306F\\u3053\\u308C\\u3063\\u307D\\u3044\\u3002Python\\u30B3\\u30FC\\u30C9\\u4E0A\\u3067\\u30D1\\u30E9\\u30E1\\u30FC\\u30BF\\u8AAD\\u307F\\u8FBC\\u307F\\u6E08\\u307F\\u306E\\u30E2\\u30C7\\u30EB\\u30A4\\u30F3\\u30B9\\u30BF\\u30F3\\u30B9\\u3092\\u6E21\\u3057\\u3066\\u5909\\u63DB\\u3001\\u623B\\u3063\\u3066\\u304F\\u308B\\u30AA\\u30D6\\u30B8\\u30A7\\u30AF\\u30C8\\uFF08\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"torch2trt.TRTModule\"), \"\\uFF09\\u306FPyTorch\\u306E\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nn.Module\"), \"\\u3092\\u7D99\\u627F\\u3057\\u3066\\u3066\\u3001\\u3075\\u3064\\u3046\\u306EModule\\uFF08Model\\uFF09\\u3068\\u540C\\u3058\\u3088\\u3046\\u306B\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"torch.load\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MODULE.load_state_dict\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"torch.save\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MODULE.state_dict()\"), \"\\u3092\\u4F7F\\u3063\\u3066\\u30D1\\u30E9\\u30E1\\u30FC\\u30BF\\u8AAD\\u307F\\u66F8\\u304D\\u3067\\u304D\\u308B\\u307F\\u305F\\u3044\\u3002\"), mdx(\"p\", null, \"\\u5909\\u63DB\\u307E\\u3067\\u306F\\u3075\\u3064\\u3046\\u306EGPU\\u30DE\\u30B7\\u30F3\\u3067\\u3084\\u3089\\u306A\\u3044\\u3068\\u91CD\\u3044\\uFF08\\u3044\\u3061\\u304A\\u3046\\u5909\\u63DB\\u306F\\u3067\\u304D\\u308B\\uFF09\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"git clone https://github.com/NVIDIA-AI-IOT/torch2trt.git\\ncd torch2trt\\npython3 setup.py install --user\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"import torch\\nimport torchvision.models as M\\nfrom torch2trt import torch2trt\\nfrom torch2trt import TRTModule\\n\\n# On GPU Machine\\ntorch_model = M.resnet50(pretrained=False).cuda()\\ndummy = torch.zeros(1, 3, 224, 224).cuda()\\n\\ntrt_model = torch2trt(torch_model, [ dummy ])\\ntorch.save(trt_model.state_dict(), 'trt_model.pth')\\n\\n# On Jetson Nano\\ntrt_model = TRTModule()\\ntrt_model.load_state_dict(torch.load('trt_model.pth'))\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"In [5]: ts = time.time(); model.load_state_dict(torch.load('trt_model.pth')); el\\n   ...: apsed = time.time() - ts\\n\\nIn [6]: elapsed\\nOut[6]: 38.654945611953735\\n\\nIn [7]: ts = time.time(); model.load_state_dict(torch.load('trt_model.pth')); el\\n   ...: apsed = time.time() - ts\\n\\nIn [8]: elapsed\\nOut[8]: 5.191670894622803\\n\\nIn [9]: ts = time.time(); model.load_state_dict(torch.load('trt_model.pth')); el\\n    ...: apsed = time.time() - ts\\n\\nIn [10]: elapsed\\nOut[10]: 7.234739542007446\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"In [18]: ts = time.time(); x = torch.randn(1, 3, 224, 224).cuda(); elapsed = tim\\n    ...: e.time() - ts                                                          \\n\\nIn [19]: elapsed                                                                \\nOut[19]: 0.3353462219238281\\n\\nIn [20]: ts = time.time(); x = torch.randn(1, 3, 224, 224).cuda(); elapsed = tim\\n    ...: e.time() - ts                                                          \\n\\nIn [21]: elapsed                                                                \\nOut[21]: 0.016706228256225586\\n\\nIn [22]: ts = time.time(); x = torch.randn(1, 3, 224, 224).cuda(); elapsed = tim\\n    ...: e.time() - ts                                                          \\n\\nIn [23]: elapsed                                                                \\nOut[23]: 0.015973806381225586\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"In [24]: ts = time.time(); y = model(x); elapsed = time.time() - ts             \\n\\nIn [25]: elapsed                                                                \\nOut[25]: 0.659074068069458\\n\\nIn [26]: ts = time.time(); y = model(x); elapsed = time.time() - ts             \\n\\nIn [27]: elapsed                                                                \\nOut[27]: 0.0033349990844726562\\n\\nIn [28]: ts = time.time(); y = model(x); elapsed = time.time() - ts             \\n\\nIn [29]: elapsed                                                                \\nOut[29]: 0.0031561851501464844\\n\")), mdx(\"p\", null, \"inference\\u306F\\u3060\\u3044\\u3076\\u901F\\u3044\\u3002\\u305F\\u3060\\u30E2\\u30C7\\u30EB\\u30ED\\u30FC\\u30C9\\u304C\\u3068\\u3066\\u3082\\u9045\\u3044...\\u3002\\u305D\\u308C\\u306B\\u3001\\u521D\\u56DE\\u5B9F\\u884C\\u306E\\u9045\\u5EF6\\u306F\\u8EFD\\u6E1B\\u3057\\u3066\\u308B\\u3068\\u306F\\u3044\\u3048\\u6B8B\\u3063\\u3066\\u308B\\u3002\"), mdx(\"h2\", {\n    \"id\": \"sdカード\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#sd%E3%82%AB%E3%83%BC%E3%83%89\",\n    \"aria-label\": \"sdカード permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"SD\\u30AB\\u30FC\\u30C9\"), mdx(\"p\", null, \"\\u3053\\u308C\\u307E\\u3067\\u306E\\u901F\\u5EA6\\u306B\\u3082\\u95A2\\u308F\\u3063\\u3066\\u3044\\u305D\\u3046\\u306A\\u306E\\u3067\\u3001SD\\u30AB\\u30FC\\u30C9\\u306B\\u3064\\u3044\\u3066\\u8ABF\\u3079\\u3066\\u307F\\u308B\\u3002\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://e-words.jp/w/UHS.html\"\n  }, \"UHS\\uFF08Ultra-High Speed\\uFF09\\u3068\\u306F - IT\\u7528\\u8A9E\\u8F9E\\u5178 e-Words\")), mdx(\"p\", null, \"\\u5B89\\u7269\\u3092\\u9078\\u3093\\u3060\\u306E\\u3067\\u3001UHS-I Class1 32GB\\u306ESamsung\\u88FDMicro SD\\u30AB\\u30FC\\u30C9\\uFF08\\u3053\\u308C\\uFF09\\u3092\\u4F7F\\u3063\\u3066\\u3044\\u308B\\u3002UHS Class3\\u306E\\u5834\\u5408\\u6700\\u4F4E\\u30A2\\u30AF\\u30BB\\u30B9\\u901F\\u5EA630MB/s\\u3060\\u304C\\u3001UHS Class1\\u3067\\u306F\\u6700\\u4F4E\\u30A2\\u30AF\\u30BB\\u30B9\\u901F\\u5EA610MB/s\\u3089\\u3057\\u3044\\u3002SD\\u30AB\\u30FC\\u30C9\\u3092\\u5909\\u3048\\u308C\\u3070\\uFF08\\u8AAD\\u307F\\u66F8\\u304D\\u306E\\u304B\\u304B\\u308B\\u3068\\u3053\\u308D\\u3067\\u306F\\uFF09\\u898B\\u8FBC\\u307F\\u30673\\u500D\\u4EE5\\u4E0A\\u901F\\u304F\\u306A\\u308B\\u53EF\\u80FD\\u6027\\u306F\\u3042\\u308B\\u306E\\u304B\\u306A\\u3041\\uFF1F\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Jetson Nano セットアップとおためし メモ。 TPLink Wireless Driver 開発ボード にはWi-Fiモジュールが乗ってないので、USBドングルで無線LANにつなぐ（セットアップは有線で）。 TPLink Archer T2U Nano を使う。 tp…","tableOfContents":{"items":[{"url":"#jetson-nano-セットアップとおためし","title":"Jetson Nano セットアップとおためし","items":[{"url":"#tplink-wireless-driver","title":"TPLink Wireless Driver"},{"url":"#ibus-mozc","title":"ibus-mozc"},{"url":"#python","title":"Python"},{"url":"#jetson-stats","title":"jetson-stats"},{"url":"#パフォーマンス最大化発熱注意","title":"パフォーマンス最大化（発熱注意）"},{"url":"#pytorch","title":"PyTorch"},{"url":"#torchvision","title":"TorchVision"},{"url":"#動作テスト","title":"動作テスト"},{"url":"#toが遅いなんぞこれ","title":"toが遅い。なんぞこれ"},{"url":"#メモリ","title":"メモリ"},{"url":"#速度","title":"速度"},{"url":"#スワップ作成","title":"スワップ作成"},{"url":"#高速化tensorrt","title":"高速化（TensorRT）"},{"url":"#sdカード","title":"SDカード"}]}]},"frontmatter":{"title":"Jetson Nano セットアップとおためし","date":"2019-12-02T10:00:00.000Z","updated":null,"noindex":null,"channel":"技術ノート","category":"Jetson Nano","tags":["Jetson Nano","機械学習","組み込み"]}}},"pageContext":{"id":"7b94e649-4dc0-53e8-882a-9a8c3ecb44d2"}},
    "staticQueryHashes": []}