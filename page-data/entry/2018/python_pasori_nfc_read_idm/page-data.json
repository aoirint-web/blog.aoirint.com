{
    "componentChunkName": "component---src-layouts-entry-page-layout-tsx",
    "path": "/entry/2018/python_pasori_nfc_read_idm/",
    "result": {"data":{"mdx":{"id":"5697f9ed-e000-5fc5-84ac-e76763e1a99f","slug":"2018/python_pasori_nfc_read_idm/","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"PythonからPaSoRiを使って交通系ICカードのIDmを読む\",\n  \"date\": \"2018-08-30 16:46:19\",\n  \"draft\": false,\n  \"channel\": \"技術ノート\",\n  \"category\": \"NFC\",\n  \"tags\": [\"NFC\", \"Python\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"pythonからpasoriを使って交通系icカードのidmを読む\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#python%E3%81%8B%E3%82%89pasori%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E4%BA%A4%E9%80%9A%E7%B3%BBic%E3%82%AB%E3%83%BC%E3%83%89%E3%81%AEidm%E3%82%92%E8%AA%AD%E3%82%80\",\n    \"aria-label\": \"pythonからpasoriを使って交通系icカードのidmを読む permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Python\\u304B\\u3089PaSoRi\\u3092\\u4F7F\\u3063\\u3066\\u4EA4\\u901A\\u7CFBIC\\u30AB\\u30FC\\u30C9\\u306EIDm\\u3092\\u8AAD\\u3080\"), mdx(\"h2\", {\n    \"id\": \"環境\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E7%92%B0%E5%A2%83\",\n    \"aria-label\": \"環境 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u74B0\\u5883\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ubuntu 18.04 (VirtualBox on Windows 10)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Python 2.7.15rc1\\uFF08nfcpy\\u306F\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nfcpy/nfcpy/issues/47\"\n  }, \"Python3\\u975E\\u5BFE\\u5FDC\"), \"\\u306E\\u305F\\u3081\\uFF09\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sony PaSoRi RC-S380\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Suica\")), mdx(\"p\", null, \"\\uFF082019/12/19 \\u8FFD\\u8A18\\uFF09\\u672A\\u691C\\u8A3C\\u3067\\u3059\\u304Cnfcpy\\u304Cv1.0.0\\u3067Python3\\u5BFE\\u5FDC\\u3057\\u305F\\u307F\\u305F\\u3044\\u3067\\u3059\\u3002\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/nfcpy/nfcpy/issues/47#issuecomment-499693493\"\n  }, \"https://github.com/nfcpy/nfcpy/issues/47#issuecomment-499693493\")), mdx(\"h2\", {\n    \"id\": \"セットアップ\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97\",\n    \"aria-label\": \"セットアップ permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u30BB\\u30C3\\u30C8\\u30A2\\u30C3\\u30D7\"), mdx(\"p\", null, \"\\u307E\\u305APaSoRi\\u3092\\u63A5\\u7D9A\\u3059\\u308B\\u3002PaSoRi\\u3092USB\\u30DD\\u30FC\\u30C8\\u306B\\u633F\\u3057\\u3066\\u3001VirtualBox\\u4EEE\\u60F3\\u30DE\\u30B7\\u30F3\\u306E\\u8A2D\\u5B9A\\u304B\\u3089USB\\u3001USB \\u30C7\\u30D0\\u30A4\\u30B9\\u30D5\\u30A3\\u30EB\\u30BF\\u30FC\\u306B\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SONY RC-S380/P\"), \"\\u3092\\u8FFD\\u52A0\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"$ lsusb\\nBus 001 Device 004: ID 054c:06c3 Sony Corp.\\n...\\n\")), mdx(\"p\", null, \"\\u3053\\u308C\\u3067OK\\u3002\"), mdx(\"p\", null, \"\\u6B21\\u306B\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://pypi.org/project/nfcpy/\"\n  }, \"nfcpy\"), \"\\u306E\\u30A4\\u30F3\\u30B9\\u30C8\\u30FC\\u30EB\\uFF08\\u203BPython2\\u306B\\u5C0E\\u5165\\u3059\\u308B\\u3053\\u3068\\u3001virtualenv\\u3092\\u4F7F\\u3046\\u3068\\u3044\\u3044\\u306E\\u3067\\u306F\\uFF09\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"pip install nfcpy\\n\")), mdx(\"p\", null, \"\\u3044\\u304F\\u3089\\u304B\\u6E96\\u5099\\u304C\\u5FC5\\u8981\\u306A\\u306E\\u3067\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"python -m nfc\"), \"\\u3092\\u5B9F\\u884C\\u3059\\u308B\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"$ python -m nfc\\nNo handlers could be found for logger \\\"nfc.llcp.sec\\\"\\nThis is the 0.13.5 version of nfcpy run in Python 2.7.15rc1\\non Linux-4.15.0-33-generic-x86_64-with-Ubuntu-18.04-bionic\\nI'm now searching your system for contactless devices\\n** found usb:054c:06c3 at usb:001:004 but access is denied\\n-- the device is owned by 'root' but you are 'USERNAME'\\n-- also members of the 'root' group would be permitted\\n-- you could use 'sudo' but this is not recommended\\n-- better assign the device to the 'plugdev' group\\n   sudo sh -c 'echo SUBSYSTEM==\\\\\\\"usb\\\\\\\", ACTION==\\\\\\\"add\\\\\\\", ATTRS{idVendor}==\\\\\\\"054c\\\\\\\", ATTRS{idProduct}==\\\\\\\"06c3\\\\\\\", GROUP=\\\\\\\"plugdev\\\\\\\" >> /etc/udev/rules.d/nfcdev.rules'\\n   sudo udevadm control -R # then re-attach device\\nI'm not trying serial devices because you haven't told me\\n-- add the option '--search-tty' to have me looking\\n-- but beware that this may break other serial devs\\nSorry, but I couldn't find any contactless device\\n\")), mdx(\"p\", null, \"\\u4E00\\u822C\\u30E6\\u30FC\\u30B6\\u30FC\\u306E\\u5834\\u5408\\u3053\\u3093\\u306A\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u304C\\u51FA\\u308B\\u306E\\u3067\\u3001\\u6307\\u793A\\u901A\\u308A\\u30C7\\u30D0\\u30A4\\u30B9\\u3092\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"plugdev\"), \"\\u30B0\\u30EB\\u30FC\\u30D7\\u306B\\u5272\\u308A\\u5F53\\u3066\\u308B\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"sudo sh -c 'echo SUBSYSTEM==\\\\\\\"usb\\\\\\\", ACTION==\\\\\\\"add\\\\\\\", ATTRS{idVendor}==\\\\\\\"054c\\\\\\\", ATTRS{idProduct}==\\\\\\\"06c3\\\\\\\", GROUP=\\\\\\\"plugdev\\\\\\\" >> /etc/udev/rules.d/nfcdev.rules'\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/etc/udev/rules.d/nfcdev.rules\"), \"\\u306F\\u3053\\u3046\\u306A\\u308B\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"SUBSYSTEM==\\\"usb\\\", ACTION==\\\"add\\\", ATTRS{idVendor}==\\\"054c\\\", ATTRS{idProduct}==\\\"06c3\\\", GROUP=\\\"plugdev\\\"\\n...\\n\")), mdx(\"p\", null, \"\\u4E0B\\u306E\\u30B3\\u30DE\\u30F3\\u30C9\\u306F\\u30EA\\u30ED\\u30FC\\u30C9\\u3001\\u306E\\u306F\\u305A\\u3060\\u304C\\u3001\\u3046\\u307E\\u304F\\u52D5\\u304B\\u306A\\u3044\\u306E\\u3067PaSoRi\\u3092\\u629C\\u304D\\u5DEE\\u3057\\u3059\\u308B\\uFF08VirtualBox\\u306E\\u30E1\\u30CB\\u30E5\\u30FC\\u304B\\u3089\\u3067\\u3082\\u3001\\u30DB\\u30B9\\u30C8\\u304B\\u3089\\u3067\\u3082\\uFF09\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"sudo udevadm control -R\\n\")), mdx(\"p\", null, \"\\u3082\\u3046\\u4E00\\u5EA6\\u30C1\\u30A7\\u30C3\\u30AF\\u3059\\u308B\\u3068\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u304C\\u5909\\u308F\\u308B\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"$ python -m nfc\\nNo handlers could be found for logger \\\"nfc.llcp.sec\\\"\\nThis is the 0.13.5 version of nfcpy run in Python 2.7.15rc1\\non Linux-4.15.0-33-generic-x86_64-with-Ubuntu-18.04-bionic\\nI'm now searching your system for contactless devices\\n** found usb:054c:06c3 at usb:001:005 but it's already used\\n-- scan sysfs entry at '/sys/bus/usb/devices/1-2:1.0/'\\n-- the device is used by the 'port100' kernel driver\\n-- this kernel driver belongs to the linux nfc subsystem\\n-- you can remove it to free the device for this session\\n   sudo modprobe -r port100\\n-- and blacklist the driver to prevent loading next time\\n   sudo sh -c 'echo blacklist port100 >> /etc/modprobe.d/blacklist-nfc.conf'\\nI'm not trying serial devices because you haven't told me\\n-- add the option '--search-tty' to have me looking\\n-- but beware that this may break other serial devs\\nSorry, but I couldn't find any contactless device\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"sudo modprobe -r port100\\n\")), mdx(\"p\", null, \"\\u3067port100\\u306A\\u308B\\u30C9\\u30E9\\u30A4\\u30D0\\u304C\\u6B62\\u307E\\u308A\\u3001\\u52D5\\u304F\\u3088\\u3046\\u306B\\u306A\\u308B\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"sudo sh -c 'echo blacklist port100 >> /etc/modprobe.d/blacklist-nfc.conf'\\n\")), mdx(\"p\", null, \"\\u3053\\u308C\\u3067\\u6B21\\u56DE\\u8D77\\u52D5\\u4EE5\\u964D\\u3001port100\\u304C\\u8D77\\u52D5\\u3057\\u306A\\u304F\\u306A\\u308B\\u306E\\u304B\\u306A\\u3002\"), mdx(\"p\", null, \"port100\\u3092\\u6B62\\u3081\\u305F\\u3089\\u3082\\u3046\\u4E00\\u5EA6\\u30C1\\u30A7\\u30C3\\u30AF\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"$ python -m nfc\\nNo handlers could be found for logger \\\"nfc.llcp.sec\\\"\\nThis is the 0.13.5 version of nfcpy run in Python 2.7.15rc1\\non Linux-4.15.0-33-generic-x86_64-with-Ubuntu-18.04-bionic\\nI'm now searching your system for contactless devices\\n** found SONY RC-S380/P NFC Port-100 v1.11 at usb:001:005\\nI'm not trying serial devices because you haven't told me\\n-- add the option '--search-tty' to have me looking\\n-- but beware that this may break other serial devs\\n\")), mdx(\"p\", null, \"\\u3061\\u3083\\u3093\\u3068\\u898B\\u3064\\u304B\\u3063\\u305F\\u3089OK\\u3002\"), mdx(\"h2\", {\n    \"id\": \"idmを読む\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#idm%E3%82%92%E8%AA%AD%E3%82%80\",\n    \"aria-label\": \"idmを読む permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"IDm\\u3092\\u8AAD\\u3080\"), mdx(\"p\", null, \"\\u77ED\\u3044\\u30B5\\u30F3\\u30D7\\u30EB\\u30B3\\u30FC\\u30C9\\u3002\"), mdx(\"h3\", {\n    \"id\": \"nfpy\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#nfpy\",\n    \"aria-label\": \"nfpy permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"nf.py\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"import nfc\\nfrom nfc.clf import RemoteTarget\\n\\nclf = nfc.ContactlessFrontend('usb')\\nprint(clf)\\n\\ntag = clf.connect(rdwr={\\n    'on-connect': lambda tag: False\\n})\\n\\nprint(tag)\\n\")), mdx(\"p\", null, \"IC\\u30AB\\u30FC\\u30C9\\u304C\\u306A\\u3044\\u5834\\u5408\\u3001\\u4EE5\\u4E0B\\u306E\\u51FA\\u529B\\u306E\\u5F8C\\uFF08\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"clf.connect\"), \"\\u3067\\uFF09\\u30D6\\u30ED\\u30C3\\u30AF\\u3055\\u308C\\u308B\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"$ python nf.py\\nNo handlers could be found for logger \\\"nfc.llcp.sec\\\"\\nSONY RC-S380/P on usb:001:005\\n\")), mdx(\"p\", null, \"\\u3053\\u3053\\u3067IC\\u30AB\\u30FC\\u30C9\\u3092\\u8FD1\\u3065\\u3051\\u308B\\u3068\\u3001\\u30BF\\u30B0\\u304C\\u51FA\\u529B\\uFF08\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"print(tag)\"), \"\\uFF09\\u3055\\u308C\\u308B\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"$ python nf.py\\nNo handlers could be found for logger \\\"nfc.llcp.sec\\\"\\nSONY RC-S380/P on usb:001:005\\nType3Tag ID=$$$$$$$$$$$$$$$$ PMM=$$$$$$$$$$$$$$$$ SYS=0003\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \">>> print(type(tag))\\n<class 'nfc.tag.tt3.Type3Tag'>\\n>>> \\n>>> print(vars(tag)).keys())\\n['_clf', '_target', 'sys', 'idm', '_ndef', 'pmm', '_nfcid', '_authenticated']\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tag.idm\"), \"\\u3092\\u4F7F\\u3048\\u3070IDm\\u304C\\u53D6\\u308C\\u305D\\u3046\\u306A\\u306E\\u3067OK\\u3002\"), mdx(\"h2\", {\n    \"id\": \"参考\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E5%8F%82%E8%80%83\",\n    \"aria-label\": \"参考 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"\\u53C2\\u8003\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://nfcpy.readthedocs.io/en/latest/topics/get-started.html#read-and-write-tags\"\n  }, \"Getting started \\u2014 nfcpy 1.0.3 documentation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://qiita.com/xshell/items/55302a588b5927dde6b6\"\n  }, \"\\u4EA4\\u901A\\u7CFB\\u96FB\\u5B50\\u30DE\\u30CD\\u30FC\\u30AB\\u30FC\\u30C9\\u3092 \\u9ED2PaSori RC-S380 + Raspberry Pi + python \\u3067 - Qiita\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://kokensha.xyz/raspberry-pi/raspberrypi-sony-pasori-rc-s380-read-nfc-felica/\"\n  }, \"RaspberryPi\\u3067\\uFF01SONY\\u306EPaSoRi\\uFF08RC-S380\\uFF09\\u3067\\uFF08NFC\\uFF09Felica\\u60C5\\u5831\\u3092\\u8AAD\\u307F\\u53D6\\u308B\\uFF01 - KOKENSHA\\u306E\\u6280\\u8853\\u30D6\\u30ED\\u30B0\"))), mdx(\"hr\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://devadjust.exblog.jp/23018234/\"\n  }, \"Raspberry Pi \\u306B nfcpy \\u3092\\u30A4\\u30F3\\u30B9\\u30C8\\u30FC\\u30EB\\u3059\\u308B\\u624B\\u9806 - 2016\\u5E743\\u6708 \\u79C1\\u5BB6\\u7248 : @jsakamoto\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://qiita.com/alt-core/items/abc83b3c1e2dd176717f\"\n  }, \"PaSoRi\\u3092\\u4F7F\\u3063\\u3066python\\u3067NFC\\u30BF\\u30B0\\u3092\\u8AAD\\u307F\\u66F8\\u304D\\u3059\\u308B - Qiita\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nfcpy/nfcpy/blob/master/examples/tagtool.py\"\n  }, \"nfcpy/tagtool.py at master \\xB7 nfcpy/nfcpy \\xB7 GitHub\"))), mdx(\"hr\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://nfcpy.readthedocs.io/en/latest/modules/tag.html#module-nfc.tag.tt3\"\n  }, \"nfc.tag \\u2014 nfcpy 1.0.3 documentation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://raspberry.mcoapps.com/archives/128\"\n  }, \"http://raspberry.mcoapps.com/archives/128\"))), mdx(\"hr\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://qiita.com/YasuakiNakazawa/items/3109df682af2a7032f8d\"\n  }, \"[PASMO] FeliCa \\u304B\\u3089\\u60C5\\u5831\\u3092\\u5438\\u3044\\u51FA\\u3057\\u3066\\u307F\\u308B - FeliCa\\u306E\\u4ED5\\u69D8\\u7DE8 [Android][Kotlin] - Qiita\"))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"PythonからPaSoRiを使って交通系ICカードのIDmを読む 環境 Ubuntu 18.04 (VirtualBox on Windows 10) Python 2.7.15rc1（nfcpyは Python3非対応 のため） Sony PaSoRi RC-S38…","tableOfContents":{"items":[{"url":"#pythonからpasoriを使って交通系icカードのidmを読む","title":"PythonからPaSoRiを使って交通系ICカードのIDmを読む","items":[{"url":"#環境","title":"環境"},{"url":"#セットアップ","title":"セットアップ"},{"url":"#idmを読む","title":"IDmを読む","items":[{"url":"#nfpy","title":"nf.py"}]},{"url":"#参考","title":"参考"}]}]},"frontmatter":{"title":"PythonからPaSoRiを使って交通系ICカードのIDmを読む","date":"2018-08-30T16:46:19.000Z","updated":null,"noindex":null,"channel":"技術ノート","category":"NFC","tags":["NFC","Python"]}}},"pageContext":{"id":"5697f9ed-e000-5fc5-84ac-e76763e1a99f"}},
    "staticQueryHashes": []}