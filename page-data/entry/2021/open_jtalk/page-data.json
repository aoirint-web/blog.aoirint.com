{
    "componentChunkName": "component---src-components-mdx-page-component-layout-tsx",
    "path": "/entry/2021/open_jtalk/",
    "result": {"data":{"mdx":{"id":"6041a038-c72d-5c48-955c-e5d9688d88de","slug":"2021/open_jtalk/","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Open JTalk in Docker\",\n  \"date\": \"2021-04-04 08:00:00\",\n  \"draft\": false,\n  \"category\": \"音声合成\",\n  \"tags\": [\"音声合成\", \"Open JTalk\", \"Docker\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"open-jtalk-in-docker\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#open-jtalk-in-docker\",\n    \"aria-label\": \"open jtalk in docker permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Open JTalk in Docker\"), mdx(\"p\", null, \"\\u4EE5\\u524D\\u306B\\u3082Open JTalk\\u3092\\u89E6\\u3063\\u3066\\u3044\\u305F\\u304C\\u3001\\u6642\\u9593\\u304C\\u7D4C\\u3063\\u305F\\uFF06\\u8A18\\u4E8B\\u304C\\u96D1\\u3060\\u3063\\u305F\\u306E\\u3067Docker\\u3067\\u307E\\u3068\\u3081\\u76F4\\u3057\\u3066\\u304A\\u304F\\u3002\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://aoirint.hatenablog.com/entry/2019/05/25/080329\"\n  }, \"Open JTalk - aoirint's note\"))), mdx(\"p\", null, \"Dockerfile\\u3092\\u4F5C\\u308B\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-dockerfile\"\n  }, \"FROM ubuntu:bionic\\n\\nRUN apt-get update && \\\\\\n    apt-get install -y \\\\\\n        open-jtalk \\\\\\n        open-jtalk-mecab-naist-jdic \\\\\\n        hts-voice-nitech-jp-atr503-m001\\n\\nWORKDIR /data\\nENTRYPOINT [ \\\"open_jtalk\\\" ]\\n\")), mdx(\"p\", null, \"mecab-naist-jdic\\u306F\\u5F62\\u614B\\u7D20\\u89E3\\u6790\\u8F9E\\u66F8\\u3002\\nhts-voice\\u306F\\u30DC\\u30A4\\u30B9\\u30D5\\u30A1\\u30A4\\u30EB\\u3060\\u304C\\u3001\\u5225\\u9014htsvoice\\u3092\\u7528\\u610F\\u3059\\u308B\\u5834\\u5408\\u306F\\u4E0D\\u8981\\u3002\"), mdx(\"p\", null, \"\\u30D3\\u30EB\\u30C9\\u3059\\u308B\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"docker build . -t aoirint/open_jtalk\\n\")), mdx(\"p\", null, \"\\u5B9F\\u884C\\u3059\\u308B\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"echo \\\"\\u3053\\u3093\\u306B\\u3061\\u306F\\\" > text.txt\\n\\n# \\u30C6\\u30AD\\u30B9\\u30C8\\u30D5\\u30A1\\u30A4\\u30EB\\u306E\\u6587\\u5B57\\u5217\\u304B\\u3089\\u97F3\\u58F0\\u3092\\u751F\\u6210\\ndocker run --rm -v \\\"$PWD:/data\\\" aoirint/open_jtalk -x /var/lib/mecab/dic/open-jtalk/naist-jdic/ -m /usr/share/hts-voice/nitech-jp-atr503-m001/nitech_jp_atr503_m001.htsvoice text.txt -ow output.wav\\n\\n# \\u6A19\\u6E96\\u5165\\u529B\\u306E\\u6587\\u5B57\\u5217\\u304B\\u3089\\u97F3\\u58F0\\u3092\\u751F\\u6210\\ncat text.txt | docker run --rm -i -v \\\"$PWD:/data\\\" aoirint/open_jtalk -x /var/lib/mecab/dic/open-jtalk/naist-jdic/ -m /usr/share/hts-voice/nitech-jp-atr503-m001/nitech_jp_atr503_m001.htsvoice -ow output.wav\\n\\n# \\u6A19\\u6E96\\u5165\\u529B\\u306E\\u6587\\u5B57\\u5217\\u304B\\u3089\\u97F3\\u58F0\\u3092\\u751F\\u6210\\u3057\\u3066\\u3001\\u6A19\\u6E96\\u51FA\\u529B\\u306B\\u66F8\\u304D\\u51FA\\u3059\\uFF08wav\\u5F62\\u5F0F\\uFF09\\ncat text.txt | docker run --rm -i -v \\\"$PWD:/data\\\" aoirint/open_jtalk -x /var/lib/mecab/dic/open-jtalk/naist-jdic/ -m /usr/share/hts-voice/nitech-jp-atr503-m001/nitech_jp_atr503_m001.htsvoice -ow /dev/stdout > output.wav\\n\")), mdx(\"p\", null, \"ffmpeg\\u3067\\u51FA\\u529B\\u3055\\u308C\\u305Fwav\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u898B\\u308B\\u3068\\u3053\\u306E\\u3088\\u3046\\u306A\\u5F62\\u5F0F\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input #0, wav, from 'output.wav':\\n  Duration: 00:00:01.61, bitrate: 768 kb/s\\n    Stream #0:0: Audio: pcm_s16le ([1][0][0][0] / 0x0001), 48000 Hz, mono, s16, 768 kb/s\\n\")), mdx(\"p\", null, \"\\u7D9A\\u3044\\u3066\\u3001mmdagent.jp\\u3067\\u914D\\u5E03\\u3055\\u308C\\u3066\\u3044\\u308B\\u30DC\\u30A4\\u30B9\\u30D5\\u30A1\\u30A4\\u30EB\\uFF08htsvoice\\uFF09\\u3092\\u4F7F\\u3063\\u3066\\u307F\\u308B\\u3002\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://sourceforge.net/projects/mmdagent/files/MMDAgent_Example/\"\n  }, \"MMDAgent - Browse /MMDAgent_Example at SourceForge.net\"))), mdx(\"p\", null, \"\\u3053\\u3053\\u304B\\u3089\\u6700\\u65B0\\u306EMMDAgent Example\\u3092\\u30C0\\u30A6\\u30F3\\u30ED\\u30FC\\u30C9\\u3059\\u308B\\u3002\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Voice/mei/mei_normal.htsvoice\"), \"\\u306B\\u76EE\\u7684\\u306E\\u30DC\\u30A4\\u30B9\\u30D5\\u30A1\\u30A4\\u30EB\\u304C\\u3042\\u308B\\uFF08CC BY 3.0\\uFF09\\u3002\\n\\u3053\\u308C\\u3092\\u4F5C\\u696D\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\uFF08\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$PWD\"), \"\\uFF09\\u306B\\u30B3\\u30D4\\u30FC\\u3057\\u3066\\u304A\\u304F\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"# \\u4ED6\\u306Ehtsvoice\\u3092\\u4F7F\\u3046\\uFF08mei_normal.htsvoice\\uFF09\\ndocker run --rm -v \\\"$PWD:/data\\\" aoirint/open_jtalk -x /var/lib/mecab/dic/open-jtalk/naist-jdic/ -m /data/mei_normal.htsvoice text.txt -ow output.wav\\n\")), mdx(\"p\", null, \"\\u30D8\\u30EB\\u30D7\\u306F\\u3053\\u306E\\u3088\\u3046\\u306B\\u306A\\u3063\\u3066\\u3044\\u308B\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"$ docker run --rm -it -v \\\"$PWD:/data\\\" aoirint/open_jtalk -h\\nThe Japanese TTS System \\\"Open JTalk\\\"\\nVersion 1.10 (http://open-jtalk.sourceforge.net/)\\nCopyright (C) 2008-2016 Nagoya Institute of Technology\\nAll rights reserved.\\n\\nThe HMM-Based Speech Synthesis Engine \\\"hts_engine API\\\"\\nVersion 1.10 (http://hts-engine.sourceforge.net/)\\nCopyright (C) 2001-2015 Nagoya Institute of Technology\\n              2001-2008 Tokyo Institute of Technology\\nAll rights reserved.\\n\\nYet Another Part-of-Speech and Morphological Analyzer \\\"Mecab\\\"\\nVersion 0.996 (http://mecab.sourceforge.net/)\\nCopyright (C) 2001-2008 Taku Kudo\\n              2004-2008 Nippon Telegraph and Telephone Corporation\\nAll rights reserved.\\n\\nNAIST Japanese Dictionary\\nVersion 0.6.1-20090630 (http://naist-jdic.sourceforge.jp/)\\nCopyright (C) 2009 Nara Institute of Science and Technology\\nAll rights reserved.\\n\\nopen_jtalk - The Japanese TTS system \\\"Open JTalk\\\"\\n\\n  usage:\\n       open_jtalk [ options ] [ infile ]\\n  options:                                                                   [  def][ min-- max]\\n    -x  dir        : dictionary directory                                    [  N/A]\\n    -m  htsvoice   : HTS voice files                                         [  N/A]\\n    -ow s          : filename of output wav audio (generated speech)         [  N/A]\\n    -ot s          : filename of output trace information                    [  N/A]\\n    -s  i          : sampling frequency                                      [ auto][   1--    ]\\n    -p  i          : frame period (point)                                    [ auto][   1--    ]\\n    -a  f          : all-pass constant                                       [ auto][ 0.0-- 1.0]\\n    -b  f          : postfiltering coefficient                               [  0.0][ 0.0-- 1.0]\\n    -r  f          : speech speed rate                                       [  1.0][ 0.0--    ]\\n    -fm f          : additional half-tone                                    [  0.0][    --    ]\\n    -u  f          : voiced/unvoiced threshold                               [  0.5][ 0.0-- 1.0]\\n    -jm f          : weight of GV for spectrum                               [  1.0][ 0.0--    ]\\n    -jf f          : weight of GV for log F0                                 [  1.0][ 0.0--    ]\\n    -g  f          : volume (dB)                                             [  0.0][    --    ]\\n    -z  i          : audio buffer size (if i==0, turn off)                   [    0][   0--    ]\\n  infile:\\n    text file                                                                [stdin]\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://namotch.hatenablog.com/entry/2015/06/25/225000\"\n  }, \"Debian Jessie \\u306B OpenJtalk \\u3092\\u5165\\u308C\\u3066\\u30C6\\u30AD\\u30B9\\u30C8\\u3092\\u8AAD\\u307F\\u4E0A\\u3052\\u3066\\u307F\\u305F - \\u6B8B\\u3057\\u3068\\u304D\\u307E\\u3059\\uFF08\\u81EA\\u5206\\u7528\\uFF09\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://qiita.com/sukesuke/items/be2a4562bd809ccc0fab\"\n  }, \"\\u5408\\u6210\\u97F3\\u58F0(Open Jtalk)\\u3067wav\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u4F5C\\u6210\\u3057\\u306A\\u3044\\u3067\\u518D\\u751F\\u3059\\u308B - Qiita\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://www.mmdagent.jp/\"\n  }, \"mmdagent.jp\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://open-jtalk.sp.nitech.ac.jp/index.php\"\n  }, \"Open JTalk - HMM-based Text-to-Speech System\"))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Open JTalk in Docker 以前にもOpen JTalkを触っていたが、時間が経った＆記事が雑だったのでDockerでまとめ直しておく。 Open JTalk - aoirint's note Dockerfileを作る。 mecab-naist-jdic…","tableOfContents":{"items":[{"url":"#open-jtalk-in-docker","title":"Open JTalk in Docker"}]},"frontmatter":{"title":"Open JTalk in Docker","date":"2021-04-04 08:00:00","updated":null,"category":"音声合成","tags":["音声合成","Open JTalk","Docker"]}}},"pageContext":{"id":"6041a038-c72d-5c48-955c-e5d9688d88de"}},
    "staticQueryHashes": []}