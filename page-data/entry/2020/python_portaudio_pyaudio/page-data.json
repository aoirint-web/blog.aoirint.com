{
    "componentChunkName": "component---src-layouts-entry-page-layout-tsx",
    "path": "/entry/2020/python_portaudio_pyaudio/",
    "result": {"data":{"mdx":{"id":"5c77fd09-460d-5257-9667-3ad0d1f8fc47","slug":"2020/python_portaudio_pyaudio/","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"PortAudio, pyaudio\",\n  \"date\": \"2020-03-19 10:17:00\",\n  \"draft\": false,\n  \"channel\": \"技術ノート\",\n  \"category\": \"Python\",\n  \"tags\": [\"Python\", \"音声処理\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"portaudio-pyaudio\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#portaudio-pyaudio\",\n    \"aria-label\": \"portaudio pyaudio permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"PortAudio, pyaudio\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://portaudio.com/docs/v19-doxydocs/api_overview.html\"\n  }, \"PortAudio: PortAudio API Overview\"))), mdx(\"hr\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Host API\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ALSA (Ubuntu)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Core Audio (Mac)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Device\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Speaker\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mic\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stream\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sample rate (num of samples per second)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sample format (num of bytes of a sample, integer or float)\")))), mdx(\"hr\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://people.csail.mit.edu/hubert/pyaudio/docs/\"\n  }, \"PyAudio Documentation \\u2014 PyAudio 0.2.11 documentation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://gist.github.com/mansam/9332445\"\n  }, \"Audio device detection w/ pyaudio\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"brew install portaudio\\npip3 install pyaudio\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://qiita.com/mayfair/items/abb59ebf503cc294a581\"\n  }, \"macOS\\u306Bpyaudio\\u3092\\u30A4\\u30F3\\u30B9\\u30C8\\u30FC\\u30EB\\u3059\\u308B - Qiita\"))), mdx(\"h3\", {\n    \"id\": \"check-host-apis\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#check-host-apis\",\n    \"aria-label\": \"check host apis permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Check Host APIs\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"import pyaudio\\n\\npa = pyaudio.PyAudio()\\n\\napi_count = pa.get_host_api_count()\\nprint('Host API:', api_count)\\n\\nfor i in range(api_count):\\n    api_info = pa.get_host_api_info_by_index(i)\\n    print(api_info)\\n\\n    device_count = api_info['deviceCount']\\n    for j in range(device_count):\\n        device_info = pa.get_device_info_by_host_api_device_index(i, j)\\n        print(device_info)\\n\\npa.terminate()\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Host API: 1\\n{'index': 0, 'structVersion': 1, 'type': 5, 'name': 'Core Audio', 'deviceCount': 2, 'defaultInputDevice': 0, 'defaultOutputDevice': 1}\\n{'index': 0, 'structVersion': 2, 'name': 'Built-in Microphone', 'hostApi': 0, 'maxInputChannels': 2, 'maxOutputChannels': 0, 'defaultLowInputLatency': 0.0029478458049886623, 'defaultLowOutputLatency': 0.01, 'defaultHighInputLatency': 0.01310657596371882, 'defaultHighOutputLatency': 0.1, 'defaultSampleRate': 44100.0}\\n{'index': 1, 'structVersion': 2, 'name': 'Built-in Output', 'hostApi': 0, 'maxInputChannels': 0, 'maxOutputChannels': 2, 'defaultLowInputLatency': 0.01, 'defaultLowOutputLatency': 0.007800453514739229, 'defaultHighInputLatency': 0.1, 'defaultHighOutputLatency': 0.017959183673469388, 'defaultSampleRate': 44100.0}\\n\")), mdx(\"h3\", {\n    \"id\": \"check-devices\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#check-devices\",\n    \"aria-label\": \"check devices permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Check Devices\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"import pyaudio\\n\\npa = pyaudio.PyAudio()\\n\\ndevice_count = pa.get_device_count()\\nprint('Device:', device_count)\\n\\nfor i in range(device_count):\\n    device_info = pa.get_device_info_by_index(i)\\n    print(device_info)\\n\\npa.terminate()\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Device: 2\\n{'index': 0, 'structVersion': 2, 'name': 'Built-in Microphone', 'hostApi': 0, 'maxInputChannels': 2, 'maxOutputChannels': 0, 'defaultLowInputLatency': 0.0029478458049886623, 'defaultLowOutputLatency': 0.01, 'defaultHighInputLatency': 0.01310657596371882, 'defaultHighOutputLatency': 0.1, 'defaultSampleRate': 44100.0}\\n{'index': 1, 'structVersion': 2, 'name': 'Built-in Output', 'hostApi': 0, 'maxInputChannels': 0, 'maxOutputChannels': 2, 'defaultLowInputLatency': 0.01, 'defaultLowOutputLatency': 0.007800453514739229, 'defaultHighInputLatency': 0.1, 'defaultHighOutputLatency': 0.017959183673469388, 'defaultSampleRate': 44100.0}\\n\")), mdx(\"h3\", {\n    \"id\": \"stream\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#stream\",\n    \"aria-label\": \"stream permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Stream\"), mdx(\"p\", null, \"\\u203B wave\\u3060\\u3051\\u9CF4\\u3089\\u305B\\u308C\\u3070\\u3044\\u3044\\u5834\\u5408\\u306F\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"wave\"), \"\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u3092\\u4F7F\\u3063\\u3066\\u304F\\u3060\\u3055\\u3044\\uFF08\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://people.csail.mit.edu/hubert/pyaudio/docs/#example-blocking-mode-audio-i-o\"\n  }, \"\\u53C2\\u7167\"), \"\\uFF09\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"pip3 install pydub\\nbrew install ffmpeg\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"import pyaudio\\nfrom pydub import AudioSegment\\n\\npa = pyaudio.PyAudio()\\n\\ndevice_index = 1 # Output device\\ndevice_info = pa.get_device_info_by_index(device_index)\\nprint(device_info)\\n\\n# https://maoudamashii.jokersounds.com/archives/song_kouichi_the_milky_way.html\\nsound_path = 'song_kouichi_the_milky_way.m4a'\\n# https://github.com/jiaaro/pydub/blob/master/API.markdown#audiosegmentfrom_file\\nsound = AudioSegment.from_file(sound_path, format='m4a') # give format explicitly\\n\\n# See here: https://people.csail.mit.edu/hubert/pyaudio/docs/#pasampleformat\\nsample_width = sound.sample_width # 2\\nformat = pyaudio.get_format_from_width(sample_width) # 8\\nsample_rate = sound.frame_rate # 44100\\nchannels = sound.channels # 2 (Stereo)\\n\\nprint(format, '(%d)' % sample_width)\\nprint(sample_rate)\\nprint(channels)\\n\\nstream = pa.open(\\n    output_device_index=device_index,\\n    rate=sample_rate,\\n    channels=channels,\\n    format=format,\\n    output=True,\\n)\\n\\nsamples = sound.raw_data # bytes of samples\\n# samples = bytes(sound.get_array_of_samples()) # Equivalent\\n\\n# block; cannot interrupt with Ctrl+C.\\n# For non-blocking, see here: https://people.csail.mit.edu/hubert/pyaudio/docs/#example-callback-mode-audio-i-o\\nstream.write(samples)\\n\\nstream.stop_stream()\\nstream.close()\\n\\npa.terminate()\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://people.csail.mit.edu/hubert/pyaudio/docs/#example-callback-mode-audio-i-o\"\n  }, \"Non-blocking usage (Example: Callback Mode Audio I/O @ PyAudio Documentation \\u2014 PyAudio 0.2.11 documentation)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/jiaaro/pydub/blob/master/API.markdown#audiosegmentfrom_file\"\n  }, \"pydub AudioSegment.from_file (pydub/API.markdown at master \\xB7 jiaaro/pydub)\"))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"PortAudio, pyaudio PortAudio: PortAudio API Overview Host API ALSA (Ubuntu) Core Audio (Mac) Device Speaker Mic Stream sample rate (num of…","tableOfContents":{"items":[{"url":"#portaudio-pyaudio","title":"PortAudio, pyaudio","items":[{"items":[{"url":"#check-host-apis","title":"Check Host APIs"},{"url":"#check-devices","title":"Check Devices"},{"url":"#stream","title":"Stream"}]}]}]},"frontmatter":{"title":"PortAudio, pyaudio","date":"2020-03-19T10:17:00.000Z","updated":null,"noindex":null,"channel":"技術ノート","category":"Python","tags":["Python","音声処理"]}}},"pageContext":{"id":"5c77fd09-460d-5257-9667-3ad0d1f8fc47"}},
    "staticQueryHashes": []}