{
    "componentChunkName": "component---src-layouts-entry-page-layout-tsx",
    "path": "/entry/2020/systemd_service/",
    "result": {"data":{"mdx":{"id":"65ea517b-9999-50c4-9f99-76d67dc96cc9","slug":"2020/systemd_service/","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"systemd service\",\n  \"date\": \"2020-03-19 06:32:01\",\n  \"draft\": false,\n  \"channel\": \"技術ノート\",\n  \"category\": \"Ubuntu\",\n  \"tags\": [\"Ubuntu\", \"AutoStart\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"systemd-service\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#systemd-service\",\n    \"aria-label\": \"systemd service permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"systemd service\"), mdx(\"p\", null, \"\\u30C6\\u30F3\\u30D7\\u30EC\\u30FC\\u30C8\\uFF08\\u4E00\\u822C\\u30E6\\u30FC\\u30B6\\u6A29\\u9650\\u3001bashrc\\u4F7F\\u7528\\uFF09\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-systemd\"\n  }, \"[Unit]\\nDescription=My Service\\n\\n[Service]\\nType=simple\\nUser=user\\nGroup=user\\nRestart=always\\nWorkingDirectory=WORKING_DIR\\nExecStart=/bin/bash -c \\\"COMMAND\\\"\\n\\n[Install]\\nWantedBy=multi-user.target\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"sudo ln -s my_service.service /etc/systemd/system/\\nsudo systemctl enable my_service\\nsudo systemctl restart my_service\\n\\n# After you edit service file\\nsudo systemctl daemon-reload\\n\\n# Check log\\nsudo systemctl status my_service\\n\")), mdx(\"p\", null, \"If you are using python, maybe you need to set environment \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PYTHONUNBUFFERED=1\"), \" to see log.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# In [Service] Section\\nEnvironment=\\\"PYTHONUNBUFFERED=1\\\"\\n\\nEnvironment=\\\"KEY=VALUE\\\"\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://qiita.com/DQNEO/items/0b5d0bc5d3cf407cb7ff\"\n  }, \"Systemd\\u3092\\u4F7F\\u3063\\u3066\\u3055\\u304F\\u3063\\u3068\\u81EA\\u4F5C\\u30B3\\u30DE\\u30F3\\u30C9\\u3092\\u30B5\\u30FC\\u30D3\\u30B9\\u5316\\u3057\\u3066\\u307F\\u308B - Qiita\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://qiita.com/ch7821/items/369090459769c603bb6b\"\n  }, \"systemd \\u30B5\\u30FC\\u30D3\\u30B9\\u30E6\\u30CB\\u30C3\\u30C8\\u899A\\u66F8 - Qiita\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://qiita.com/a_yasui/items/f2d8b57aa616e523ede4\"\n  }, \"Systemd \\u30E1\\u30E2\\u66F8\\u304D - Qiita\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://qiita.com/ukiuni@github/items/400e4fdaae14b9bc0fcf\"\n  }, \"Systemd Unit File \\u30C1\\u30FC\\u30C8\\u30B7\\u30FC\\u30C8 - Qiita\"))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"systemd service テンプレート（一般ユーザ権限、bashrc使用） If you are using python, maybe you need to set environment  PYTHONUNBUFFERED=1  to see log. Systemd…","tableOfContents":{"items":[{"url":"#systemd-service","title":"systemd service"}]},"frontmatter":{"title":"systemd service","date":"2020-03-19T06:32:01.000Z","updated":null,"noindex":null,"channel":"技術ノート","category":"Ubuntu","tags":["Ubuntu","AutoStart"]}}},"pageContext":{"id":"65ea517b-9999-50c4-9f99-76d67dc96cc9"}},
    "staticQueryHashes": []}