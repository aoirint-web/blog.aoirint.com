{
    "componentChunkName": "component---src-layouts-entry-page-layout-tsx",
    "path": "/entry/2020/python_audio_pydub_numpy/",
    "result": {"data":{"mdx":{"id":"e78520d8-7eaa-5569-bfae-41980392eb60","slug":"2020/python_audio_pydub_numpy/","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"pydub numpy\",\n  \"date\": \"2020-03-14 18:05:02\",\n  \"draft\": false,\n  \"channel\": \"技術ノート\",\n  \"category\": \"Python\",\n  \"tags\": [\"Python\", \"音声処理\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"pydub-numpy\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#pydub-numpy\",\n    \"aria-label\": \"pydub numpy permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"pydub numpy\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"from pydub import *\\nimport numpy as np\\nimport time\\n\\n# https://own-search-and-study.xyz/2017/11/19/numpy%E3%81%AEarray%E3%81%8B%E3%82%89pydub%E3%81%AEaudiosegment%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B/\\n\\n# https://maoudamashii.jokersounds.com/archives/song_kouichi_the_milky_way.html\\npath = 'song_kouichi_the_milky_way.m4a'\\n\\n# https://github.com/jiaaro/pydub/blob/master/API.markdown#audiosegmentfrom_file\\nsound = AudioSegment.from_file(path, format='m4a') # give format explicitly\\nsamples = np.array(sound.get_array_of_samples())\\n\\nprint(path)\\nprint('Sample width (Num of bytes of a sample):', sound.sample_width)\\nprint('Frame rate (Num of samples per second):', sound.frame_rate)\\nprint('Channels (Stereo/Mono):', sound.channels)\\nprint('Shape (Length):', samples.shape)\\nprint('Type:', samples.dtype)\\nprint('Min/Max:', samples.min(), samples.max())\\n\\noutput = AudioSegment(\\n    samples.astype('int32').tobytes(),\\n    sample_width=4,\\n    frame_rate=44100,\\n    channels=2,\\n)\\n\\nts = time.time()\\noutput.export('output.m4a')\\nelapsed = time.time() - ts\\nprint('Exported as m4a: %f s' % elapsed)\\n\\nts = time.time()\\noutput.export('output.mp3')\\nelapsed = time.time() - ts\\nprint('Exported as mp3: %f s' % elapsed)\\n\\nts = time.time()\\noutput.export('output.wav')\\nelapsed = time.time() - ts\\nprint('Exported as wav: %f s' % elapsed)\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"song_kouichi_the_milky_way.m4a\\nSample width (Num of bytes of a sample): 2\\nFrame rate (Num of samples per second): 44100\\nChannels (Stereo/Mono): 2\\nShape (Length): (22339584,)\\nType: int16\\nMin/Max: -32768 32767\\nExported as m4a: 6.288757 s\\nExported as mp3: 6.194534 s\\nExported as wav: 6.064215 s\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u51FA\\u529B\\u6642\\u9593\\u306F\\u30D5\\u30A9\\u30FC\\u30DE\\u30C3\\u30C8\\u306B\\u3088\\u3063\\u3066\\u5909\\u308F\\u3089\\u306A\\u3044\\uFF08\\u8AA4\\u5DEE\\u306E\\u7BC4\\u56F2\\uFF09\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"pydub numpy 出力時間はフォーマットによって変わらない（誤差の範囲）","tableOfContents":{"items":[{"url":"#pydub-numpy","title":"pydub numpy"}]},"frontmatter":{"title":"pydub numpy","date":"2020-03-14T18:05:02.000Z","updated":null,"noindex":null,"channel":"技術ノート","category":"Python","tags":["Python","音声処理"]}}},"pageContext":{"id":"e78520d8-7eaa-5569-bfae-41980392eb60"}},
    "staticQueryHashes": []}