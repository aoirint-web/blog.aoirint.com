{"version":3,"file":"component---src-layouts-channel-search-page-layout-tsx-d9b1d1288b493c40216c.js","mappings":"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","sources":["webpack://blog-aoirint-com/./src/components/PostListItem.tsx","webpack://blog-aoirint-com/./src/data/ChannelInfos.ts","webpack://blog-aoirint-com/./src/layouts/ChannelSearchPageLayout.tsx"],"sourcesContent":["import React from 'react'\nimport dayjs from 'dayjs'\nimport { Link } from 'gatsby'\n\nexport interface Parent {\n  sourceInstanceName: string\n}\n\nexport interface Frontmatter {\n  title: string\n  date?: string\n  updated?: string\n  channel?: string\n  category?: string\n  tags?: string[]\n}\n\nexport interface Post {\n  id: string\n  slug?: string\n  parent?: {} | Parent\n  frontmatter?: Frontmatter\n}\n\nexport interface PostListItemProps {\n  post: Post\n}\n\nconst PostListItem: React.FC<PostListItemProps> = ({\n  post: {\n    slug,\n    parent,\n    frontmatter,\n  },\n}) => {\n  const sourceInstanceName = 'sourceInstanceName' in parent ? parent.sourceInstanceName : 'pages'\n  const pathPrefix = sourceInstanceName !== 'pages' ? `/${sourceInstanceName}/` : '/'\n\n  const date = frontmatter?.date != null ? dayjs(frontmatter?.date).format('YYYY-MM-DD') : ''\n  const updated = frontmatter?.updated != null ? dayjs(frontmatter?.updated).format('YYYY-MM-DD') : ''\n\n  return (\n    <div className='mb-2'>\n      <div className=''>\n        <Link to={`${pathPrefix}${slug}`} data-label='title'>\n          {frontmatter?.title ? frontmatter.title : 'No title'}\n        </Link>\n        {date || updated ? (\n          <div className='is-size-7' data-label='dateString'>\n            [\n            <span data-label='dateCreated'>{date}</span>\n            {date && updated ? ' / ' : ''}\n            <span data-label='dateUpdated'>{updated}</span>\n            ]\n          </div>\n        ) : ''}\n        <div className='is-size-7' data-label='tags'>\n          {frontmatter?.channel != null ? (\n            <>\n              <Link to={`/channel/${frontmatter?.channel}/`} className='mr-2' data-label='channel'>\n                {frontmatter?.channel}\n              </Link>\n              <span className='mr-2'>\n                |\n              </span>\n            </>\n          ) : ''}\n          {frontmatter?.category != null ? (\n            <>\n              <Link to={`/channel/${frontmatter?.channel}/category/${frontmatter?.category}/`} className='mr-2' data-label='category'>\n                {frontmatter?.category}\n              </Link>\n              <span className='mr-2'>\n                |\n              </span>\n            </>\n          ) : ''}\n          {frontmatter?.tags?.map((tag) => (\n            <Link key={tag} to={`/channel/${frontmatter?.channel}/tags/${tag}/`} className='mr-2' data-label='tag'>\n              {tag}\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PostListItem\n","export const ChannelInfos = [\n  {\n    'key': '技術ノート',\n    'description': '技術に関するメモ書き',\n    'indexNoIndex': false,\n    'indexCategoryIndex': true,\n    'topPostCount': true,\n  },\n  {\n    'key': '作業ログ',\n    'description': 'スクラップ、下書き',\n    'indexNoIndex': false,\n    'indexCategoryIndex': false,\n    'topPostCount': true,\n  },\n  {\n    'key': 'レポート',\n    'description': '報告、アナウンス、管理情報、リリースノート',\n    'indexNoIndex': false,\n    'indexCategoryIndex': false,\n    'topPostCount': true,\n  },\n  {\n    'key': '雑記',\n    'description': '個人的な記事、趣味',\n    'indexNoIndex': true,\n    'indexCategoryIndex': false,\n    'topPostCount': false,\n  }\n]\n\nexport default ChannelInfos\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql, PageProps } from \"gatsby\"\n\nimport icon from '../images/icon.png'\nimport {\n  Navbar,\n} from '../components'\n\nimport {\n  GetChannelSearchQuery\n} from '../../generated/graphql-types'\n\nimport PostListItem from '../components/PostListItem'\nimport { ChannelInfos } from '../data'\n\nconst ChannelSearchPageLayout: React.FC<PageProps<GetChannelSearchQuery>> = ({\n  pageContext,\n  data,\n}) => {\n  const channel = 'channel' in pageContext ? String(pageContext['channel']) : ''\n  const channelInfo = ChannelInfos.filter((channeInfo) => channeInfo.key === channel)?.[0]\n\n  return (\n    <>\n      <Helmet>\n        <title>チャンネル: {channel} · えやみぐさ</title>\n        {channelInfo?.indexNoIndex ? (\n          <meta name=\"robots\" content=\"noindex\" />\n        ) : ''}\n      </Helmet>\n      <Navbar />\n      <section className='section'>\n        <div className='container'>\n          <h1 className='title is-4 mb-4'>\n            チャンネル: {channel}\n          </h1>\n          <div className='content'>\n            <p>\n              {channelInfo?.description}\n            </p>\n          </div>\n          {channelInfo?.indexCategoryIndex ? (\n            <>\n              <h2 className='title is-5 mb-3'>\n                最近の投稿\n              </h2>\n              <div className='mt-4 mb-5'>\n                {data.recentPosts.edges.map(({ node }) => (\n                  <div key={node.id}>\n                    <PostListItem post={node} />\n                    <hr className='my-1' />\n                  </div>\n                ))}\n              </div>\n              <h2 className='title is-5 mb-3'>\n                カテゴリ一覧\n              </h2>\n              <div className='columns is-multiline'>\n                {data.posts.categories.map((category) => (\n                  <div key={category.fieldValue} className='column is-one-quarter'>\n                    <div className='m-1'>\n                      <h3 className='title is-5 my-2'>\n                        <a href={`/channel/${channel}/category/${category.fieldValue}/`}>\n                          {category.fieldValue}\n                        </a>\n                      </h3>\n                      <div>\n                        {category.edges.map(({ node }) => (\n                          <div key={node.id}>\n                            <PostListItem post={node} />\n                            <hr className='my-1' />\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </>\n          ) : (\n            <>\n              <ul>\n                {data.posts.edges.map(({ node }) => (\n                  <div key={node.id}>\n                    <PostListItem post={node} />\n                    <hr className='my-1' />\n                  </div>\n                ))}\n              </ul>\n            </>\n          )}\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport const pageQuery = graphql`\n  query GetChannelSearch(\n    $channel: String!\n  ) {\n    recentPosts: allMdx(\n      filter: {\n        frontmatter: {channel: {eq: $channel}}\n        fields: {draft: {eq: false}}\n      }\n      sort: {\n        fields: [frontmatter___lastModified]\n        order: DESC\n      }\n      limit: 10\n    ) {\n      edges {\n        node {\n          id\n          slug\n          parent {\n            ... on File {\n              sourceInstanceName\n            }\n          }\n          frontmatter {\n            title\n            date\n            updated\n            channel\n            category\n            tags\n          }\n        }\n      }\n    }\n\n    posts: allMdx(\n      filter: {\n        frontmatter: {channel: {eq: $channel}}\n        fields: {draft: {eq: false}}\n      }\n      sort: {\n        fields: [frontmatter___lastModified]\n        order: DESC\n      }\n    ) {\n      edges {\n        node {\n          id\n          slug\n          parent {\n            ... on File {\n              sourceInstanceName\n            }\n          }\n          frontmatter {\n            title\n            date\n            updated\n            channel\n            category\n            tags\n          }\n        }\n      }\n\n      categories: group(field: frontmatter___category) {\n        fieldValue\n        edges {\n          node {\n            id\n            slug\n            parent {\n              ... on File {\n                sourceInstanceName\n              }\n            }\n            frontmatter {\n              title\n              date\n              updated\n              channel\n              category\n              tags\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default ChannelSearchPageLayout\n"],"names":["post","slug","parent","frontmatter","sourceInstanceName","pathPrefix","date","dayjs","format","updated","className","Link","to","title","channel","category","tags","map","tag","key","pageContext","data","String","channelInfo","ChannelInfos","channeInfo","indexNoIndex","name","content","description","indexCategoryIndex","recentPosts","edges","node","id","posts","categories","fieldValue","href"],"sourceRoot":""}