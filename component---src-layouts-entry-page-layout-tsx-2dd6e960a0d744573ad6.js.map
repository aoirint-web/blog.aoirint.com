{"version":3,"file":"component---src-layouts-entry-page-layout-tsx-2dd6e960a0d744573ad6.js","mappings":"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","sources":["webpack://blog-aoirint-com/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://blog-aoirint-com/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://blog-aoirint-com/./node_modules/@babel/runtime/helpers/construct.js","webpack://blog-aoirint-com/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://blog-aoirint-com/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://blog-aoirint-com/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://blog-aoirint-com/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://blog-aoirint-com/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://blog-aoirint-com/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://blog-aoirint-com/./node_modules/dayjs/plugin/timezone.js","webpack://blog-aoirint-com/./node_modules/dayjs/plugin/utc.js","webpack://blog-aoirint-com/./node_modules/prismjs/components/prism-nginx.js","webpack://blog-aoirint-com/./node_modules/prismjs/components/prism-php.js","webpack://blog-aoirint-com/./node_modules/prismjs/components/prism-ruby.js","webpack://blog-aoirint-com/./node_modules/gatsby-plugin-mdx/index.js","webpack://blog-aoirint-com/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://blog-aoirint-com/./node_modules/prism-react-renderer/prism/index.js","webpack://blog-aoirint-com/./src/components/PrismCustom.ts","webpack://blog-aoirint-com/./node_modules/prism-react-renderer/themes/duotoneDark/index.js","webpack://blog-aoirint-com/./node_modules/prism-react-renderer/dist/index.js","webpack://blog-aoirint-com/./node_modules/prism-react-renderer/themes/vsDark/index.js","webpack://blog-aoirint-com/./src/components/Ogp.tsx","webpack://blog-aoirint-com/./src/layouts/EntryPageLayout.tsx","webpack://blog-aoirint-com/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","require(\"core-js/modules/esnext.global-this.js\");\n\n!function (t, e) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = e() : \"function\" == typeof define && define.amd ? define(e) : (t = \"undefined\" != typeof globalThis ? globalThis : t || self).dayjs_plugin_timezone = e();\n}(this, function () {\n  \"use strict\";\n\n  var t = {\n    year: 0,\n    month: 1,\n    day: 2,\n    hour: 3,\n    minute: 4,\n    second: 5\n  },\n      e = {};\n  return function (n, i, o) {\n    var r,\n        a = function a(t, n, i) {\n      void 0 === i && (i = {});\n      var o = new Date(t);\n      return function (t, n) {\n        void 0 === n && (n = {});\n        var i = n.timeZoneName || \"short\",\n            o = t + \"|\" + i,\n            r = e[o];\n        return r || (r = new Intl.DateTimeFormat(\"en-US\", {\n          hour12: !1,\n          timeZone: t,\n          year: \"numeric\",\n          month: \"2-digit\",\n          day: \"2-digit\",\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          second: \"2-digit\",\n          timeZoneName: i\n        }), e[o] = r), r;\n      }(n, i).formatToParts(o);\n    },\n        u = function u(e, n) {\n      for (var i = a(e, n), r = [], u = 0; u < i.length; u += 1) {\n        var f = i[u],\n            s = f.type,\n            m = f.value,\n            c = t[s];\n        c >= 0 && (r[c] = parseInt(m, 10));\n      }\n\n      var d = r[3],\n          l = 24 === d ? 0 : d,\n          v = r[0] + \"-\" + r[1] + \"-\" + r[2] + \" \" + l + \":\" + r[4] + \":\" + r[5] + \":000\",\n          h = +e;\n      return (o.utc(v).valueOf() - (h -= h % 1e3)) / 6e4;\n    },\n        f = i.prototype;\n\n    f.tz = function (t, e) {\n      void 0 === t && (t = r);\n      var n = this.utcOffset(),\n          i = this.toDate(),\n          a = i.toLocaleString(\"en-US\", {\n        timeZone: t\n      }),\n          u = Math.round((i - new Date(a)) / 1e3 / 60),\n          f = o(a).$set(\"millisecond\", this.$ms).utcOffset(15 * -Math.round(i.getTimezoneOffset() / 15) - u, !0);\n\n      if (e) {\n        var s = f.utcOffset();\n        f = f.add(n - s, \"minute\");\n      }\n\n      return f.$x.$timezone = t, f;\n    }, f.offsetName = function (t) {\n      var e = this.$x.$timezone || o.tz.guess(),\n          n = a(this.valueOf(), e, {\n        timeZoneName: t\n      }).find(function (t) {\n        return \"timezonename\" === t.type.toLowerCase();\n      });\n      return n && n.value;\n    };\n    var s = f.startOf;\n    f.startOf = function (t, e) {\n      if (!this.$x || !this.$x.$timezone) return s.call(this, t, e);\n      var n = o(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\"));\n      return s.call(n, t, e).tz(this.$x.$timezone, !0);\n    }, o.tz = function (t, e, n) {\n      var i = n && e,\n          a = n || e || r,\n          f = u(+o(), a);\n      if (\"string\" != typeof t) return o(t).tz(a);\n\n      var s = function (t, e, n) {\n        var i = t - 60 * e * 1e3,\n            o = u(i, n);\n        if (e === o) return [i, e];\n        var r = u(i -= 60 * (o - e) * 1e3, n);\n        return o === r ? [i, o] : [t - 60 * Math.min(o, r) * 1e3, Math.max(o, r)];\n      }(o.utc(t, i).valueOf(), f, a),\n          m = s[0],\n          c = s[1],\n          d = o(m).utcOffset(c);\n\n      return d.$x.$timezone = a, d;\n    }, o.tz.guess = function () {\n      return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }, o.tz.setDefault = function (t) {\n      r = t;\n    };\n  };\n});","require(\"core-js/modules/esnext.global-this.js\");\n\n!function (t, i) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = i() : \"function\" == typeof define && define.amd ? define(i) : (t = \"undefined\" != typeof globalThis ? globalThis : t || self).dayjs_plugin_utc = i();\n}(this, function () {\n  \"use strict\";\n\n  var t = \"minute\",\n      i = /[+-]\\d\\d(?::?\\d\\d)?/g,\n      e = /([+-]|\\d\\d)/g;\n  return function (s, f, n) {\n    var u = f.prototype;\n    n.utc = function (t) {\n      var i = {\n        date: t,\n        utc: !0,\n        args: arguments\n      };\n      return new f(i);\n    }, u.utc = function (i) {\n      var e = n(this.toDate(), {\n        locale: this.$L,\n        utc: !0\n      });\n      return i ? e.add(this.utcOffset(), t) : e;\n    }, u.local = function () {\n      return n(this.toDate(), {\n        locale: this.$L,\n        utc: !1\n      });\n    };\n    var o = u.parse;\n\n    u.parse = function (t) {\n      t.utc && (this.$u = !0), this.$utils().u(t.$offset) || (this.$offset = t.$offset), o.call(this, t);\n    };\n\n    var r = u.init;\n\n    u.init = function () {\n      if (this.$u) {\n        var t = this.$d;\n        this.$y = t.getUTCFullYear(), this.$M = t.getUTCMonth(), this.$D = t.getUTCDate(), this.$W = t.getUTCDay(), this.$H = t.getUTCHours(), this.$m = t.getUTCMinutes(), this.$s = t.getUTCSeconds(), this.$ms = t.getUTCMilliseconds();\n      } else r.call(this);\n    };\n\n    var a = u.utcOffset;\n\n    u.utcOffset = function (s, f) {\n      var n = this.$utils().u;\n      if (n(s)) return this.$u ? 0 : n(this.$offset) ? a.call(this) : this.$offset;\n      if (\"string\" == typeof s && null === (s = function (t) {\n        void 0 === t && (t = \"\");\n        var s = t.match(i);\n        if (!s) return null;\n        var f = (\"\" + s[0]).match(e) || [\"-\", 0, 0],\n            n = f[0],\n            u = 60 * +f[1] + +f[2];\n        return 0 === u ? 0 : \"+\" === n ? u : -u;\n      }(s))) return this;\n      var u = Math.abs(s) <= 16 ? 60 * s : s,\n          o = this;\n      if (f) return o.$offset = u, o.$u = 0 === s, o;\n\n      if (0 !== s) {\n        var r = this.$u ? this.toDate().getTimezoneOffset() : -1 * this.utcOffset();\n        (o = this.local().add(u + r, t)).$offset = u, o.$x.$localOffset = r;\n      } else o = this.utc();\n\n      return o;\n    };\n\n    var h = u.format;\n    u.format = function (t) {\n      var i = t || (this.$u ? \"YYYY-MM-DDTHH:mm:ss[Z]\" : \"\");\n      return h.call(this, i);\n    }, u.valueOf = function () {\n      var t = this.$utils().u(this.$offset) ? 0 : this.$offset + (this.$x.$localOffset || new Date().getTimezoneOffset());\n      return this.$d.valueOf() - 6e4 * t;\n    }, u.isUTC = function () {\n      return !!this.$u;\n    }, u.toISOString = function () {\n      return this.toDate().toISOString();\n    }, u.toString = function () {\n      return this.toDate().toUTCString();\n    };\n    var l = u.toDate;\n\n    u.toDate = function (t) {\n      return \"s\" === t && this.$offset ? n(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\")).toDate() : l.call(this);\n    };\n\n    var c = u.diff;\n\n    u.diff = function (t, i, e) {\n      if (t && this.$u === t.$u) return c.call(this, t, i, e);\n      var s = this.local(),\n          f = n(t).local();\n      return c.call(s, f, i, e);\n    };\n  };\n});","(function (Prism) {\n  var variable = /\\$(?:\\w[a-z\\d]*(?:_[^\\x00-\\x1F\\s\"'\\\\()$]*)?|\\{[^}\\s\"'\\\\]+\\})/i;\n  Prism.languages.nginx = {\n    'comment': {\n      pattern: /(^|[\\s{};])#.*/,\n      lookbehind: true,\n      greedy: true\n    },\n    'directive': {\n      pattern: /(^|\\s)\\w(?:[^;{}\"'\\\\\\s]|\\\\.|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|\\s+(?:#.*(?!.)|(?![#\\s])))*?(?=\\s*[;{])/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'string': {\n          pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)(?:\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            'escape': {\n              pattern: /\\\\[\"'\\\\nrt]/,\n              alias: 'entity'\n            },\n            'variable': variable\n          }\n        },\n        'comment': {\n          pattern: /(\\s)#.*/,\n          lookbehind: true,\n          greedy: true\n        },\n        'keyword': {\n          pattern: /^\\S+/,\n          greedy: true\n        },\n        // other patterns\n        'boolean': {\n          pattern: /(\\s)(?:off|on)(?!\\S)/,\n          lookbehind: true\n        },\n        'number': {\n          pattern: /(\\s)\\d+[a-z]*(?!\\S)/i,\n          lookbehind: true\n        },\n        'variable': variable\n      }\n    },\n    'punctuation': /[{};]/\n  };\n})(Prism);","/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n * Rewritten by Tom Pavelec\n *\n * Supports PHP 5.3 - 8.0\n */\n(function (Prism) {\n  var comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/;\n  var constant = [{\n    pattern: /\\b(?:false|true)\\b/i,\n    alias: 'boolean'\n  }, {\n    pattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\n    greedy: true,\n    lookbehind: true\n  }, {\n    pattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\n    greedy: true,\n    lookbehind: true\n  }, /\\b(?:null)\\b/i, /\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/];\n  var number = /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i;\n  var operator = /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/;\n  var punctuation = /[{}\\[\\](),:;]/;\n  Prism.languages.php = {\n    'delimiter': {\n      pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n      alias: 'important'\n    },\n    'comment': comment,\n    'variable': /\\$+(?:\\w+\\b|(?=\\{))/,\n    'package': {\n      pattern: /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    },\n    'class-name-definition': {\n      pattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    'function-definition': {\n      pattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'keyword': [{\n      pattern: /(\\(\\s*)\\b(?:array|bool|boolean|float|int|integer|object|string)\\b(?=\\s*\\))/i,\n      alias: 'type-casting',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /([(,?]\\s*)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string)\\b(?=\\s*\\$)/i,\n      alias: 'type-hint',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string|void)\\b/i,\n      alias: 'return-type',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:array(?!\\s*\\()|bool|float|int|iterable|mixed|object|string|void)\\b/i,\n      alias: 'type-declaration',\n      greedy: true\n    }, {\n      pattern: /(\\|\\s*)(?:false|null)\\b|\\b(?:false|null)(?=\\s*\\|)/i,\n      alias: 'type-declaration',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n      alias: 'static-context',\n      greedy: true\n    }, {\n      // yield from\n      pattern: /(\\byield\\s+)from\\b/i,\n      lookbehind: true\n    }, // `class` is always a keyword unlike other keywords\n    /\\bclass\\b/i, {\n      // https://www.php.net/manual/en/reserved.keywords.php\n      //\n      // keywords cannot be preceded by \"->\"\n      // the complex lookbehind means `(?<!(?:->|::)\\s*)`\n      pattern: /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\\b/i,\n      lookbehind: true\n    }],\n    'argument-name': {\n      pattern: /([(,]\\s+)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n      lookbehind: true\n    },\n    'class-name': [{\n      pattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n      greedy: true\n    }, {\n      pattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n      alias: 'class-name-fully-qualified',\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n      alias: 'class-name-fully-qualified',\n      greedy: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      alias: 'class-name-fully-qualified',\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n      alias: 'type-declaration',\n      greedy: true\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n      alias: ['class-name-fully-qualified', 'type-declaration'],\n      greedy: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n      alias: 'static-context',\n      greedy: true\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n      alias: ['class-name-fully-qualified', 'static-context'],\n      greedy: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n      alias: 'type-hint',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n      alias: ['class-name-fully-qualified', 'type-hint'],\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      alias: 'return-type',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      alias: ['class-name-fully-qualified', 'return-type'],\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }],\n    'constant': constant,\n    'function': {\n      pattern: /(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    },\n    'property': {\n      pattern: /(->\\s*)\\w+/,\n      lookbehind: true\n    },\n    'number': number,\n    'operator': operator,\n    'punctuation': punctuation\n  };\n  var string_interpolation = {\n    pattern: /\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\n    lookbehind: true,\n    inside: Prism.languages.php\n  };\n  var string = [{\n    pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n    alias: 'nowdoc-string',\n    greedy: true,\n    inside: {\n      'delimiter': {\n        pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n        alias: 'symbol',\n        inside: {\n          'punctuation': /^<<<'?|[';]$/\n        }\n      }\n    }\n  }, {\n    pattern: /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n    alias: 'heredoc-string',\n    greedy: true,\n    inside: {\n      'delimiter': {\n        pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n        alias: 'symbol',\n        inside: {\n          'punctuation': /^<<<\"?|[\";]$/\n        }\n      },\n      'interpolation': string_interpolation\n    }\n  }, {\n    pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n    alias: 'backtick-quoted-string',\n    greedy: true\n  }, {\n    pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n    alias: 'single-quoted-string',\n    greedy: true\n  }, {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n    alias: 'double-quoted-string',\n    greedy: true,\n    inside: {\n      'interpolation': string_interpolation\n    }\n  }];\n  Prism.languages.insertBefore('php', 'variable', {\n    'string': string,\n    'attribute': {\n      pattern: /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\n      greedy: true,\n      inside: {\n        'attribute-content': {\n          pattern: /^(#\\[)[\\s\\S]+(?=\\]$)/,\n          lookbehind: true,\n          // inside can appear subset of php\n          inside: {\n            'comment': comment,\n            'string': string,\n            'attribute-class-name': [{\n              pattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n              alias: 'class-name',\n              greedy: true,\n              lookbehind: true\n            }, {\n              pattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n              alias: ['class-name', 'class-name-fully-qualified'],\n              greedy: true,\n              lookbehind: true,\n              inside: {\n                'punctuation': /\\\\/\n              }\n            }],\n            'constant': constant,\n            'number': number,\n            'operator': operator,\n            'punctuation': punctuation\n          }\n        },\n        'delimiter': {\n          pattern: /^#\\[|\\]$/,\n          alias: 'punctuation'\n        }\n      }\n    }\n  });\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (!/<\\?/.test(env.code)) {\n      return;\n    }\n\n    var phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n  });\n})(Prism);","/**\n * Original by Samuel Flores\n *\n * Adds the following new token classes:\n *     constant, builtin, variable, symbol, regex\n */\n(function (Prism) {\n  Prism.languages.ruby = Prism.languages.extend('clike', {\n    'comment': {\n      pattern: /#.*|^=begin\\s[\\s\\S]*?^=end/m,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/,\n      lookbehind: true,\n      inside: {\n        'punctuation': /[.\\\\]/\n      }\n    },\n    'keyword': /\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/,\n    'operator': /\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[+\\-*/%<>!^&|=])=?|[?:]/,\n    'punctuation': /[(){}[\\].,;]/\n  });\n  Prism.languages.insertBefore('ruby', 'operator', {\n    'double-colon': {\n      pattern: /::/,\n      alias: 'punctuation'\n    }\n  });\n  var interpolation = {\n    pattern: /((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/,\n    lookbehind: true,\n    inside: {\n      'content': {\n        pattern: /^(#\\{)[\\s\\S]+(?=\\}$)/,\n        lookbehind: true,\n        inside: Prism.languages.ruby\n      },\n      'delimiter': {\n        pattern: /^#\\{|\\}$/,\n        alias: 'punctuation'\n      }\n    }\n  };\n  delete Prism.languages.ruby.function;\n  var percentExpression = '(?:' + [/([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source, /\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)/.source, /\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}/.source, /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]/.source, /<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>/.source].join('|') + ')';\n  var symbolName = /(?:\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(?:\\b[a-zA-Z_]\\w*|[^\\s\\0-\\x7F]+)[?!]?|\\$.)/.source;\n  Prism.languages.insertBefore('ruby', 'keyword', {\n    'regex-literal': [{\n      pattern: RegExp(/%r/.source + percentExpression + /[egimnosux]{0,6}/.source),\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'regex': /[\\s\\S]+/\n      }\n    }, {\n      pattern: /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'regex': /[\\s\\S]+/\n      }\n    }],\n    'variable': /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n    'symbol': [{\n      pattern: RegExp(/(^|[^:]):/.source + symbolName),\n      lookbehind: true,\n      greedy: true\n    }, {\n      pattern: RegExp(/([\\r\\n{(,][ \\t]*)/.source + symbolName + /(?=:(?!:))/.source),\n      lookbehind: true,\n      greedy: true\n    }],\n    'method-definition': {\n      pattern: /(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/,\n      lookbehind: true,\n      inside: {\n        'function': /\\b\\w+$/,\n        'keyword': /^self\\b/,\n        'class-name': /^\\w+/,\n        'punctuation': /\\./\n      }\n    }\n  });\n  Prism.languages.insertBefore('ruby', 'string', {\n    'string-literal': [{\n      pattern: RegExp(/%[qQiIwWs]?/.source + percentExpression),\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'string': /[\\s\\S]+/\n      }\n    }, {\n      pattern: /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'string': /[\\s\\S]+/\n      }\n    }, {\n      pattern: /<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n      alias: 'heredoc-string',\n      greedy: true,\n      inside: {\n        'delimiter': {\n          pattern: /^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*$/i,\n          inside: {\n            'symbol': /\\b\\w+/,\n            'punctuation': /^<<[-~]?/\n          }\n        },\n        'interpolation': interpolation,\n        'string': /[\\s\\S]+/\n      }\n    }, {\n      pattern: /<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n      alias: 'heredoc-string',\n      greedy: true,\n      inside: {\n        'delimiter': {\n          pattern: /^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*$/i,\n          inside: {\n            'symbol': /\\b\\w+/,\n            'punctuation': /^<<[-~]?'|'$/\n          }\n        },\n        'string': /[\\s\\S]+/\n      }\n    }],\n    'command-literal': [{\n      pattern: RegExp(/%x/.source + percentExpression),\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'command': {\n          pattern: /[\\s\\S]+/,\n          alias: 'string'\n        }\n      }\n    }, {\n      pattern: /`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|[^\\\\`#\\r\\n])*`/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'command': {\n          pattern: /[\\s\\S]+/,\n          alias: 'string'\n        }\n      }\n    }]\n  });\n  delete Prism.languages.ruby.string;\n  Prism.languages.insertBefore('ruby', 'number', {\n    'builtin': /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/,\n    'constant': /\\b[A-Z][A-Z0-9_]*(?:[?!]|\\b)/\n  });\n  Prism.languages.rb = Prism.languages.ruby;\n})(Prism);","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\n\n/**\n * prism-react-renderer:\n * This file has been modified to remove:\n * - globals and window dependency\n * - worker support\n * - highlightAll and other element dependent methods\n * - _.hooks helpers\n * - UMD/node-specific hacks\n * It has also been run through prettier\n */\nvar Prism = function () {\n  // Private helper vars\n  var lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n  var uniqueId = 0; // The grammar object for plaintext\n\n  var plainTextGrammar = {};\n  var _ = {\n    /**\n     * A namespace for utility methods.\n     *\n     * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n     * change or disappear at any time.\n     *\n     * @namespace\n     * @memberof Prism\n     */\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, encode(tokens.content), tokens.alias);\n        } else if (Array.isArray(tokens)) {\n          return tokens.map(encode);\n        } else {\n          return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n        }\n      },\n\n      /**\n       * Returns the name of the type of the given value.\n       *\n       * @param {any} o\n       * @returns {string}\n       * @example\n       * type(null)      === 'Null'\n       * type(undefined) === 'Undefined'\n       * type(123)       === 'Number'\n       * type('foo')     === 'String'\n       * type(true)      === 'Boolean'\n       * type([1, 2])    === 'Array'\n       * type({})        === 'Object'\n       * type(String)    === 'Function'\n       * type(/abc+/)    === 'RegExp'\n       */\n      type: function type(o) {\n        return Object.prototype.toString.call(o).slice(8, -1);\n      },\n\n      /**\n       * Returns a unique number for the given object. Later calls will still return the same number.\n       *\n       * @param {Object} obj\n       * @returns {number}\n       */\n      objId: function objId(obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', {\n            value: ++uniqueId\n          });\n        }\n\n        return obj['__id'];\n      },\n\n      /**\n       * Creates a deep clone of the given object.\n       *\n       * The main intended use of this function is to clone language definitions.\n       *\n       * @param {T} o\n       * @param {Record<number, any>} [visited]\n       * @returns {T}\n       * @template T\n       */\n      clone: function deepClone(o, visited) {\n        visited = visited || {};\n        var clone;\n        var id;\n\n        switch (_.util.type(o)) {\n          case 'Object':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone =\n            /** @type {Record<string, any>} */\n            {};\n            visited[id] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = deepClone(o[key], visited);\n              }\n            }\n\n            return (\n              /** @type {any} */\n              clone\n            );\n\n          case 'Array':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone = [];\n            visited[id] = clone;\n\n            /** @type {Array} */\n\n            /** @type {any} */\n            o.forEach(function (v, i) {\n              clone[i] = deepClone(v, visited);\n            });\n            return (\n              /** @type {any} */\n              clone\n            );\n\n          default:\n            return o;\n        }\n      },\n\n      /**\n       * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n       *\n       * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n       *\n       * @param {Element} element\n       * @returns {string}\n       */\n      getLanguage: function getLanguage(element) {\n        while (element) {\n          var m = lang.exec(element.className);\n\n          if (m) {\n            return m[1].toLowerCase();\n          }\n\n          element = element.parentElement;\n        }\n\n        return 'none';\n      },\n\n      /**\n       * Sets the Prism `language-xxxx` class of the given element.\n       *\n       * @param {Element} element\n       * @param {string} language\n       * @returns {void}\n       */\n      setLanguage: function setLanguage(element, language) {\n        // remove all `language-xxxx` classes\n        // (this might leave behind a leading space)\n        element.className = element.className.replace(RegExp(lang, 'gi'), ''); // add the new `language-xxxx` class\n        // (using `classList` will automatically clean up spaces for us)\n\n        element.classList.add('language-' + language);\n      },\n\n      /**\n       * Returns whether a given class is active for `element`.\n       *\n       * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n       * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n       * given class is just the given class with a `no-` prefix.\n       *\n       * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n       * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n       * ancestors have the given class or the negated version of it, then the default activation will be returned.\n       *\n       * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n       * version of it, the class is considered active.\n       *\n       * @param {Element} element\n       * @param {string} className\n       * @param {boolean} [defaultActivation=false]\n       * @returns {boolean}\n       */\n      isActive: function isActive(element, className, defaultActivation) {\n        var no = 'no-' + className;\n\n        while (element) {\n          var classList = element.classList;\n\n          if (classList.contains(className)) {\n            return true;\n          }\n\n          if (classList.contains(no)) {\n            return false;\n          }\n\n          element = element.parentElement;\n        }\n\n        return !!defaultActivation;\n      }\n    },\n\n    /**\n     * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n     *\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    languages: {\n      /**\n       * The grammar for plain, unformatted text.\n       */\n      plain: plainTextGrammar,\n      plaintext: plainTextGrammar,\n      text: plainTextGrammar,\n      txt: plainTextGrammar,\n\n      /**\n       * Creates a deep copy of the language with the given id and appends the given tokens.\n       *\n       * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n       * will be overwritten at its original position.\n       *\n       * ## Best practices\n       *\n       * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n       * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n       * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n       *\n       * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n       * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n       *\n       * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n       * @param {Grammar} redef The new tokens to append.\n       * @returns {Grammar} The new language created.\n       * @public\n       * @example\n       * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n       *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n       *     // at its original position\n       *     'comment': { ... },\n       *     // CSS doesn't have a 'color' token, so this token will be appended\n       *     'color': /\\b(?:red|green|blue)\\b/\n       * });\n       */\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\n       * Inserts tokens _before_ another token in a language definition or any other grammar.\n       *\n       * ## Usage\n       *\n       * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n       * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n       * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n       * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n       * this:\n       *\n       * ```js\n       * Prism.languages.markup.style = {\n       *     // token\n       * };\n       * ```\n       *\n       * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n       * before existing tokens. For the CSS example above, you would use it like this:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'cdata', {\n       *     'style': {\n       *         // token\n       *     }\n       * });\n       * ```\n       *\n       * ## Special cases\n       *\n       * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n       * will be ignored.\n       *\n       * This behavior can be used to insert tokens after `before`:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'comment', {\n       *     'comment': Prism.languages.markup.comment,\n       *     // tokens after 'comment'\n       * });\n       * ```\n       *\n       * ## Limitations\n       *\n       * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n       * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n       * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n       * deleting properties which is necessary to insert at arbitrary positions.\n       *\n       * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n       * Instead, it will create a new object and replace all references to the target object with the new one. This\n       * can be done without temporarily deleting properties, so the iteration order is well-defined.\n       *\n       * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n       * you hold the target object in a variable, then the value of the variable will not change.\n       *\n       * ```js\n       * var oldMarkup = Prism.languages.markup;\n       * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n       *\n       * assert(oldMarkup !== Prism.languages.markup);\n       * assert(newMarkup === Prism.languages.markup);\n       * ```\n       *\n       * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n       * object to be modified.\n       * @param {string} before The key to insert before.\n       * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n       * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n       * object to be modified.\n       *\n       * Defaults to `Prism.languages`.\n       * @returns {Grammar} The new grammar object.\n       * @public\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root ||\n        /** @type {any} */\n        _.languages;\n        var grammar = root[inside];\n        /** @type {Grammar} */\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            } // Do not insert token which also occur in insert. See #1525\n\n\n            if (!insert.hasOwnProperty(token)) {\n              ret[token] = grammar[token];\n            }\n          }\n        }\n\n        var old = root[inside];\n        root[inside] = ret; // Update references in other language definitions\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === old && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n        var objId = _.util.objId;\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n            var property = o[i];\n\n            var propertyType = _.util.type(property);\n\n            if (propertyType === 'Object' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, null, visited);\n            } else if (propertyType === 'Array' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n\n    /**\n     * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n     * and the language definitions to use, and returns a string with the HTML produced.\n     *\n     * The following hooks will be run:\n     * 1. `before-tokenize`\n     * 2. `after-tokenize`\n     * 3. `wrap`: On each {@link Token}.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @param {string} language The name of the language definition passed to `grammar`.\n     * @returns {string} The highlighted HTML.\n     * @memberof Prism\n     * @public\n     * @example\n     * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n     */\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n\n      _.hooks.run('before-tokenize', env);\n\n      env.tokens = _.tokenize(env.code, env.grammar);\n\n      _.hooks.run('after-tokenize', env);\n\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n\n    /**\n     * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n     * and the language definitions to use, and returns an array with the tokenized code.\n     *\n     * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n     *\n     * This method could be useful in other contexts as well, as a very crude parser.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @returns {TokenStream} An array of strings and tokens, a token stream.\n     * @memberof Prism\n     * @public\n     * @example\n     * let code = `var foo = 0;`;\n     * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n     * tokens.forEach(token => {\n     *     if (token instanceof Prism.Token && token.type === 'number') {\n     *         console.log(`Found numeric literal: ${token.content}`);\n     *     }\n     * });\n     */\n    tokenize: function tokenize(text, grammar) {\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      var tokenList = new LinkedList();\n      addAfter(tokenList, tokenList.head, text);\n      matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n      return toArray(tokenList);\n    },\n\n    /**\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    hooks: {\n      all: {},\n\n      /**\n       * Adds the given callback to the list of callbacks for the given hook.\n       *\n       * The callback will be invoked when the hook it is registered for is run.\n       * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n       *\n       * One callback function can be registered to multiple hooks and the same hook multiple times.\n       *\n       * @param {string} name The name of the hook.\n       * @param {HookCallback} callback The callback function which is given environment variables.\n       * @public\n       */\n      add: function add(name, callback) {\n        var hooks = _.hooks.all;\n        hooks[name] = hooks[name] || [];\n        hooks[name].push(callback);\n      },\n\n      /**\n       * Runs a hook invoking all registered callbacks with the given environment variables.\n       *\n       * Callbacks will be invoked synchronously and in the order in which they were registered.\n       *\n       * @param {string} name The name of the hook.\n       * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n       * @public\n       */\n      run: function run(name, env) {\n        var callbacks = _.hooks.all[name];\n\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n\n        for (var i = 0, callback; callback = callbacks[i++];) {\n          callback(env);\n        }\n      }\n    },\n    Token: Token\n  }; // Typescript note:\n  // The following can be used to import the Token type in JSDoc:\n  //\n  //   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n  /**\n   * Creates a new token.\n   *\n   * @param {string} type See {@link Token#type type}\n   * @param {string | TokenStream} content See {@link Token#content content}\n   * @param {string|string[]} [alias] The alias(es) of the token.\n   * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n   * @class\n   * @global\n   * @public\n   */\n\n  function Token(type, content, alias, matchedStr) {\n    /**\n     * The type of the token.\n     *\n     * This is usually the key of a pattern in a {@link Grammar}.\n     *\n     * @type {string}\n     * @see GrammarToken\n     * @public\n     */\n    this.type = type;\n    /**\n     * The strings or tokens contained by this token.\n     *\n     * This will be a token stream if the pattern matched also defined an `inside` grammar.\n     *\n     * @type {string | TokenStream}\n     * @public\n     */\n\n    this.content = content;\n    /**\n     * The alias(es) of the token.\n     *\n     * @type {string|string[]}\n     * @see GrammarToken\n     * @public\n     */\n\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || '').length | 0;\n  }\n  /**\n   * A token stream is an array of strings and {@link Token Token} objects.\n   *\n   * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n   * them.\n   *\n   * 1. No adjacent strings.\n   * 2. No empty strings.\n   *\n   *    The only exception here is the token stream that only contains the empty string and nothing else.\n   *\n   * @typedef {Array<string | Token>} TokenStream\n   * @global\n   * @public\n   */\n\n  /**\n   * Converts the given token or token stream to an HTML representation.\n   *\n   * The following hooks will be run:\n   * 1. `wrap`: On each {@link Token}.\n   *\n   * @param {string | Token | TokenStream} o The token or token stream to be converted.\n   * @param {string} language The name of current language.\n   * @returns {string} The HTML representation of the token or token stream.\n   * @memberof Token\n   * @static\n   */\n\n\n  Token.stringify = function stringify(o, language) {\n    if (typeof o == 'string') {\n      return o;\n    }\n\n    if (Array.isArray(o)) {\n      var s = '';\n      o.forEach(function (e) {\n        s += stringify(e, language);\n      });\n      return s;\n    }\n\n    var env = {\n      type: o.type,\n      content: stringify(o.content, language),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language\n    };\n    var aliases = o.alias;\n\n    if (aliases) {\n      if (Array.isArray(aliases)) {\n        Array.prototype.push.apply(env.classes, aliases);\n      } else {\n        env.classes.push(aliases);\n      }\n    }\n\n    _.hooks.run('wrap', env);\n\n    var attributes = '';\n\n    for (var name in env.attributes) {\n      attributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n    }\n\n    return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n  };\n  /**\n   * @param {RegExp} pattern\n   * @param {number} pos\n   * @param {string} text\n   * @param {boolean} lookbehind\n   * @returns {RegExpExecArray | null}\n   */\n\n\n  function matchPattern(pattern, pos, text, lookbehind) {\n    pattern.lastIndex = pos;\n    var match = pattern.exec(text);\n\n    if (match && lookbehind && match[1]) {\n      // change the match to remove the text matched by the Prism lookbehind group\n      var lookbehindLength = match[1].length;\n      match.index += lookbehindLength;\n      match[0] = match[0].slice(lookbehindLength);\n    }\n\n    return match;\n  }\n  /**\n   * @param {string} text\n   * @param {LinkedList<string | Token>} tokenList\n   * @param {any} grammar\n   * @param {LinkedListNode<string | Token>} startNode\n   * @param {number} startPos\n   * @param {RematchOptions} [rematch]\n   * @returns {void}\n   * @private\n   *\n   * @typedef RematchOptions\n   * @property {string} cause\n   * @property {number} reach\n   */\n\n\n  function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n    for (var token in grammar) {\n      if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n        continue;\n      }\n\n      var patterns = grammar[token];\n      patterns = Array.isArray(patterns) ? patterns : [patterns];\n\n      for (var j = 0; j < patterns.length; ++j) {\n        if (rematch && rematch.cause == token + ',' + j) {\n          return;\n        }\n\n        var patternObj = patterns[j];\n        var inside = patternObj.inside;\n        var lookbehind = !!patternObj.lookbehind;\n        var greedy = !!patternObj.greedy;\n        var alias = patternObj.alias;\n\n        if (greedy && !patternObj.pattern.global) {\n          // Without the global flag, lastIndex won't work\n          var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n          patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n        }\n        /** @type {RegExp} */\n\n\n        var pattern = patternObj.pattern || patternObj;\n\n        for ( // iterate the token list and keep track of the current token/string position\n        var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n          if (rematch && pos >= rematch.reach) {\n            break;\n          }\n\n          var str = currentNode.value;\n\n          if (tokenList.length > text.length) {\n            // Something went terribly wrong, ABORT, ABORT!\n            return;\n          }\n\n          if (str instanceof Token) {\n            continue;\n          }\n\n          var removeCount = 1; // this is the to parameter of removeBetween\n\n          var match;\n\n          if (greedy) {\n            match = matchPattern(pattern, pos, text, lookbehind);\n\n            if (!match || match.index >= text.length) {\n              break;\n            }\n\n            var from = match.index;\n            var to = match.index + match[0].length;\n            var p = pos; // find the node that contains the match\n\n            p += currentNode.value.length;\n\n            while (from >= p) {\n              currentNode = currentNode.next;\n              p += currentNode.value.length;\n            } // adjust pos (and p)\n\n\n            p -= currentNode.value.length;\n            pos = p; // the current node is a Token, then the match starts inside another Token, which is invalid\n\n            if (currentNode.value instanceof Token) {\n              continue;\n            } // find the last node which is affected by this match\n\n\n            for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === 'string'); k = k.next) {\n              removeCount++;\n              p += k.value.length;\n            }\n\n            removeCount--; // replace with the new match\n\n            str = text.slice(pos, p);\n            match.index -= pos;\n          } else {\n            match = matchPattern(pattern, 0, str, lookbehind);\n\n            if (!match) {\n              continue;\n            }\n          } // eslint-disable-next-line no-redeclare\n\n\n          var from = match.index;\n          var matchStr = match[0];\n          var before = str.slice(0, from);\n          var after = str.slice(from + matchStr.length);\n          var reach = pos + str.length;\n\n          if (rematch && reach > rematch.reach) {\n            rematch.reach = reach;\n          }\n\n          var removeFrom = currentNode.prev;\n\n          if (before) {\n            removeFrom = addAfter(tokenList, removeFrom, before);\n            pos += before.length;\n          }\n\n          removeRange(tokenList, removeFrom, removeCount);\n          var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n          currentNode = addAfter(tokenList, removeFrom, wrapped);\n\n          if (after) {\n            addAfter(tokenList, currentNode, after);\n          }\n\n          if (removeCount > 1) {\n            // at least one Token object was removed, so we have to do some rematching\n            // this can only happen if the current pattern is greedy\n\n            /** @type {RematchOptions} */\n            var nestedRematch = {\n              cause: token + ',' + j,\n              reach: reach\n            };\n            matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch); // the reach might have been extended because of the rematching\n\n            if (rematch && nestedRematch.reach > rematch.reach) {\n              rematch.reach = nestedRematch.reach;\n            }\n          }\n        }\n      }\n    }\n  }\n  /**\n   * @typedef LinkedListNode\n   * @property {T} value\n   * @property {LinkedListNode<T> | null} prev The previous node.\n   * @property {LinkedListNode<T> | null} next The next node.\n   * @template T\n   * @private\n   */\n\n  /**\n   * @template T\n   * @private\n   */\n\n\n  function LinkedList() {\n    /** @type {LinkedListNode<T>} */\n    var head = {\n      value: null,\n      prev: null,\n      next: null\n    };\n    /** @type {LinkedListNode<T>} */\n\n    var tail = {\n      value: null,\n      prev: head,\n      next: null\n    };\n    head.next = tail;\n    /** @type {LinkedListNode<T>} */\n\n    this.head = head;\n    /** @type {LinkedListNode<T>} */\n\n    this.tail = tail;\n    this.length = 0;\n  }\n  /**\n   * Adds a new node with the given value to the list.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {T} value\n   * @returns {LinkedListNode<T>} The added node.\n   * @template T\n   */\n\n\n  function addAfter(list, node, value) {\n    // assumes that node != list.tail && values.length >= 0\n    var next = node.next;\n    var newNode = {\n      value: value,\n      prev: node,\n      next: next\n    };\n    node.next = newNode;\n    next.prev = newNode;\n    list.length++;\n    return newNode;\n  }\n  /**\n   * Removes `count` nodes after the given node. The given node will not be removed.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {number} count\n   * @template T\n   */\n\n\n  function removeRange(list, node, count) {\n    var next = node.next;\n\n    for (var i = 0; i < count && next !== list.tail; i++) {\n      next = next.next;\n    }\n\n    node.next = next;\n    next.prev = node;\n    list.length -= i;\n  }\n  /**\n   * @param {LinkedList<T>} list\n   * @returns {T[]}\n   * @template T\n   */\n\n\n  function toArray(list) {\n    var array = [];\n    var node = list.head.next;\n\n    while (node !== list.tail) {\n      array.push(node.value);\n      node = node.next;\n    }\n\n    return array;\n  }\n\n  return _;\n}();\n\nvar prism = Prism;\nPrism.default = Prism;\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\nprism.languages.markup = {\n  'comment': {\n    pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n    greedy: true\n  },\n  'prolog': {\n    pattern: /<\\?[\\s\\S]+?\\?>/,\n    greedy: true\n  },\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/i,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': {\n    pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n    greedy: true\n  },\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'special-attr': [],\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nprism.languages.markup['tag'].inside['attr-value'].inside['entity'] = prism.languages.markup['entity'];\nprism.languages.markup['doctype'].inside['internal-subset'].inside = prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nprism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addAttribute', {\n  /**\n   * Adds an pattern to highlight languages embedded in HTML attributes.\n   *\n   * An example of an inlined language is CSS with `style` attributes.\n   *\n   * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addAttribute('style', 'css');\n   */\n  value: function value(attrName, lang) {\n    prism.languages.markup.tag.inside['special-attr'].push({\n      pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n      lookbehind: true,\n      inside: {\n        'attr-name': /^[^\\s=]+/,\n        'attr-value': {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            'value': {\n              pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n              lookbehind: true,\n              alias: [lang, 'language-' + lang],\n              inside: prism.languages[lang]\n            },\n            'punctuation': [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        }\n      }\n    });\n  }\n});\nprism.languages.html = prism.languages.markup;\nprism.languages.mathml = prism.languages.markup;\nprism.languages.svg = prism.languages.markup;\nprism.languages.xml = prism.languages.extend('markup', {});\nprism.languages.ssml = prism.languages.xml;\nprism.languages.atom = prism.languages.xml;\nprism.languages.rss = prism.languages.xml;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var commandAfterHeredoc = {\n    pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n    lookbehind: true,\n    alias: 'punctuation',\n    // this looks reasonably well in all themes\n    inside: null // see below\n\n  };\n  var insideString = {\n    'bash': commandAfterHeredoc,\n    'environment': {\n      pattern: RegExp('\\\\$' + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp('(\\\\{)' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'bash': commandAfterHeredoc\n      }\n    }, // “Normal” string\n    {\n      // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n      pattern: /(^|[^$\\\\])'[^']*'/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n      pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        'entity': insideString.entity\n      }\n    }],\n    'environment': {\n      pattern: RegExp('\\\\$?' + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  commandAfterHeredoc.inside = Prism.languages.bash;\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nprism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'function': /\\b\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nprism.languages.c = prism.languages.extend('clike', {\n  'comment': {\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'string': {\n    // https://en.cppreference.com/w/c/language/string_literal\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n  'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n  'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\nprism.languages.insertBefore('c', 'string', {\n  'char': {\n    // https://en.cppreference.com/w/c/language/character_constant\n    pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n    greedy: true\n  }\n});\nprism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property',\n    inside: {\n      'string': [{\n        // highlight the path of the include statement as a string\n        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n        lookbehind: true\n      }, prism.languages.c['string']],\n      'char': prism.languages.c['char'],\n      'comment': prism.languages.c['comment'],\n      'macro-name': [{\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n        lookbehind: true\n      }, {\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      }],\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /^(#\\s*)[a-z]+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'directive-hash': /^#/,\n      'punctuation': /##|\\\\(?=[\\r\\n])/,\n      'expression': {\n        pattern: /\\S[\\s\\S]*/,\n        inside: prism.languages.c\n      }\n    }\n  }\n});\nprism.languages.insertBefore('c', 'function', {\n  // highlight predefined macros as constants\n  'constant': /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n});\ndelete prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\n(function (Prism) {\n  var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n  var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function () {\n    return keyword.source;\n  });\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    'class-name': [{\n      pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n        return keyword.source;\n      })),\n      lookbehind: true\n    }, // This is intended to capture the class name of method implementations like:\n    //   void foo::bar() const {}\n    // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n    // it starts with an uppercase letter. This approximation should give decent results.\n    /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n    //   Foo::~Foo() {}\n    /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n    // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n    /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],\n    'keyword': keyword,\n    'number': {\n      pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n      greedy: true\n    },\n    'operator': />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n    'boolean': /\\b(?:false|true)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'string', {\n    'module': {\n      // https://en.cppreference.com/w/cpp/language/modules\n      pattern: RegExp(/(\\b(?:import|module)\\s+)/.source + '(?:' + // header-name\n      /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source + '|' + // module name or partition or both\n      /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function () {\n        return modName;\n      }) + ')'),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'string': /^[<\"][\\s\\S]+/,\n        'operator': /:/,\n        'punctuation': /\\./\n      }\n    },\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'keyword', {\n    'generic-function': {\n      pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n      inside: {\n        'function': /^\\w+/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          alias: 'class-name',\n          inside: Prism.languages.cpp\n        }\n      }\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'operator', {\n    'double-colon': {\n      pattern: /::/,\n      alias: 'punctuation'\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'class-name', {\n    // the base clause is an optional list of parent classes\n    // https://en.cppreference.com/w/cpp/language/class\n    'base-clause': {\n      pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n      lookbehind: true,\n      greedy: true,\n      inside: Prism.languages.extend('cpp', {})\n    }\n  });\n  Prism.languages.insertBefore('inside', 'double-colon', {\n    // All untokenized words that are not namespaces should be class names\n    'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n  }, Prism.languages.cpp['base-clause']);\n})(prism);\n/* \"prismjs/components/prism-css\" */\n\n\n(function (Prism) {\n  var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': {\n      pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n      lookbehind: true\n    },\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      lookbehind: true\n    },\n    'important': /!important\\b/i,\n    'function': {\n      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n      lookbehind: true\n    },\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    markup.tag.addAttribute('style', 'css');\n  }\n})(prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  var selectorInside;\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector.pattern,\n    lookbehind: true,\n    inside: selectorInside = {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      'class': /\\.[-\\w]+/,\n      'id': /#[-\\w]+/,\n      'attribute': {\n        pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n        greedy: true,\n        inside: {\n          'punctuation': /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          'namespace': {\n            pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              'punctuation': /\\|$/\n            }\n          },\n          'attr-name': {\n            pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n            lookbehind: true\n          },\n          'attr-value': [string, {\n            pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n            lookbehind: true\n          }],\n          'operator': /[|~*^$]?=/\n        }\n      },\n      'n-th': [{\n        pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'number': /[\\dn]+/,\n          'operator': /[+-]/\n        }\n      }, {\n        pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n        lookbehind: true\n      }],\n      'combinator': />|\\+|~|\\|\\|/,\n      // the `tag` token has been existed and removed.\n      // because we can't find a perfect tokenize to match it.\n      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n      'punctuation': /[(),]/\n    }\n  };\n  Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n  Prism.languages.insertBefore('css', 'property', {\n    'variable': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n      lookbehind: true\n    }\n  });\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  Prism.languages.insertBefore('css', 'function', {\n    'operator': {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    // CAREFUL!\n    // Previewers and Inline color use hexcode and color.\n    'hexcode': {\n      pattern: /\\B#[\\da-f]{3,8}\\b/i,\n      alias: 'color'\n    },\n    'color': [{\n      pattern: /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    // it's important that there is no boundary assertion after the hex digits\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'number': number\n  });\n})(prism);\n/* \"prismjs/components/prism-javascript\" */\n\n\nprism.languages.javascript = prism.languages.extend('clike', {\n  'class-name': [prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|\\})\\s*)catch\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': {\n    pattern: RegExp(/(^|[^\\w$])/.source + '(?:' + ( // constant\n    /NaN|Infinity/.source + '|' + // binary integer\n    /0[bB][01]+(?:_[01]+)*n?/.source + '|' + // octal integer\n    /0[oO][0-7]+(?:_[0-7]+)*n?/.source + '|' + // hexadecimal integer\n    /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + '|' + // decimal bigint\n    /\\d+(?:_\\d+)*n/.source + '|' + // decimal number (integer or float) but no bigint\n    /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + ')' + /(?![\\w$])/.source),\n    lookbehind: true\n  },\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nprism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\nprism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    // eslint-disable-next-line regexp/no-dupe-characters-character-class\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: prism.languages.regex\n      },\n      'regex-delimiter': /^\\/|\\/$/,\n      'regex-flags': /^[a-z]+$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nprism.languages.insertBefore('javascript', 'string', {\n  'hashbang': {\n    pattern: /^#!.*/,\n    greedy: true,\n    alias: 'comment'\n  },\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'string-property': {\n    pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property'\n  }\n});\nprism.languages.insertBefore('javascript', 'operator', {\n  'literal-property': {\n    pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n    lookbehind: true,\n    alias: 'property'\n  }\n});\n\nif (prism.languages.markup) {\n  prism.languages.markup.tag.addInlined('script', 'javascript'); // add attribute support for all DOM events.\n  // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\n  prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');\n}\n\nprism.languages.js = prism.languages.javascript;\n/* \"prismjs/components/prism-jsx\" */\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n  var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n  var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n  /**\n   * @param {string} source\n   * @param {string} [flags]\n   */\n\n  function re(source, flags) {\n    source = source.replace(/<S>/g, function () {\n      return space;\n    }).replace(/<BRACES>/g, function () {\n      return braces;\n    }).replace(/<SPREAD>/g, function () {\n      return spread;\n    });\n    return RegExp(source, flags);\n  }\n\n  spread = re(spread).source;\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = re(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source);\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: re(/<SPREAD>/.source),\n      inside: Prism.languages.jsx\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'special-attr', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: re(/=<BRACES>/.source),\n      alias: 'language-javascript',\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?=\\{)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      }\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function stringifyToken(token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function walkTokens(tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ;else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  /**\n   * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n   *\n   * @param {string} source\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function withId(source, flags) {\n    return RegExp(source.replace(/<ID>/g, function () {\n      return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n    }), flags);\n  }\n\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    'imports': {\n      // https://tc39.es/ecma262/#sec-imports\n      pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    'exports': {\n      // https://tc39.es/ecma262/#sec-exports\n      pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n    alias: 'control-flow'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: withId(/(\\.\\s*)#?<ID>/.source),\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(prism);\n/* \"prismjs/components/prism-js-templates\" */\n\n\n(function (Prism) {\n  var templateString = Prism.languages.javascript['template-string']; // see the pattern in prism-javascript.js\n\n  var templateLiteralPattern = templateString.pattern.source;\n  var interpolationObject = templateString.inside['interpolation'];\n  var interpolationPunctuationObject = interpolationObject.inside['interpolation-punctuation'];\n  var interpolationPattern = interpolationObject.pattern.source;\n  /**\n   * Creates a new pattern to match a template string with a special tag.\n   *\n   * This will return `undefined` if there is no grammar with the given language id.\n   *\n   * @param {string} language The language id of the embedded language. E.g. `markdown`.\n   * @param {string} tag The regex pattern to match the tag.\n   * @returns {object | undefined}\n   * @example\n   * createTemplate('css', /\\bcss/.source);\n   */\n\n  function createTemplate(language, tag) {\n    if (!Prism.languages[language]) {\n      return undefined;\n    }\n\n    return {\n      pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        'embedded-code': {\n          pattern: /[\\s\\S]+/,\n          alias: language\n        }\n      }\n    };\n  }\n\n  Prism.languages.javascript['template-string'] = [// styled-jsx:\n  //   css`a { color: #25F; }`\n  // styled-components:\n  //   styled.h1`color: red;`\n  createTemplate('css', /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source), // html`<p></p>`\n  // div.innerHTML = `<p></p>`\n  createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n  createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n  createTemplate('markdown', /\\b(?:markdown|md)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n  createTemplate('graphql', /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source), // sql`...`\n  createTemplate('sql', /\\bsql/.source), // vanilla template string\n  templateString].filter(Boolean);\n  /**\n   * Returns a specific placeholder literal for the given language.\n   *\n   * @param {number} counter\n   * @param {string} language\n   * @returns {string}\n   */\n\n  function getPlaceholder(counter, language) {\n    return '___' + language.toUpperCase() + '_' + counter + '___';\n  }\n  /**\n   * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n   *\n   * @param {string} code\n   * @param {any} grammar\n   * @param {string} language\n   * @returns {(string|Token)[]}\n   */\n\n\n  function tokenizeWithHooks(code, grammar, language) {\n    var env = {\n      code: code,\n      grammar: grammar,\n      language: language\n    };\n    Prism.hooks.run('before-tokenize', env);\n    env.tokens = Prism.tokenize(env.code, env.grammar);\n    Prism.hooks.run('after-tokenize', env);\n    return env.tokens;\n  }\n  /**\n   * Returns the token of the given JavaScript interpolation expression.\n   *\n   * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n   * @returns {Token}\n   */\n\n\n  function tokenizeInterpolationExpression(expression) {\n    var tempGrammar = {};\n    tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject;\n    /** @type {Array} */\n\n    var tokens = Prism.tokenize(expression, tempGrammar);\n\n    if (tokens.length === 3) {\n      /**\n       * The token array will look like this\n       * [\n       *     [\"interpolation-punctuation\", \"${\"]\n       *     \"...\" // JavaScript expression of the interpolation\n       *     [\"interpolation-punctuation\", \"}\"]\n       * ]\n       */\n      var args = [1, 1];\n      args.push.apply(args, tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript'));\n      tokens.splice.apply(tokens, args);\n    }\n\n    return new Prism.Token('interpolation', tokens, interpolationObject.alias, expression);\n  }\n  /**\n   * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n   *\n   * This function has 3 phases:\n   *\n   * 1. Replace all JavaScript interpolation expression with a placeholder.\n   *    The placeholder will have the syntax of a identify of the target language.\n   * 2. Tokenize the code with placeholders.\n   * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n   *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n   *    tokenized as two tokens by the grammar of the embedded language.\n   *\n   * @param {string} code\n   * @param {object} grammar\n   * @param {string} language\n   * @returns {Token}\n   */\n\n\n  function tokenizeEmbedded(code, grammar, language) {\n    // 1. First filter out all interpolations\n    // because they might be escaped, we need a lookbehind, so we use Prism\n\n    /** @type {(Token|string)[]} */\n    var _tokens = Prism.tokenize(code, {\n      'interpolation': {\n        pattern: RegExp(interpolationPattern),\n        lookbehind: true\n      }\n    }); // replace all interpolations with a placeholder which is not in the code already\n\n\n    var placeholderCounter = 0;\n    /** @type {Object<string, string>} */\n\n    var placeholderMap = {};\n\n    var embeddedCode = _tokens.map(function (token) {\n      if (typeof token === 'string') {\n        return token;\n      } else {\n        var interpolationExpression = token.content;\n        var placeholder;\n\n        while (code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1) {\n          /* noop */\n        }\n\n        placeholderMap[placeholder] = interpolationExpression;\n        return placeholder;\n      }\n    }).join(''); // 2. Tokenize the embedded code\n\n\n    var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language); // 3. Re-insert the interpolation\n\n    var placeholders = Object.keys(placeholderMap);\n    placeholderCounter = 0;\n    /**\n     *\n     * @param {(Token|string)[]} tokens\n     * @returns {void}\n     */\n\n    function walkTokens(tokens) {\n      for (var i = 0; i < tokens.length; i++) {\n        if (placeholderCounter >= placeholders.length) {\n          return;\n        }\n\n        var token = tokens[i];\n\n        if (typeof token === 'string' || typeof token.content === 'string') {\n          var placeholder = placeholders[placeholderCounter];\n          var s = typeof token === 'string' ? token :\n          /** @type {string} */\n          token.content;\n          var index = s.indexOf(placeholder);\n\n          if (index !== -1) {\n            ++placeholderCounter;\n            var before = s.substring(0, index);\n            var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);\n            var after = s.substring(index + placeholder.length);\n            var replacement = [];\n\n            if (before) {\n              replacement.push(before);\n            }\n\n            replacement.push(middle);\n\n            if (after) {\n              var afterTokens = [after];\n              walkTokens(afterTokens);\n              replacement.push.apply(replacement, afterTokens);\n            }\n\n            if (typeof token === 'string') {\n              tokens.splice.apply(tokens, [i, 1].concat(replacement));\n              i += replacement.length - 1;\n            } else {\n              token.content = replacement;\n            }\n          }\n        } else {\n          var content = token.content;\n\n          if (Array.isArray(content)) {\n            walkTokens(content);\n          } else {\n            walkTokens([content]);\n          }\n        }\n      }\n    }\n\n    walkTokens(embeddedTokens);\n    return new Prism.Token(language, embeddedTokens, 'language-' + language, code);\n  }\n  /**\n   * The languages for which JS templating will handle tagged template literals.\n   *\n   * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n   */\n\n\n  var supportedLanguages = {\n    'javascript': true,\n    'js': true,\n    'typescript': true,\n    'ts': true,\n    'jsx': true,\n    'tsx': true\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (!(env.language in supportedLanguages)) {\n      return;\n    }\n    /**\n     * Finds and tokenizes all template strings with an embedded languages.\n     *\n     * @param {(Token | string)[]} tokens\n     * @returns {void}\n     */\n\n\n    function findTemplateStrings(tokens) {\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (typeof token === 'string') {\n          continue;\n        }\n\n        var content = token.content;\n\n        if (!Array.isArray(content)) {\n          if (typeof content !== 'string') {\n            findTemplateStrings([content]);\n          }\n\n          continue;\n        }\n\n        if (token.type === 'template-string') {\n          /**\n           * A JavaScript template-string token will look like this:\n           *\n           * [\"template-string\", [\n           *     [\"template-punctuation\", \"`\"],\n           *     (\n           *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n           *         or\n           *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n           *                                  It also has an alias which is the language of the embedded code.\n           *     ),\n           *     [\"template-punctuation\", \"`\"]\n           * ]]\n           */\n          var embedded = content[1];\n\n          if (content.length === 3 && typeof embedded !== 'string' && embedded.type === 'embedded-code') {\n            // get string content\n            var code = stringContent(embedded);\n            var alias = embedded.alias;\n            var language = Array.isArray(alias) ? alias[0] : alias;\n            var grammar = Prism.languages[language];\n\n            if (!grammar) {\n              // the embedded language isn't registered.\n              continue;\n            }\n\n            content[1] = tokenizeEmbedded(code, grammar, language);\n          }\n        } else {\n          findTemplateStrings(content);\n        }\n      }\n    }\n\n    findTemplateStrings(env.tokens);\n  });\n  /**\n   * Returns the string content of a token or token stream.\n   *\n   * @param {string | Token | (string | Token)[]} value\n   * @returns {string}\n   */\n\n  function stringContent(value) {\n    if (typeof value === 'string') {\n      return value;\n    } else if (Array.isArray(value)) {\n      return value.map(stringContent).join('');\n    } else {\n      return stringContent(value.content);\n    }\n  }\n})(prism);\n/* \"prismjs/components/prism-coffeescript\" */\n\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/;\n  var interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        'script': {\n          pattern: /[\\s\\S]+/,\n          alias: 'language-javascript',\n          inside: Prism.languages.javascript\n        }\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(prism);\n/* \"prismjs/components/prism-diff\" */\n\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d.*$/m] // deleted, inserted, unchanged, diff\n\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n\n    if (name === 'diff') {\n      alias.push('bold');\n    }\n\n    Prism.languages.diff[name] = {\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias,\n      inside: {\n        'line': {\n          pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n          lookbehind: true\n        },\n        'prefix': {\n          pattern: /[\\s\\S]/,\n          alias: /\\w+/.exec(name)[0]\n        }\n      }\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(prism);\n/* \"prismjs/components/prism-git\" */\n\n\nprism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit-sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nprism.languages.go = prism.languages.extend('clike', {\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n    lookbehind: true,\n    greedy: true\n  },\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'boolean': /\\b(?:_|false|iota|nil|true)\\b/,\n  'number': [// binary and octal integers\n  /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i, // hexadecimal integers and floats\n  /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i, // decimal integers and floats\n  /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i],\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'builtin': /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n});\nprism.languages.insertBefore('go', 'string', {\n  'char': {\n    pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n    greedy: true\n  }\n});\ndelete prism.languages.go['class-name'];\n/* \"prismjs/components/prism-graphql\" */\n\nprism.languages.graphql = {\n  'comment': /#.*/,\n  'description': {\n    pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n    greedy: true,\n    alias: 'string',\n    inside: {\n      'language-markdown': {\n        pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n        lookbehind: true,\n        inside: prism.languages.markdown\n      }\n    }\n  },\n  'string': {\n    pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:false|true)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'atom-input': {\n    pattern: /\\b[A-Z]\\w*Input\\b/,\n    alias: 'class-name'\n  },\n  'scalar': /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n  'constant': /\\b[A-Z][A-Z_\\d]*\\b/,\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-mutation': {\n    pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-query': {\n    pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n  'operator': /[!=|&]|\\.{3}/,\n  'property-query': /\\w+(?=\\s*\\()/,\n  'object': /\\w+(?=\\s*\\{)/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'property': /\\w+/\n};\nprism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n  if (env.language !== 'graphql') {\n    return;\n  }\n  /**\n   * get the graphql token stream that we want to customize\n   *\n   * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n   * @type {Token[]}\n   */\n\n\n  var validTokens = env.tokens.filter(function (token) {\n    return typeof token !== 'string' && token.type !== 'comment' && token.type !== 'scalar';\n  });\n  var currentIndex = 0;\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {number} offset\n   * @returns {Token | undefined}\n   */\n\n  function getToken(offset) {\n    return validTokens[currentIndex + offset];\n  }\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {readonly string[]} types\n   * @param {number} [offset=0]\n   * @returns {boolean}\n   */\n\n\n  function isTokenType(types, offset) {\n    offset = offset || 0;\n\n    for (var i = 0; i < types.length; i++) {\n      var token = getToken(i + offset);\n\n      if (!token || token.type !== types[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Returns the index of the closing bracket to an opening bracket.\n   *\n   * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n   *\n   * If no closing bracket could be found, `-1` will be returned.\n   *\n   * @param {RegExp} open\n   * @param {RegExp} close\n   * @returns {number}\n   */\n\n\n  function findClosingBracket(open, close) {\n    var stackHeight = 1;\n\n    for (var i = currentIndex; i < validTokens.length; i++) {\n      var token = validTokens[i];\n      var content = token.content;\n\n      if (token.type === 'punctuation' && typeof content === 'string') {\n        if (open.test(content)) {\n          stackHeight++;\n        } else if (close.test(content)) {\n          stackHeight--;\n\n          if (stackHeight === 0) {\n            return i;\n          }\n        }\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * Adds an alias to the given token.\n   *\n   * @param {Token} token\n   * @param {string} alias\n   * @returns {void}\n   */\n\n\n  function addAlias(token, alias) {\n    var aliases = token.alias;\n\n    if (!aliases) {\n      token.alias = aliases = [];\n    } else if (!Array.isArray(aliases)) {\n      token.alias = aliases = [aliases];\n    }\n\n    aliases.push(alias);\n  }\n\n  for (; currentIndex < validTokens.length;) {\n    var startToken = validTokens[currentIndex++]; // add special aliases for mutation tokens\n\n    if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n      // any array of the names of all input variables (if any)\n      var inputVariables = [];\n\n      if (isTokenType(['definition-mutation', 'punctuation']) && getToken(1).content === '(') {\n        // definition\n        currentIndex += 2; // skip 'definition-mutation' and 'punctuation'\n\n        var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/);\n\n        if (definitionEnd === -1) {\n          continue;\n        } // find all input variables\n\n\n        for (; currentIndex < definitionEnd; currentIndex++) {\n          var t = getToken(0);\n\n          if (t.type === 'variable') {\n            addAlias(t, 'variable-input');\n            inputVariables.push(t.content);\n          }\n        }\n\n        currentIndex = definitionEnd + 1;\n      }\n\n      if (isTokenType(['punctuation', 'property-query']) && getToken(0).content === '{') {\n        currentIndex++; // skip opening bracket\n\n        addAlias(getToken(0), 'property-mutation');\n\n        if (inputVariables.length > 0) {\n          var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/);\n\n          if (mutationEnd === -1) {\n            continue;\n          } // give references to input variables a special alias\n\n\n          for (var i = currentIndex; i < mutationEnd; i++) {\n            var varToken = validTokens[i];\n\n            if (varToken.type === 'variable' && inputVariables.indexOf(varToken.content) >= 0) {\n              addAlias(varToken, 'variable-input');\n            }\n          }\n        }\n      }\n    }\n  }\n});\n/* \"prismjs/components/prism-markup-templating\" */\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function value(env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function value(env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n\n                replacement.push(middle);\n\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */\n            ) {\n              walkTokens(token.content);\n            }\n          }\n\n          return tokens;\n        }\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-handlebars\" */\n\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:false|true)\\b/,\n    'block': {\n      pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n  Prism.languages.hbs = Prism.languages.handlebars;\n})(prism);\n/* \"prismjs/components/prism-json\" */\n// https://www.json.org/json-en.html\n\n\nprism.languages.json = {\n  'property': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'comment': {\n    pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\nprism.languages.webmanifest = prism.languages.json;\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nprism.languages.less = prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n  'operator': /[+\\-*\\/]/\n});\nprism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      'punctuation': /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nprism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'builtin-target': {\n    pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n    alias: 'builtin'\n  },\n  'target': {\n    pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n    alias: 'symbol',\n    inside: {\n      'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  // Directives\n  'keyword': /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n  'function': {\n    pattern: /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n    lookbehind: true\n  },\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-markdown\" */\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern) {\n    pattern = pattern.replace(/<inner>/g, function () {\n      return inner;\n    });\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n\n  var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () {\n    return tableCell;\n  });\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'front-matter-block': {\n      pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^---|---$/,\n        'front-matter': {\n          pattern: /\\S+(?:\\s+\\S+)*/,\n          alias: ['yaml', 'language-yaml'],\n          inside: Prism.languages.yaml\n        }\n      }\n    },\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      // eslint-disable-next-line regexp/strict\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'code-snippet': {\n      // `code`\n      // ``code``\n      pattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['code', 'keyword']\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'operator': /^!/,\n        'content': {\n          pattern: /(^\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'variable': {\n          pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'url': {\n          pattern: /(^\\]\\()[^\\s)]+/,\n          lookbehind: true\n        },\n        'string': {\n          pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n          lookbehind: true\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          // do some replacements to support C++, C#, and F#\n          var lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp'); // only use the first word\n\n          lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n          var alias = 'language-' + lang; // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n\n    var codeLang = '';\n\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n\n    var grammar = Prism.languages[codeLang];\n\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      env.content = Prism.highlight(textContent(env.content), grammar, codeLang);\n    }\n  });\n  var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi');\n  /**\n   * A list of known entity names.\n   *\n   * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n   *\n   * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n   */\n\n  var KNOWN_ENTITY_NAMES = {\n    'amp': '&',\n    'lt': '<',\n    'gt': '>',\n    'quot': '\"'\n  }; // IE 11 doesn't support `String.fromCodePoint`\n\n  var fromCodePoint = String.fromCodePoint || String.fromCharCode;\n  /**\n   * Returns the text content of a given HTML source code string.\n   *\n   * @param {string} html\n   * @returns {string}\n   */\n\n  function textContent(html) {\n    // remove all tags\n    var text = html.replace(tagPattern, ''); // decode known entities\n\n    text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n      code = code.toLowerCase();\n\n      if (code[0] === '#') {\n        var value;\n\n        if (code[1] === 'x') {\n          value = parseInt(code.slice(2), 16);\n        } else {\n          value = Number(code.slice(1));\n        }\n\n        return fromCodePoint(value);\n      } else {\n        var known = KNOWN_ENTITY_NAMES[code];\n\n        if (known) {\n          return known;\n        } // unable to decode\n\n\n        return m;\n      }\n    });\n    return text;\n  }\n\n  Prism.languages.md = Prism.languages.markdown;\n})(prism);\n/* \"prismjs/components/prism-objectivec\" */\n\n\nprism.languages.objectivec = prism.languages.extend('c', {\n  'string': {\n    pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'keyword': /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete prism.languages.objectivec['class-name'];\nprism.languages.objc = prism.languages.objectivec;\n/* \"prismjs/components/prism-ocaml\" */\n// https://ocaml.org/manual/lex.html\n\nprism.languages.ocaml = {\n  'comment': {\n    pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\n    greedy: true\n  },\n  'char': {\n    pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\n    greedy: true\n  },\n  'string': [{\n    pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\n    greedy: true\n  }],\n  'number': [// binary and octal\n  /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i, // hexadecimal\n  /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i, // decimal\n  /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i],\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'property'\n  },\n  'label': {\n    pattern: /\\B~\\w+/,\n    alias: 'property'\n  },\n  'type-variable': {\n    pattern: /\\B'\\w+/,\n    alias: 'function'\n  },\n  'variant': {\n    pattern: /`\\w+/,\n    alias: 'symbol'\n  },\n  // For the list of keywords and operators,\n  // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'operator-like-punctuation': {\n    pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\n    alias: 'punctuation'\n  },\n  // Custom operators are allowed\n  'operator': /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n  'punctuation': /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\n};\n/* \"prismjs/components/prism-python\" */\n\nprism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=\\}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:False|None|True)\\b/,\n  'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n  'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nprism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = prism.languages.python;\nprism.languages.py = prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nprism.languages.reason = prism.languages.extend('clike', {\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n});\nprism.languages.insertBefore('reason', 'class-name', {\n  'char': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    greedy: true\n  },\n  // Negative look-ahead prevents from matching things like String.capitalize\n  'constructor': /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete prism.languages.reason.function;\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      greedy: true,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/, {\n    pattern: /(\\s)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      greedy: true,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n      greedy: true,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nprism.languages.scss = prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nprism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i, {\n    pattern: /( )(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nprism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nprism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|hide|show|with)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n    lookbehind: true\n  }\n});\nprism.languages.scss['atrule'].inside.rest = prism.languages.scss;\n/* \"prismjs/components/prism-sql\" */\n\nprism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'identifier': {\n    pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n    greedy: true,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^`|`$/\n    }\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:FALSE|NULL|TRUE)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  var inside = {\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n      greedy: true\n    },\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'boolean': /\\b(?:false|true)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'number': number,\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^\\{|\\}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'atrule-declaration': {\n      pattern: /(^[ \\t]*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'comment': inside.comment,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(prism);\n/* \"prismjs/components/prism-typescript\" */\n\n\n(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n\n    },\n    'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n  }); // The keywords TypeScript adds to JavaScript\n\n  Prism.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, // keywords that have to be followed by an identifier\n  /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, // This is for `import type *, {}`\n  /\\btype\\b(?=\\s*(?:[\\{*]|$))/); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.typescript['parameter'];\n  delete Prism.languages.typescript['literal-property']; // a version of typescript specifically for highlighting types\n\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'decorator': {\n      pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n      inside: {\n        'at': {\n          pattern: /^@/,\n          alias: 'operator'\n        },\n        'function': /^[\\s\\S]+/\n      }\n    },\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(prism);\n/* \"prismjs/components/prism-tsx\" */\n\n\n(function (Prism) {\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.tsx['parameter'];\n  delete Prism.languages.tsx['literal-property']; // This will prevent collisions between TSX tags and TS generic types.\n  // Idea by https://github.com/karlhorky\n  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\n  var tag = Prism.languages.tsx.tag;\n  tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n  tag.lookbehind = true;\n})(prism);\n/* \"prismjs/components/prism-wasm\" */\n\n\nprism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\n/* \"prismjs/components/prism-yaml\" */\n\n(function (Prism) {\n  // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n  // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n  var anchorOrAlias = /[*&][^\\s[\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\n  var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\n  var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n  // This is a simplified version that doesn't support \"#\" and multiline keys\n  // All these long scarry character classes are simplified versions of YAML's characters\n\n  var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n    return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n  });\n  var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n  /**\n   *\n   * @param {string} value\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function createValuePattern(value, flags) {\n    flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\n    var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n      return properties;\n    }).replace(/<<value>>/g, function () {\n      return value;\n    });\n    return RegExp(pattern, flags);\n  }\n\n  Prism.languages.yaml = {\n    'scalar': {\n      pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      })),\n      lookbehind: true,\n      alias: 'string'\n    },\n    'comment': /#.*/,\n    'key': {\n      pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<key>>/g, function () {\n        return '(?:' + plainKey + '|' + string + ')';\n      })),\n      lookbehind: true,\n      greedy: true,\n      alias: 'atrule'\n    },\n    'directive': {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    'datetime': {\n      pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n      lookbehind: true,\n      alias: 'number'\n    },\n    'boolean': {\n      pattern: createValuePattern(/false|true/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'null': {\n      pattern: createValuePattern(/null|~/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'string': {\n      pattern: createValuePattern(string),\n      lookbehind: true,\n      greedy: true\n    },\n    'number': {\n      pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n      lookbehind: true\n    },\n    'tag': tag,\n    'important': anchorOrAlias,\n    'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  };\n  Prism.languages.yml = Prism.languages.yaml;\n})(prism);\n\nexport default prism;","import Prism from \"prism-react-renderer/prism\"\n\n// https://www.deg84.com/enable-ruby-syntax-highlighting-with-prism-react-renderer/\n\ndeclare global {\n    // eslint-disable-next-line @typescript-eslint/no-namespace\n    namespace NodeJS {\n        interface Global {\n            Prism: any\n        }\n    }\n}\n\ndeclare global {\n    interface Window {\n        Prism: any\n    }\n}\n\n;(typeof global !== 'undefined' ? global : window).Prism = Prism\n\nrequire('prismjs/components/prism-ruby')\nrequire('prismjs/components/prism-php')\nrequire('prismjs/components/prism-nginx')\n","// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"at-rule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\nexport default theme;","import prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: prism,\n  theme: theme\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function normalizeEmptyLines(line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\";\n    line[0].empty = true;\n  }\n};\n\nvar appendTypes = function appendTypes(types, add) {\n  var typesSize = types.length;\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function normalizeTokens(tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nvar themeToDict = function themeToDict(theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n  }\n\n  return target;\n}\n\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    Component.apply(this, args);\n\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"tokenize\", function (Prism, code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language,\n        tokens: []\n      };\n      Prism.hooks.run(\"before-tokenize\", env);\n      var tokens = env.tokens = Prism.tokenize(env.code, env.grammar, env.language);\n      Prism.hooks.run(\"after-tokenize\", env);\n      return tokens;\n    });\n  }\n\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? this.tokenize(Prism, code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;\nexport { defaultProps };","// Converted automatically using ./tools/themeFromVsCode\nvar theme = {\n  plain: {\n    color: \"#9CDCFE\",\n    backgroundColor: \"#1E1E1E\"\n  },\n  styles: [{\n    types: [\"prolog\"],\n    style: {\n      color: \"rgb(0, 0, 128)\"\n    }\n  }, {\n    types: [\"comment\"],\n    style: {\n      color: \"rgb(106, 153, 85)\"\n    }\n  }, {\n    types: [\"builtin\", \"changed\", \"keyword\", \"interpolation-punctuation\"],\n    style: {\n      color: \"rgb(86, 156, 214)\"\n    }\n  }, {\n    types: [\"number\", \"inserted\"],\n    style: {\n      color: \"rgb(181, 206, 168)\"\n    }\n  }, {\n    types: [\"constant\"],\n    style: {\n      color: \"rgb(100, 102, 149)\"\n    }\n  }, {\n    types: [\"attr-name\", \"variable\"],\n    style: {\n      color: \"rgb(156, 220, 254)\"\n    }\n  }, {\n    types: [\"deleted\", \"string\", \"attr-value\", \"template-punctuation\"],\n    style: {\n      color: \"rgb(206, 145, 120)\"\n    }\n  }, {\n    types: [\"selector\"],\n    style: {\n      color: \"rgb(215, 186, 125)\"\n    }\n  }, {\n    // Fix tag color\n    types: [\"tag\"],\n    style: {\n      color: \"rgb(78, 201, 176)\"\n    }\n  }, {\n    // Fix tag color for HTML\n    types: [\"tag\"],\n    languages: [\"markup\"],\n    style: {\n      color: \"rgb(86, 156, 214)\"\n    }\n  }, {\n    types: [\"punctuation\", \"operator\"],\n    style: {\n      color: \"rgb(212, 212, 212)\"\n    }\n  }, {\n    // Fix punctuation color for HTML\n    types: [\"punctuation\"],\n    languages: [\"markup\"],\n    style: {\n      color: \"#808080\"\n    }\n  }, {\n    types: [\"function\"],\n    style: {\n      color: \"rgb(220, 220, 170)\"\n    }\n  }, {\n    types: [\"class-name\"],\n    style: {\n      color: \"rgb(78, 201, 176)\"\n    }\n  }, {\n    types: [\"char\"],\n    style: {\n      color: \"rgb(209, 105, 105)\"\n    }\n  }]\n};\nexport default theme;","import dayjs from \"dayjs\"\nimport utc from \"dayjs/plugin/utc\"\nimport timezone from \"dayjs/plugin/timezone\"\ndayjs.extend(utc)\ndayjs.extend(timezone)\ndayjs.tz.setDefault('Asia/Tokyo')\n\nimport React from \"react\"\nimport { Helmet } from \"react-helmet\"\n\nexport interface Frontmatter {\n    title: string\n    description?: string\n    date?: string\n    updated?: string\n    category?: string\n    tags?: string[]\n}\n\nexport interface Post {\n  id: string\n  slug?: string\n  excerpt?: string\n  frontmatter?: Frontmatter\n}\n\nexport interface OgpProps {\n  post: Post\n}\n\nconst Ogp: React.FC<OgpProps> = ({\n    post\n}) => {\n    let description = post.frontmatter?.description\n    if (description == null) description = post.excerpt\n\n    let keywords: string[] = []\n    if (post.frontmatter.category != null) keywords.push(post.frontmatter.category)\n    post.frontmatter.tags?.forEach((tag) => keywords.push(tag))\n\n    // unique\n    keywords = keywords.filter((value, index, self) => self.indexOf(value) === index)\n  \n    const ogpPublishedTime = post.frontmatter?.date != null ? dayjs(post.frontmatter?.date).format('YYYY-MM-DDTHH:mm:ss.SSSZ') : null\n    const ogpModifiedTime = post.frontmatter?.updated != null ? dayjs(post.frontmatter?.updated).format('YYYY-MM-DDTHH:mm:ss.SSSZ') : null\n  \n    return (\n        <Helmet>\n            <meta property=\"og:url\" content={`https://blog.aoirint.com/entry/${post.slug}`} />\n            <meta property=\"og:locale\" content=\"ja-JP\" />\n            <meta property=\"og:type\" content=\"article\" />\n            <meta property=\"og:title\" content={`${post.frontmatter?.title} · えやみぐさ`} />\n\n            {description != null ? (\n                <meta name=\"description\" content={description} />\n            ) : ''}\n            {description != null ? (\n                <meta property=\"og:description\" content={description} />\n            ) : ''}\n\n            <meta property=\"og:image\" content=\"https://blog.aoirint.com/ogp.png\" />\n            {ogpPublishedTime != null ? (\n                <meta property=\"article:published_time\" content={ogpPublishedTime} />\n            ) : ''}\n            {ogpModifiedTime != null ? (\n                <meta property=\"article:modified_time\" content={ogpModifiedTime} />\n            ) : ''}\n\n            <meta name=\"keywords\" content={keywords.join(',')} />\n\n            <meta name=\"twitter:card\" content=\"summary\" />\n            <meta name=\"twitter:site\" content=\"@aoirint\" />\n            <meta name=\"twitter:creator\" content=\"@aoirint\" />\n        </Helmet>\n    )\n}\n\nexport default Ogp\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport '../styles/main.scss'\n\n// import Prism from 'prismjs'\n// import 'prismjs/plugins/custom-class/prism-custom-class'\n// Prism.plugins.customClass.prefix('prism--')\n// Prism.plugins.customClass.map({\n//   number: 'prism--number',\n// })\n\nimport '../components/PrismCustom'\nimport Highlight, { defaultProps } from \"prism-react-renderer\"\n\n\nimport vsDark from 'prism-react-renderer/themes/vsDark'\nimport {\n  MDXProvider,\n} from '@mdx-js/react'\nimport {\n  MDXRenderer,\n  MDXRendererProps,\n} from 'gatsby-plugin-mdx'\nimport {\n  graphql,\n  Link,\n  PageProps,\n} from 'gatsby'\nimport dayjs from 'dayjs'\n\nimport {\n  GetMdxQuery,\n} from '../../generated/graphql-types'\n\nimport {\n  Navbar,\n} from '../components'\n\nimport icon from '../images/icon.png'\nimport Ogp from '../components/Ogp'\n\nconst CodeBlock: React.FC<MDXRendererProps> = (props) => {\n  const codeProps = props.children.props\n  const codeString = codeProps.children.trim()\n  const language = /language-(\\w+)/.exec(codeProps.className)?.[1]\n  return (\n    <Highlight {...defaultProps} code={codeString} language={language} theme={vsDark}>\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <pre className={className} style={style}>\n          {tokens.map((line, i) => (\n            <div {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n        </pre>\n      )}\n    </Highlight>\n  )\n}\n\ninterface TableOfContentsItem {\n  url: string\n  title: string\n  items?: TableOfContentsItem[]\n}\ninterface TableOfContentsProps {\n  items: TableOfContentsItem[]\n}\n\nconst TableOfContents: React.FC<TableOfContentsProps> = ({\n  items\n}) => {\n  return (\n    <ul className='menu-list' data-label='tableOfContents'>\n      {items?.map((item, index) => (\n        <li key={index} data-label='tableOfContentsItem'>\n          <Link to={item.url}>\n            {item.title}\n          </Link>\n          {item.items != null ? (\n            <TableOfContents\n              items={item.items}\n            />\n          ) : ''}\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nconst EntryPageLayout: React.FC<PageProps<GetMdxQuery>> = ({\n  data,\n  ...props\n}) => {\n  const mdx = data.mdx\n  const frontmatter = mdx.frontmatter\n  const rawBody = mdx.body\n  const tableOfContents = mdx.tableOfContents\n\n  const date = frontmatter?.date != null ? dayjs(frontmatter?.date).format('YYYY-MM-DD') : ''\n  const updated = frontmatter?.updated != null ? dayjs(frontmatter?.updated).format('YYYY-MM-DD') : ''\n\n  return (\n    <>\n      <Helmet>\n        <title>{frontmatter.title} · えやみぐさ</title>\n        {frontmatter?.noindex ? (\n          <meta name=\"robots\" content=\"noindex\" />\n        ) : ''}\n      </Helmet>\n      <Ogp post={mdx} />\n      <Navbar />\n      <div className='section'>\n        <main className='container'>\n          <aside data-label='meta'>\n            <div className='columns m-0'>\n              <div className='column m-0 p-0 is-size-7' data-label='dateString'>\n                {date || updated ? (\n                    <>\n                      [\n                      <span data-label='dateCreated'>{date}</span>\n                      {date && updated ? ' / ' : ''}\n                      <span data-label='dateUpdated'>{updated}</span>\n                      ]\n                    </>\n                ) : ''}\n              </div>\n              <div className='column m-0 p-0 is-size-7 has-text-right'>\n                <a href={`https://github.com/aoirint/blog.aoirint.com-contents/edit/main/${mdx.slug}index.md`} className='mx-1'>編集</a>\n                <a href={`https://github.com/aoirint/blog.aoirint.com-contents/tree/main/${mdx.slug}index.md`} className='mx-1'>ソース</a>\n                <a href={`https://github.com/aoirint/blog.aoirint.com-contents/commits/main/${mdx.slug}index.md`} className='mx-1'>履歴</a>\n              </div>\n            </div>\n            <div className='is-size-7' data-label='tags'>\n              {frontmatter?.channel != null ? (\n                <>\n                  <Link to={`/channel/${frontmatter?.channel}/`} className='mr-2' data-label='channel'>\n                    {frontmatter?.channel}\n                  </Link>\n                  <span className='mr-2'>\n                    |\n                  </span>\n                </>\n              ) : ''}\n              {frontmatter?.category != null ? (\n                <>\n                  <Link to={`/channel/${frontmatter?.channel}/category/${frontmatter?.category}/`} className='mr-2' data-label='category'>\n                    {frontmatter?.category}\n                  </Link>\n                  <span className='mr-2'>\n                    |\n                  </span>\n                </>\n              ) : ''}\n              {frontmatter?.tags?.map((tag) => (\n                <Link key={tag} to={`/channel/${frontmatter?.channel}/tags/${tag}/`} className='mr-2' data-label='tag'>\n                  {tag}\n                </Link>\n              ))}\n            </div>\n          </aside>\n          <hr className='my-2' />\n          <div className='mt-2'>\n            <nav className='is-hidden-desktop menu'>\n              <TableOfContents\n                items={tableOfContents.items}\n              />\n            </nav>\n            <div className='is-flex-desktop mt-4'>\n              <article className='content is-rest-w300-desktop' data-label='article'>\n                <MDXProvider\n                  components={{\n                    pre: CodeBlock,\n                  }}\n                >\n                  <MDXRenderer\n                    frontmatter={frontmatter}\n                  >\n                    {rawBody}\n                  </MDXRenderer>\n                </MDXProvider>\n              </article>\n              <nav className='is-hidden-touch is-w300-desktop menu' style={{\n                position: 'sticky',\n                top: '64px',\n                maxHeight: 'calc(100vh - 64px)',\n                overflowY: 'auto',\n              }}>\n                <TableOfContents\n                  items={tableOfContents.items}\n                />\n              </nav>\n            </div>\n          </div>\n        </main>\n      </div>\n    </>\n  )\n}\n\nexport const pageQuery = graphql`\n  query GetMdx(\n    $id: String\n  ) {\n    mdx(\n      id: {\n        eq: $id\n      }\n    ) {\n      id\n      slug\n      body\n      excerpt\n      tableOfContents\n      frontmatter {\n        title\n        date\n        updated\n        noindex\n        channel\n        category\n        tags\n      }\n    }\n  }\n`\n\nexport default EntryPageLayout\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","arrayLikeToArray","isArray","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","Reflect","construct","a","push","apply","instance","Function","bind","prototype","arguments","obj","key","value","Object","defineProperty","enumerable","configurable","writable","sham","Proxy","Boolean","valueOf","call","e","iter","Symbol","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","o","minLen","n","toString","slice","constructor","name","test","t","year","month","day","hour","minute","second","r","Date","timeZoneName","Intl","DateTimeFormat","hour12","timeZone","formatToParts","u","f","s","type","m","c","parseInt","d","l","v","h","utc","tz","this","utcOffset","toDate","toLocaleString","Math","round","$set","$ms","getTimezoneOffset","add","$x","$timezone","offsetName","guess","find","toLowerCase","startOf","format","min","max","resolvedOptions","setDefault","date","locale","$L","local","parse","$u","$utils","$offset","init","$d","$y","getUTCFullYear","$M","getUTCMonth","$D","getUTCDate","$W","getUTCDay","$H","getUTCHours","$m","getUTCMinutes","$s","getUTCSeconds","getUTCMilliseconds","match","abs","$localOffset","isUTC","toISOString","toUTCString","diff","Prism","variable","languages","nginx","pattern","lookbehind","greedy","inside","alias","comment","constant","number","operator","punctuation","php","string_interpolation","string","insertBefore","hooks","env","code","buildPlaceholders","tokenizePlaceholders","ruby","extend","interpolation","function","percentExpression","source","join","symbolName","RegExp","rb","MDXRenderer","require","React","mdx","useMDXScope","scope","children","props","mdxScope","End","useMemo","fullScope","keys","values","map","fn","createElement","lang","uniqueId","plainTextGrammar","_","util","encode","tokens","Token","content","replace","objId","clone","deepClone","visited","id","hasOwnProperty","forEach","getLanguage","element","exec","className","parentElement","setLanguage","language","classList","isActive","defaultActivation","no","contains","plain","plaintext","text","txt","redef","before","insert","root","grammar","ret","token","newToken","old","DFS","callback","property","propertyType","plugins","highlight","run","tokenize","stringify","rest","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","node","next","tail","toArray","all","callbacks","matchedStr","matchPattern","pos","lastIndex","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","global","flags","currentNode","reach","str","removeCount","to","p","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","tag","classes","attributes","aliases","prism","default","markup","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","envVars","commandAfterHeredoc","insideString","bash","entity","toBeCopied","shell","clike","keyword","modName","cpp","css","addInlined","addAttribute","selectorInside","selector","unit","javascript","regex","js","space","braces","spread","re","jsx","stringifyToken","walkTokens","openedTags","notTagNorBrace","pop","openedBraces","plainText","splice","withId","unshift","maybeClassNameTokens","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","getPlaceholder","counter","toUpperCase","tokenizeWithHooks","tokenizeInterpolationExpression","expression","tempGrammar","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","placeholder","interpolationExpression","indexOf","placeholders","substring","middle","replacement","afterTokens","concat","filter","supportedLanguages","stringContent","findTemplateStrings","embedded","coffeescript","coffee","PREFIXES","prefix","git","go","graphql","markdown","validTokens","currentIndex","startToken","inputVariables","isTokenType","getToken","definitionEnd","findClosingBracket","addAlias","mutationEnd","varToken","offset","types","open","close","stackHeight","defineProperties","placeholderPattern","replaceFilter","tokenStack","handlebars","hbs","json","webmanifest","less","makefile","inner","createInline","tableCell","tableRow","tableLine","yaml","codeLang","codeBlock","cls","tagPattern","Number","fromCodePoint","known","KNOWN_ENTITY_NAMES","autoloader","floor","random","loadLanguages","ele","document","getElementById","innerHTML","textContent","String","fromCharCode","md","objectivec","objc","ocaml","python","py","reason","sass","atrule","important","scss","sql","stylus","func","typescript","typeInside","ts","tsx","wasm","anchorOrAlias","properties","plainKey","createValuePattern","yml","window","defaultProps","theme","backgroundColor","color","styles","style","opacity","textDecorationLine","fontStyle","fontWeight","_defineProperty","_extends","assign","target","newlineRe","normalizeEmptyLines","line","empty","appendTypes","typesSize","themeToDict","base","create","themeDict","reduce","acc","themeEntry","includes","accStyle","objectWithoutProperties","exclude","Highlight","Component","this$1","undefined","prevTheme","prevLanguage","ref","output","getThemeDict","display","baseStyle","typeStyles","getStyleForToken","__proto__","render","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","splitByNewlines","split","newlineCount","i$1","normalizeTokens","getLineProps","getTokenProps","dayjs","timezone","post","description","frontmatter","excerpt","keywords","category","tags","self","ogpPublishedTime","ogpModifiedTime","updated","Helmet","slug","title","CodeBlock","codeProps","codeString","trim","vsDark","TableOfContents","items","item","Link","url","data","rawBody","body","tableOfContents","noindex","href","channel","MDXProvider","components","pre","position","top","maxHeight","overflowY","_objectWithoutPropertiesLoose","excluded","sourceKeys"],"sourceRoot":""}