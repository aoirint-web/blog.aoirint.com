{"version":3,"file":"component---src-pages-index-tsx-4af0479eac83e9528f4b.js","mappings":"yJAAO,IA+BP,EA/B4B,CAC1B,CACE,IAAO,QACP,YAAe,aACf,cAAgB,EAChB,oBAAsB,EACtB,cAAgB,GAElB,CACE,IAAO,OACP,YAAe,YACf,cAAgB,EAChB,oBAAsB,EACtB,cAAgB,GAElB,CACE,IAAO,OACP,YAAe,wBACf,cAAgB,EAChB,oBAAsB,EACtB,cAAgB,GAElB,CACE,IAAO,KACP,YAAe,YACf,cAAgB,EAChB,oBAAsB,EACtB,cAAgB,K,iFC8FpB,UArGsD,SAACA,GACrD,IAAMC,EAAOD,EAAMC,KACnB,OACE,gCACE,gBAAC,IAAD,KACE,sCACA,0BAAQC,OAAK,EAACC,IAAI,wDAEpB,gBAAC,IAAD,MACA,2BAASC,UAAU,WACjB,uBAAKA,UAAU,aACb,uBAAKA,UAAU,wBACb,uBAAKA,UAAU,oBACb,uBAAKD,IAAKE,EAAAA,EAAMC,IAAI,aAAaF,UAAU,yBAE7C,uBAAKA,UAAU,UACb,sBAAIA,UAAU,cAAd,SAGA,qBAAGA,UAAU,iBAAb,aAKJ,sBAAIA,UAAU,mBAAd,UAGA,uBAAKA,UAAU,gBACf,sBAAIA,UAAU,mBAAd,SAGA,uBAAKA,UAAU,WACb,0BACGG,EAAAA,EAAAA,KAAiB,SAACC,EAAaC,GAC9B,IAAMC,EAAcT,EAAKU,MAAMC,SAASC,MAAK,SAACH,GAAD,OAAiBA,EAAYI,aAAeN,EAAYO,OACrG,OACE,gCACE,sBAAIX,UAAWK,EAAQ,EAAI,OAAS,KACjCC,MAAAA,OAAA,EAAAA,EAAaM,YAAa,EACzB,qBAAGC,KAAI,YAAcT,EAAYO,IAA1B,KACJP,EAAYO,IADf,IACqBP,EAAYU,aAAZ,KAA+BR,MAAAA,OAA/B,EAA+BA,EAAaM,YAA5C,IAA4D,IAGjF,gCACGR,EAAYO,IADf,IACqBP,EAAYU,aAAe,MAAQ,KAI5D,0BACGV,EAAYW","sources":["webpack://blog-aoirint-com/./src/data/ChannelInfos.ts","webpack://blog-aoirint-com/./src/pages/index.tsx"],"sourcesContent":["export const ChannelInfos = [\n  {\n    'key': '技術ノート',\n    'description': '技術に関するメモ書き',\n    'indexNoIndex': false,\n    'indexCategoryIndex': true,\n    'topPostCount': true,\n  },\n  {\n    'key': '作業ログ',\n    'description': 'スクラップ、下書き',\n    'indexNoIndex': false,\n    'indexCategoryIndex': false,\n    'topPostCount': true,\n  },\n  {\n    'key': 'レポート',\n    'description': '報告、アナウンス、近況、管理情報、リリース',\n    'indexNoIndex': false,\n    'indexCategoryIndex': false,\n    'topPostCount': true,\n  },\n  {\n    'key': '雑記',\n    'description': '個人的な記事、趣味',\n    'indexNoIndex': true,\n    'indexCategoryIndex': false,\n    'topPostCount': false,\n  }\n]\n\nexport default ChannelInfos\n","import * as React from \"react\"\nimport Helmet from 'react-helmet'\nimport '../styles/main.scss'\n\nimport dayjs from 'dayjs'\n\nimport {\n  graphql,\n  PageProps,\n} from 'gatsby'\n\nimport icon from '../images/icon.png'\n\nimport { Navbar } from '../components'\nimport { ChannelInfos } from '../data'\n\nimport { GetPostsQuery } from '../../generated/graphql-types'\nimport PostListItem from \"../components/PostListItem\"\n\n// markup\nconst IndexPage: React.FC<PageProps<GetPostsQuery>> = (props) => {\n  const data = props.data\n  return (\n    <>\n      <Helmet>\n        <title>えやみぐさ</title>\n        <script async src=\"https://cse.google.com/cse.js?cx=4b57e8a4ef2a8c489\"></script>\n      </Helmet>\n      <Navbar />\n      <section className='section'>\n        <div className='container'>\n          <div className='columns is-vcentered'>\n            <div className='column is-narrow'>\n              <img src={icon} alt=\"Logo image\" className='image is-64x64 mr-4' />\n            </div>\n            <div className='column'>\n              <h1 className='title is-2'>\n                えやみぐさ\n              </h1>\n              <p className='subtitle is-5'>\n                技術ノートとか\n              </p>\n            </div>\n          </div>\n          <h2 className='title is-5 mb-3'>\n            Search\n          </h2>\n          <div className=\"gcse-search\"></div>\n          <h2 className='title is-5 mb-3'>\n            チャンネル\n          </h2>\n          <div className=\"content\">\n            <dl>\n              {ChannelInfos.map((channelInfo, index) => {\n                const channelData = data.posts.channels.find((channelData) => channelData.fieldValue === channelInfo.key)\n                return (\n                  <>\n                    <dt className={index > 0 ? 'mt-4' : ''}>\n                      {channelData?.totalCount > 0 ? (\n                        <a href={`/channel/${channelInfo.key}/`}>\n                          {channelInfo.key} {channelInfo.topPostCount ? `(${channelData?.totalCount})` : ''}\n                        </a>\n                      ) : (\n                        <>\n                          {channelInfo.key} {channelInfo.topPostCount ? '(0)' : ''}\n                        </>\n                      )}\n                    </dt>\n                    <dd>\n                      {channelInfo.description}\n                    </dd>\n                  </>\n                )\n              })}\n            </dl>\n          </div>\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport const pageQuery = graphql`\n  query GetPosts {\n    posts: allMdx(\n      filter: {\n        fields: {draft: {eq: false}}\n      }\n      sort: {\n        fields: [frontmatter___lastModified]\n        order: DESC\n      }\n    ) {\n      edges {\n        node {\n          id\n          slug\n          parent {\n            ... on File {\n              sourceInstanceName\n            }\n          }\n          frontmatter {\n            title\n            date\n            updated\n            channel\n            category\n            tags\n          }\n        }\n      }\n\n      channels: group(field: frontmatter___channel) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n\nexport default IndexPage\n"],"names":["props","data","async","src","className","icon","alt","ChannelInfos","channelInfo","index","channelData","posts","channels","find","fieldValue","key","totalCount","href","topPostCount","description"],"sourceRoot":""}