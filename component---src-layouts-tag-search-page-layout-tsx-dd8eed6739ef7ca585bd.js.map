{"version":3,"file":"component---src-layouts-tag-search-page-layout-tsx-dd8eed6739ef7ca585bd.js","mappings":"oKAwFA,IA5DkD,SAAC,GAM7C,UALJA,KACEC,EAIE,EAJFA,KACAC,EAGE,EAHFA,OACAC,EAEE,EAFFA,YAGIC,EAAqB,uBAAwBF,EAASA,EAAOE,mBAAqB,QAClFC,EAAoC,UAAvBD,EAAA,IAAqCA,EAArC,IAA6D,IAE1EE,EAA4B,OAArBH,MAAAA,OAAA,EAAAA,EAAaG,MAAeC,GAAAA,CAAMJ,MAAAA,OAAD,EAACA,EAAaG,MAAME,OAAO,cAAgB,GACnFC,EAAkC,OAAxBN,MAAAA,OAAA,EAAAA,EAAaM,SAAkBF,GAAAA,CAAMJ,MAAAA,OAAD,EAACA,EAAaM,SAASD,OAAO,cAAgB,GAElG,OACE,uBAAKE,UAAU,QACb,uBAAKA,UAAU,IACb,gBAAC,EAAAC,KAAD,CAAMC,GAAE,GAAKP,EAAaJ,EAAQ,aAAW,SAC1CE,MAAAA,GAAAA,EAAaU,MAAQV,EAAYU,MAAQ,YAE3CP,GAAQG,EACP,uBAAKC,UAAU,YAAY,aAAW,cAAtC,IAEE,wBAAM,aAAW,eAAeJ,GAC/BA,GAAQG,EAAU,MAAQ,GAC3B,wBAAM,aAAW,eAAeA,GAJlC,KAOE,GACJ,uBAAKC,UAAU,YAAY,aAAW,QACX,OAAxBP,MAAAA,OAAA,EAAAA,EAAaW,SACZ,gCACE,gBAAC,EAAAH,KAAD,CAAMC,GAAE,aAAcT,MAAAA,OAAd,EAAcA,EAAaW,SAA3B,IAAuCJ,UAAU,OAAO,aAAW,WACxEP,MAAAA,OADH,EACGA,EAAaW,SAEhB,wBAAMJ,UAAU,QAAhB,MAIA,GACsB,OAAzBP,MAAAA,OAAA,EAAAA,EAAaY,UACZ,gCACE,gBAAC,EAAAJ,KAAD,CAAMC,GAAE,aAAcT,MAAAA,OAAd,EAAcA,EAAaW,SAA3B,cAA+CX,MAAAA,OAA/C,EAA+CA,EAAaY,UAA5D,IAAyEL,UAAU,OAAO,aAAW,YAC1GP,MAAAA,OADH,EACGA,EAAaY,UAEhB,wBAAML,UAAU,QAAhB,MAIA,GACHP,MAAAA,GArBH,UAqBGA,EAAaa,YArBhB,aAqBG,EAAmBC,KAAI,SAACC,GAAD,OACtB,gBAAC,EAAAP,KAAD,CAAMQ,IAAKD,EAAKN,GAAE,aAAcT,MAAAA,OAAd,EAAcA,EAAaW,SAA3B,SAA2CI,EAA3C,IAAmDR,UAAU,OAAO,aAAW,OAC9FQ,W,wECAf,UArEoE,SAAC,GAG/D,IAFFE,EAEE,EAFFA,YACAC,EACE,EADFA,KAEMH,EAAM,QAASE,EAAcE,OAAOF,EAAW,KAAW,GAEhE,OACI,gCACI,gBAAC,IAAD,KACI,qCAAaF,EAAb,YACA,wBAAMK,KAAK,SAASC,QAAQ,aAEhC,gBAAC,IAAD,MACA,2BAASd,UAAU,WACf,uBAAKA,UAAU,aACX,sBAAIA,UAAU,mBAAd,QACUQ,GAEV,2BACKG,EAAKI,MAAMC,MAAMT,KAAI,gBAAGU,EAAH,EAAGA,KAAH,OAClB,uBAAKR,IAAKQ,EAAKC,IACX,gBAAC,IAAD,CAAc5B,KAAM2B,IACpB,sBAAIjB,UAAU","sources":["webpack://blog-aoirint-com/./src/components/PostListItem.tsx","webpack://blog-aoirint-com/./src/layouts/TagSearchPageLayout.tsx"],"sourcesContent":["import React from 'react'\nimport dayjs from 'dayjs'\nimport { Link } from 'gatsby'\n\nexport interface Parent {\n  sourceInstanceName: string\n}\n\nexport interface Frontmatter {\n  title: string\n  date?: string\n  updated?: string\n  channel?: string\n  category?: string\n  tags?: string[]\n}\n\nexport interface Post {\n  id: string\n  slug?: string\n  parent?: {} | Parent\n  frontmatter?: Frontmatter\n}\n\nexport interface PostListItemProps {\n  post: Post\n}\n\nconst PostListItem: React.FC<PostListItemProps> = ({\n  post: {\n    slug,\n    parent,\n    frontmatter,\n  },\n}) => {\n  const sourceInstanceName = 'sourceInstanceName' in parent ? parent.sourceInstanceName : 'pages'\n  const pathPrefix = sourceInstanceName !== 'pages' ? `/${sourceInstanceName}/` : '/'\n\n  const date = frontmatter?.date != null ? dayjs(frontmatter?.date).format('YYYY-MM-DD') : ''\n  const updated = frontmatter?.updated != null ? dayjs(frontmatter?.updated).format('YYYY-MM-DD') : ''\n\n  return (\n    <div className='mb-2'>\n      <div className=''>\n        <Link to={`${pathPrefix}${slug}`} data-label='title'>\n          {frontmatter?.title ? frontmatter.title : 'No title'}\n        </Link>\n        {date || updated ? (\n          <div className='is-size-7' data-label='dateString'>\n            [\n            <span data-label='dateCreated'>{date}</span>\n            {date && updated ? ' / ' : ''}\n            <span data-label='dateUpdated'>{updated}</span>\n            ]\n          </div>\n        ) : ''}\n        <div className='is-size-7' data-label='tags'>\n          {frontmatter?.channel != null ? (\n            <>\n              <Link to={`/channel/${frontmatter?.channel}/`} className='mr-2' data-label='channel'>\n                {frontmatter?.channel}\n              </Link>\n              <span className='mr-2'>\n                |\n              </span>\n            </>\n          ) : ''}\n          {frontmatter?.category != null ? (\n            <>\n              <Link to={`/channel/${frontmatter?.channel}/category/${frontmatter?.category}/`} className='mr-2' data-label='category'>\n                {frontmatter?.category}\n              </Link>\n              <span className='mr-2'>\n                |\n              </span>\n            </>\n          ) : ''}\n          {frontmatter?.tags?.map((tag) => (\n            <Link key={tag} to={`/channel/${frontmatter?.channel}/tags/${tag}/`} className='mr-2' data-label='tag'>\n              {tag}\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PostListItem\n","import React from 'react'\nimport { graphql, PageProps } from \"gatsby\"\n\nimport {\n    GetTagSearchQuery\n} from '../../generated/graphql-types'\nimport { Helmet } from 'react-helmet'\nimport { Navbar } from '../components'\nimport PostListItem from '../components/PostListItem'\n\nconst TagSearchPageLayout: React.FC<PageProps<GetTagSearchQuery>> = ({\n    pageContext,\n    data,\n}) => {\n    const tag = 'tag' in pageContext ? String(pageContext['tag']) : ''\n\n    return (\n        <>\n            <Helmet>\n                <title>Tag: {tag} · えやみぐさ</title>\n                <meta name=\"robots\" content=\"noindex\" />\n            </Helmet>\n            <Navbar />\n            <section className='section'>\n                <div className='container'>\n                    <h2 className='title is-4 mb-4'>\n                        Tag: {tag}\n                    </h2>\n                    <div>\n                        {data.posts.edges.map(({ node }) => (\n                            <div key={node.id}>\n                                <PostListItem post={node} />\n                                <hr className='my-1' />\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport const pageQuery = graphql`\n  query GetTagSearch(\n    $tag: String!\n  ) {\n    posts: allMdx(\n        filter: {\n            frontmatter: {\n                tags: {\n                    in: [$tag]\n                }\n            }\n            fields: {draft: {eq: false}}\n        }\n    ) {\n      edges {\n        node {\n          id\n          slug\n          parent {\n            ... on File {\n              sourceInstanceName\n            }\n          }\n          frontmatter {\n            title\n            date\n            updated\n            channel\n            category\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default TagSearchPageLayout\n"],"names":["post","slug","parent","frontmatter","sourceInstanceName","pathPrefix","date","dayjs","format","updated","className","Link","to","title","channel","category","tags","map","tag","key","pageContext","data","String","name","content","posts","edges","node","id"],"sourceRoot":""}