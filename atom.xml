<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[えやみぐさ's Atom Feed]]></title><description><![CDATA[えやみぐさ's Atom Feed]]></description><link>https://blog.aoirint.com</link><generator>GatsbyJS</generator><lastBuildDate>Mon, 29 Nov 2021 14:27:11 GMT</lastBuildDate><item><title><![CDATA[aaa]]></title><description><![CDATA[aaa aaa]]></description><link>https://blog.aoirint.comtest/hoge</link><guid isPermaLink="false">https://blog.aoirint.comtest/hoge</guid><content:encoded>&lt;h1 id=&quot;aaa&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#aaa&quot; aria-label=&quot;aaa permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;aaa&lt;/h1&gt;&lt;p&gt;aaa&lt;/p&gt;</content:encoded></item><item><title><![CDATA[No title]]></title><description><![CDATA[blog.aoirint.com-contents]]></description><link>https://blog.aoirint.comREADME</link><guid isPermaLink="false">https://blog.aoirint.comREADME</guid><content:encoded>&lt;h1 id=&quot;blogaoirintcom-contents&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#blogaoirintcom-contents&quot; aria-label=&quot;blogaoirintcom contents permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;blog.aoirint.com-contents&lt;/h1&gt;</content:encoded></item><item><title><![CDATA[Ubuntu 20.04, ネットワーク設定変更時の認証を回避する]]></title><description><![CDATA[Ubuntu 20.04, ネットワーク設定変更時の認証を回避する Ubuntu 20.04にアップデートしてから、ネットワーク設定の変更時（接続のON/OFFなど）に System policy prevents control of network connections…]]></description><link>https://blog.aoirint.com2021/ubuntu_disable_network_change_auth/</link><guid isPermaLink="false">https://blog.aoirint.com2021/ubuntu_disable_network_change_auth/</guid><pubDate>Mon, 29 Nov 2021 11:30:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;ubuntu-2004-ネットワーク設定変更時の認証を回避する&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#ubuntu-2004-%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E8%A8%AD%E5%AE%9A%E5%A4%89%E6%9B%B4%E6%99%82%E3%81%AE%E8%AA%8D%E8%A8%BC%E3%82%92%E5%9B%9E%E9%81%BF%E3%81%99%E3%82%8B&quot; aria-label=&quot;ubuntu 2004 ネットワーク設定変更時の認証を回避する permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu 20.04, ネットワーク設定変更時の認証を回避する&lt;/h1&gt;&lt;p&gt;Ubuntu 20.04にアップデートしてから、ネットワーク設定の変更時（接続のON/OFFなど）に&lt;code&gt;System policy prevents control of network connections&lt;/code&gt;と表示され、認証を要求されるようになりました。&lt;/p&gt;&lt;p&gt;ここまではまだいいのですが、認証が表示されるたびに数秒間デスクトップがハングする状態になっていて、ストレスでした。
Keyringのロックを解除するときも数秒間ハングするので、似た原因がありそうです。&lt;/p&gt;&lt;p&gt;ひとまず、設定変更時の認証を要求されないようにして、ハングを防ぐことを試みました。結果として試みは成功し、ハングを回避できるようになりました。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://unix.stackexchange.com/questions/534469/system-policy-prevents-control-of-network-connections&quot;&gt;https://unix.stackexchange.com/questions/534469/system-policy-prevents-control-of-network-connections&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://code.luasoftware.com/tutorials/linux/ubuntu-prompt-system-policy-prevents-modification-of-network-settings-for-all-users/&quot;&gt;https://code.luasoftware.com/tutorials/linux/ubuntu-prompt-system-policy-prevents-modification-of-network-settings-for-all-users/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;etcpolkit-1localauthority50-locald50-allow-network-managerpkla&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#etcpolkit-1localauthority50-locald50-allow-network-managerpkla&quot; aria-label=&quot;etcpolkit 1localauthority50 locald50 allow network managerpkla permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/etc/polkit-1/localauthority/50-local.d/50-allow-network-manager.pkla&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-pkla&quot;&gt;[Allow Network Manager all Users]
Identity=unix-user:*
Action=org.freedesktop.NetworkManager.settings.modify.system;org.freedesktop.NetworkManager.network-control
ResultAny=no
ResultInactive=no
ResultActive=yes
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;systemctl restart network-manager.service
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[Ubuntu, CUDAを入れたあとにSteamが起動しない]]></title><description><![CDATA[Ubuntu, CUDAを入れたあとにSteamが起動しない https://qiita.com/yakitatata/items/b2203f90defcad68bb9f NVIDIAドライバのrunfile…]]></description><link>https://blog.aoirint.com2021/ubuntu_steam_with_cuda/</link><guid isPermaLink="false">https://blog.aoirint.com2021/ubuntu_steam_with_cuda/</guid><pubDate>Thu, 18 Nov 2021 14:50:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;ubuntu-cudaを入れたあとにsteamが起動しない&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#ubuntu-cuda%E3%82%92%E5%85%A5%E3%82%8C%E3%81%9F%E3%81%82%E3%81%A8%E3%81%ABsteam%E3%81%8C%E8%B5%B7%E5%8B%95%E3%81%97%E3%81%AA%E3%81%84&quot; aria-label=&quot;ubuntu cudaを入れたあとにsteamが起動しない permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu, CUDAを入れたあとにSteamが起動しない&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/yakitatata/items/b2203f90defcad68bb9f&quot;&gt;https://qiita.com/yakitatata/items/b2203f90defcad68bb9f&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;NVIDIAドライバのrunfileをダウンロードする（インストール済みのバージョンと合わせる）。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;ドライバ: &lt;a href=&quot;https://www.nvidia.co.jp/Download/Find.aspx?lang=jp&quot;&gt;https://www.nvidia.co.jp/Download/Find.aspx?lang=jp&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;ディレクトリに展開する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;chmod +x NVIDIA-Linux-x86_64-495.29.05.run
./NVIDIA-Linux-x86_64-495.29.05.run -x

sudo chown -R root:root NVIDIA-Linux-x86_64-495.29.05/
sudo mv NVIDIA-Linux-x86_64-495.29.05 /opt/
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;etcldsoconfdnvidia-32bitconf&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#etcldsoconfdnvidia-32bitconf&quot; aria-label=&quot;etcldsoconfdnvidia 32bitconf permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/etc/ld.so.conf.d/nvidia-32bit.conf&lt;/h2&gt;&lt;p&gt;32bitライブラリの入ったディレクトリをldに読み込ませるようにする。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;/opt/NVIDIA-Linux-x86_64-495.29.05/32
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;再起動する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo ldconfig

sudo reboot
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[Hexo]]></title><description><![CDATA[Hexo https://hexo.io/docs/#Installation hexo init <folder> は空のディレクトリに対して実行する必要がある。
いったん仮のディレクトリを作ってからコピーする。 .github 、 .gitignore…]]></description><link>https://blog.aoirint.com2021/hexo/</link><guid isPermaLink="false">https://blog.aoirint.com2021/hexo/</guid><pubDate>Tue, 16 Nov 2021 19:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;hexo&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#hexo&quot; aria-label=&quot;hexo permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hexo&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://hexo.io/docs/#Installation&quot;&gt;https://hexo.io/docs/#Installation&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install -g hexo-cli
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ hexo help
Usage: hexo &amp;lt;command&amp;gt;

Commands:
  help     Get help on a command.
  init     Create a new Hexo folder.
  version  Display version information.

Global Options:
  --config  Specify config file instead of using _config.yml
  --cwd     Specify the CWD
  --debug   Display all verbose messages in the terminal
  --draft   Display draft posts
  --safe    Disable all plugins and scripts
  --silent  Hide output on console

For more help, you can use &amp;#x27;hexo help [command]&amp;#x27; for the detailed information
or you can check the docs: http://hexo.io/docs/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;hexo init &amp;lt;folder&amp;gt;&lt;/code&gt;は空のディレクトリに対して実行する必要がある。
いったん仮のディレクトリを作ってからコピーする。&lt;code&gt;.github&lt;/code&gt;、&lt;code&gt;.gitignore&lt;/code&gt;ファイルがあるのでコピー忘れに注意。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://hexo.io/docs/setup&quot;&gt;https://hexo.io/docs/setup&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ hexo init .
FATAL ~/git/vent.aoirint.com not empty, please run `hexo init` on an empty folder and then copy your files into it
FATAL {
  err: Error: target not empty
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ローカルサーバーを起動する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;hexo server
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;テーマをlightに変更する。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/hexojs/hexo-theme-light&quot;&gt;https://github.com/hexojs/hexo-theme-light&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;git clone --depth 1 https://github.com/hexojs/hexo-theme-light themes/light
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;# _config.yml
theme: light
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;静的ファイルを生成する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;hexo generate
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;GitHub上のgh-pagesブランチにデプロイする設定をする。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://hexo.io/docs/one-command-deployment.html&quot;&gt;https://hexo.io/docs/one-command-deployment.html&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install hexo-deployer-git
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;deploy:
  type: git
  repo: https://github.com/myuser/myrepo
  branch: gh-pages
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;生成した静的ファイルをデプロイする。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;hexo deploy
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;記事を限定公開化するhiddenオプションをfront-matterに追加する。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://prokou.caitsith.info/hexo/setup.html#%E8%A8%98%E4%BA%8B%E3%82%92%E9%9A%A0%E3%81%99&quot;&gt;https://prokou.caitsith.info/hexo/setup.html#%E8%A8%98%E4%BA%8B%E3%82%92%E9%9A%A0%E3%81%99&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/prinsss/hexo-hide-posts&quot;&gt;https://github.com/prinsss/hexo-hide-posts&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm install hexo-hide-posts
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;外部リンクにnoreferrerを追加する。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/hexojs/hexo-filter-nofollow&quot;&gt;https://github.com/hexojs/hexo-filter-nofollow&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code&gt;npm install hexo-filter-nofollow
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[GNOME Shell Extension]]></title><description><![CDATA[GNOME Shell Extension Pixel Saver ウインドウを最大化したとき、macOSのようにタイトルバーをタスクバーに統合。 https://extensions.gnome.org/extension/723/pixel-saver/ https…]]></description><link>https://blog.aoirint.com2021/gnome_shell_extension/</link><guid isPermaLink="false">https://blog.aoirint.com2021/gnome_shell_extension/</guid><pubDate>Sun, 14 Nov 2021 02:30:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;gnome-shell-extension&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#gnome-shell-extension&quot; aria-label=&quot;gnome shell extension permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GNOME Shell Extension&lt;/h1&gt;&lt;h2 id=&quot;pixel-saver&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#pixel-saver&quot; aria-label=&quot;pixel saver permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pixel Saver&lt;/h2&gt;&lt;p&gt;ウインドウを最大化したとき、macOSのようにタイトルバーをタスクバーに統合。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://extensions.gnome.org/extension/723/pixel-saver/&quot;&gt;https://extensions.gnome.org/extension/723/pixel-saver/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/pixel-saver/pixel-saver&quot;&gt;https://github.com/pixel-saver/pixel-saver&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo apt install gnome-shell-extension-pixelsaver
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;gtile&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#gtile&quot; aria-label=&quot;gtile permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;gTile&lt;/h2&gt;&lt;p&gt;画面にウインドウを割り付けるメニュー。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://extensions.gnome.org/extension/28/gtile/&quot;&gt;https://extensions.gnome.org/extension/28/gtile/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/gTile/gTile&quot;&gt;https://github.com/gTile/gTile&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;add-to-desktop&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#add-to-desktop&quot; aria-label=&quot;add to desktop permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add to Desktop&lt;/h2&gt;&lt;p&gt;デスクトップにショートカット（&lt;code&gt;*.desktop&lt;/code&gt;ファイル）を作成するメニュー。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://extensions.gnome.org/extension/3240/add-to-desktop/&quot;&gt;https://extensions.gnome.org/extension/3240/add-to-desktop/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/Tommimon/add-to-desktop&quot;&gt;https://github.com/Tommimon/add-to-desktop&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;screenshot-locations&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#screenshot-locations&quot; aria-label=&quot;screenshot locations permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshot Locations&lt;/h2&gt;&lt;p&gt;スクリーンショットの保存先ディレクトリを変更するメニュー（GNOME Tweaksから設定）。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://extensions.gnome.org/extension/1179/screenshot-locations/&quot;&gt;https://extensions.gnome.org/extension/1179/screenshot-locations/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://codeberg.org/kiyui/gnome-shell-screenshotlocations-extension&quot;&gt;https://codeberg.org/kiyui/gnome-shell-screenshotlocations-extension&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;sound-input--output-device-chooser&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#sound-input--output-device-chooser&quot; aria-label=&quot;sound input  output device chooser permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sound input &amp;amp; output device chooser&lt;/h2&gt;&lt;p&gt;電源メニューに音声デバイス選択を追加。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://extensions.gnome.org/extension/906/sound-output-device-chooser/&quot;&gt;https://extensions.gnome.org/extension/906/sound-output-device-chooser/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/kgshank/gse-sound-output-device-chooser&quot;&gt;https://github.com/kgshank/gse-sound-output-device-chooser&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[editorコマンドで起動するエディタを変更する（Ubuntu）]]></title><description><![CDATA[editorコマンドで起動するエディタを変更する（Ubuntu） https://unix.stackexchange.com/a/204896]]></description><link>https://blog.aoirint.com2021/editor_command_ubuntu/</link><guid isPermaLink="false">https://blog.aoirint.com2021/editor_command_ubuntu/</guid><pubDate>Sat, 13 Nov 2021 10:45:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;editorコマンドで起動するエディタを変更するubuntu&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#editor%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A7%E8%B5%B7%E5%8B%95%E3%81%99%E3%82%8B%E3%82%A8%E3%83%87%E3%82%A3%E3%82%BF%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8Bubuntu&quot; aria-label=&quot;editorコマンドで起動するエディタを変更するubuntu permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;editorコマンドで起動するエディタを変更する（Ubuntu）&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://unix.stackexchange.com/a/204896&quot;&gt;https://unix.stackexchange.com/a/204896&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo update-alternatives --config editor
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[Ubuntu 20.04, 自動ログイン＋Chrome Remote Desktopの起動時に繰り返し認証を求められる]]></title><description><![CDATA[Ubuntu 20.04, 自動ログイン＋Chrome Remote Desktopの起動時に繰り返し認証を求められる Chrome Remote Desktopを導入したUbuntu 20.04に自動ログインを設定すると、
初回の認証はkeyring…]]></description><link>https://blog.aoirint.com2021/ubuntu_autologin_chrome_remote_desktop/</link><guid isPermaLink="false">https://blog.aoirint.com2021/ubuntu_autologin_chrome_remote_desktop/</guid><pubDate>Sat, 13 Nov 2021 08:50:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;ubuntu-2004-自動ログインchrome-remote-desktopの起動時に繰り返し認証を求められる&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#ubuntu-2004-%E8%87%AA%E5%8B%95%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3chrome-remote-desktop%E3%81%AE%E8%B5%B7%E5%8B%95%E6%99%82%E3%81%AB%E7%B9%B0%E3%82%8A%E8%BF%94%E3%81%97%E8%AA%8D%E8%A8%BC%E3%82%92%E6%B1%82%E3%82%81%E3%82%89%E3%82%8C%E3%82%8B&quot; aria-label=&quot;ubuntu 2004 自動ログインchrome remote desktopの起動時に繰り返し認証を求められる permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu 20.04, 自動ログイン＋Chrome Remote Desktopの起動時に繰り返し認証を求められる&lt;/h1&gt;&lt;p&gt;Chrome Remote Desktopを導入したUbuntu 20.04に自動ログインを設定すると、
初回の認証はkeyringのロックを解除する認証だが、ほかにも5回程度繰り返し認証を求められる。&lt;/p&gt;&lt;p&gt;以下のようなメッセージが表示される。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;Authentication is required to create a color managed device
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以下のファイルのうち、いずれかを作成することで、追加の認証をスキップできる。&lt;/p&gt;&lt;h2 id=&quot;etcpolkit-1localauthorityconfd02-allow-colordconf&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#etcpolkit-1localauthorityconfd02-allow-colordconf&quot; aria-label=&quot;etcpolkit 1localauthorityconfd02 allow colordconf permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/etc/polkit-1/localauthority.conf.d/02-allow-colord.conf&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://god-support.blogspot.com/2019/11/ubuntu1804-xrdp-authentication-is.html&quot;&gt;https://god-support.blogspot.com/2019/11/ubuntu1804-xrdp-authentication-is.html&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;polkit.addRule(function(action, subject) {
    if ((
            action.id == &amp;quot;org.freedesktop.color-manager.create-device&amp;quot; ||
            action.id == &amp;quot;org.freedesktop.color-manager.create-profile&amp;quot; ||
            action.id == &amp;quot;org.freedesktop.color-manager.delete-device&amp;quot; ||
            action.id == &amp;quot;org.freedesktop.color-manager.delete-profile&amp;quot; ||
            action.id == &amp;quot;org.freedesktop.color-manager.modify-device&amp;quot; ||
            action.id == &amp;quot;org.freedesktop.color-manager.modify-profile&amp;quot;
        )
        &amp;amp;&amp;amp; subject.isInGroup(&amp;quot;{users}&amp;quot;)
    ) {
        return polkit.Result.YES;
    }
});
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;etcpolkit-1localauthority50-locald45-allow-colordpkla&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#etcpolkit-1localauthority50-locald45-allow-colordpkla&quot; aria-label=&quot;etcpolkit 1localauthority50 locald45 allow colordpkla permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/etc/polkit-1/localauthority/50-local.d/45-allow-colord.pkla&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.cagylogic.com/archives/2021/03/23145121/11743.php&quot;&gt;https://www.cagylogic.com/archives/2021/03/23145121/11743.php&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-conf&quot;&gt;[Allow Colord all Users]
Identity=unix-user:*
Action=org.freedesktop.color-manager.create-device;org.freedesktop.color-manager.create-profile;org.freedesktop.color-manager.delete-device;org.freedesktop.color-manager.delete-profile;org.freedesktop.color-manager.modify-device;org.freedesktop.color-manager.modify-profile
ResultAny=no
ResultInactive=no
ResultActive=yes
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[Chrome Remote Desktop （Ubuntu）]]></title><description><![CDATA[Chrome Remote Desktop （Ubuntu） https://remotedesktop.google.com/access https://qiita.com/ninose14/items/473369d76814174dd58f インストール https…]]></description><link>https://blog.aoirint.com2021/chrome_remote_desktop_ubuntu/</link><guid isPermaLink="false">https://blog.aoirint.com2021/chrome_remote_desktop_ubuntu/</guid><pubDate>Sat, 13 Nov 2021 08:40:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;chrome-remote-desktop-ubuntu&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#chrome-remote-desktop-ubuntu&quot; aria-label=&quot;chrome remote desktop ubuntu permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chrome Remote Desktop （Ubuntu）&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://remotedesktop.google.com/access&quot;&gt;https://remotedesktop.google.com/access&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/ninose14/items/473369d76814174dd58f&quot;&gt;https://qiita.com/ninose14/items/473369d76814174dd58f&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;インストール&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&quot; aria-label=&quot;インストール permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;インストール&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://remotedesktop.google.com/headless&quot;&gt;https://remotedesktop.google.com/headless&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;rm -f ~/.chrome-remote-desktop-session
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;スクリプトの改変&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%81%AE%E6%94%B9%E5%A4%89&quot; aria-label=&quot;スクリプトの改変 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;スクリプトの改変&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cd /opt/google/chrome-remote-desktop

cp chrome-remote-desktop chrome-remote-desktop.bak
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;optgooglechrome-remote-desktopchrome-remote-desktop&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#optgooglechrome-remote-desktopchrome-remote-desktop&quot; aria-label=&quot;optgooglechrome remote desktopchrome remote desktop permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/opt/google/chrome-remote-desktop/chrome-remote-desktop&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;#FIRST_X_DISPLAY_NUMBER = 20
FIRST_X_DISPLAY_NUMBER = 0
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def launch_session(self, x_args):
  self._init_child_env()
  self._setup_pulseaudio()
  self._setup_gnubby()
  #self._launch_x_server(x_args)
  #if not self._launch_pre_session():
  #  # If there was no pre-session script, launch the session immediately.
  #  self.launch_x_session()
  display = self.get_unused_display_number()
  self.child_env[&amp;quot;DISPLAY&amp;quot;] = f&amp;quot;:{display}&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo systemctl restart chrome-remote-desktop@${USER}.service
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[Nextcloud davfs2 マウント設定（Ubuntu）]]></title><description><![CDATA[Nextcloud davfs2 マウント設定（Ubuntu） https://wiki.archlinux.jp/index.php/Davfs2 /etc/fstab /etc/davfs2/secrets]]></description><link>https://blog.aoirint.com2021/nextcloud_davfs2/</link><guid isPermaLink="false">https://blog.aoirint.com2021/nextcloud_davfs2/</guid><pubDate>Sat, 13 Nov 2021 08:20:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;nextcloud-davfs2-マウント設定ubuntu&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#nextcloud-davfs2-%E3%83%9E%E3%82%A6%E3%83%B3%E3%83%88%E8%A8%AD%E5%AE%9Aubuntu&quot; aria-label=&quot;nextcloud davfs2 マウント設定ubuntu permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nextcloud davfs2 マウント設定（Ubuntu）&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://wiki.archlinux.jp/index.php/Davfs2&quot;&gt;https://wiki.archlinux.jp/index.php/Davfs2&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;etcfstab&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#etcfstab&quot; aria-label=&quot;etcfstab permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/etc/fstab&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-fstab&quot;&gt;https://nextcloud.example.com/remote.php/dav/files/myuser/ /mnt/nextcloud davfs rw,nofail,user,uid=myuser 0 0
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;etcdavfs2secrets&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#etcdavfs2secrets&quot; aria-label=&quot;etcdavfs2secrets permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/etc/davfs2/secrets&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-plain&quot;&gt;https://nextcloud.example.com/remote.php/dav/files/myuser/ myuser APP_PASSWORD
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[Nextcloud Desktop Client PPA （Ubuntu）]]></title><description><![CDATA[Nextcloud Desktop Client PPA （Ubuntu） https://launchpad.net/~nextcloud-devs/+archive/ubuntu/client]]></description><link>https://blog.aoirint.com2021/nextcloud_desktop_ppa/</link><guid isPermaLink="false">https://blog.aoirint.com2021/nextcloud_desktop_ppa/</guid><pubDate>Sat, 13 Nov 2021 04:40:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;nextcloud-desktop-client-ppa-ubuntu&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#nextcloud-desktop-client-ppa-ubuntu&quot; aria-label=&quot;nextcloud desktop client ppa ubuntu permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nextcloud Desktop Client PPA （Ubuntu）&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://launchpad.net/~nextcloud-devs/+archive/ubuntu/client&quot;&gt;https://launchpad.net/~nextcloud-devs/+archive/ubuntu/client&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo apt install software-properties-common

sudo add-apt-repository ppa:nextcloud-devs/client
sudo apt update
sudo apt install nextcloud-desktop nautilus-nextcloud
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[WordPress]]></title><description><![CDATA[WordPress https://hub.docker.com/_/wordpress docker-compose.yml .env]]></description><link>https://blog.aoirint.com2021/wordpress/</link><guid isPermaLink="false">https://blog.aoirint.com2021/wordpress/</guid><pubDate>Sat, 13 Nov 2021 04:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;wordpress&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#wordpress&quot; aria-label=&quot;wordpress permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WordPress&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://hub.docker.com/_/wordpress&quot;&gt;https://hub.docker.com/_/wordpress&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;docker-composeyml&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker-composeyml&quot; aria-label=&quot;docker composeyml permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;docker-compose.yml&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;version: &amp;quot;3.9&amp;quot;

services:
  wordpress:
    image: wordpress:5.8.2-apache
    restart: always
    ports:
      - &amp;quot;${SERVER_PORT}:80&amp;quot;
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
    volumes:
      - wordpress:/var/www/html

  db:
    image: mariadb:10.7
    restart: always
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
      MYSQL_RANDOM_ROOT_PASSWORD: &amp;#x27;1&amp;#x27;
    volumes:
      - db:/var/lib/mysql

volumes:
  wordpress:
  db:
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;env&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#env&quot; aria-label=&quot;env permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.env&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-env&quot;&gt;SERVER_PORT=127.0.0.1:8000
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[docker-composeでBuildKitを使う]]></title><description><![CDATA[docker-composeでBuildKitを使う ビルドコマンド https://stackoverflow.com/questions/58592259/how-do-you-enable-buildkit-with-docker-compose Dockerfile…]]></description><link>https://blog.aoirint.com2021/docker_compose_buildkit/</link><guid isPermaLink="false">https://blog.aoirint.com2021/docker_compose_buildkit/</guid><pubDate>Sun, 07 Nov 2021 22:30:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;docker-composeでbuildkitを使う&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker-compose%E3%81%A7buildkit%E3%82%92%E4%BD%BF%E3%81%86&quot; aria-label=&quot;docker composeでbuildkitを使う permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;docker-composeでBuildKitを使う&lt;/h1&gt;&lt;h2 id=&quot;ビルドコマンド&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%93%E3%83%AB%E3%83%89%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89&quot; aria-label=&quot;ビルドコマンド permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ビルドコマンド&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/58592259/how-do-you-enable-buildkit-with-docker-compose&quot;&gt;https://stackoverflow.com/questions/58592259/how-do-you-enable-buildkit-with-docker-compose&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;DOCKER_BUILDKIT=1 COMPOSE_DOCKER_CLI_BUILD=1 docker-compose build
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;dockerfile&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#dockerfile&quot; aria-label=&quot;dockerfile permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dockerfile&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.docker.com/blog/introduction-to-heredocs-in-dockerfiles/&quot;&gt;https://www.docker.com/blog/introduction-to-heredocs-in-dockerfiles/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-dockerfile&quot;&gt;# syntax=docker/dockerfile:1.3-labs
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[Ubuntu 20.04, Unattended Upgradesを停止]]></title><description><![CDATA[Ubuntu 20.04, Unattended Upgradesを停止 https://unix.stackexchange.com/questions/470709/how-do-i-stop-disable-unattended-upgrades-from-being…]]></description><link>https://blog.aoirint.com2021/ubuntu_stop_unattended_upgrades/</link><guid isPermaLink="false">https://blog.aoirint.com2021/ubuntu_stop_unattended_upgrades/</guid><pubDate>Sun, 07 Nov 2021 22:30:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;ubuntu-2004-unattended-upgradesを停止&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#ubuntu-2004-unattended-upgrades%E3%82%92%E5%81%9C%E6%AD%A2&quot; aria-label=&quot;ubuntu 2004 unattended upgradesを停止 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu 20.04, Unattended Upgradesを停止&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://unix.stackexchange.com/questions/470709/how-do-i-stop-disable-unattended-upgrades-from-being-launched-automatically&quot;&gt;https://unix.stackexchange.com/questions/470709/how-do-i-stop-disable-unattended-upgrades-from-being-launched-automatically&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;勝手にnvidia driverの更新が走って、
カーネルに読み込まれているdriverバージョンと、
ディスク上にあるdriverバージョンが一致しなくなって、
デスクトップアプリが起動しなくなったりする。&lt;/p&gt;&lt;p&gt;どうせ結構な頻度でapt upgradeするし、
再起動が保証されないタイミングで更新されて、
不安定になるのはいただけない。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo dpkg-reconfigure -plow unattended-upgrades
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これでTUIが起動するので、&lt;code&gt;&amp;lt;No&amp;gt;&lt;/code&gt;を選ぶ。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ArchiveBox]]></title><description><![CDATA[ArchiveBox https://github.com/ArchiveBox/ArchiveBox https://hub.docker.com/r/archivebox/archivebox docker-compose.yml .env…]]></description><link>https://blog.aoirint.com2021/archivebox/</link><guid isPermaLink="false">https://blog.aoirint.com2021/archivebox/</guid><pubDate>Sat, 06 Nov 2021 14:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;archivebox&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#archivebox&quot; aria-label=&quot;archivebox permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ArchiveBox&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/ArchiveBox/ArchiveBox&quot;&gt;https://github.com/ArchiveBox/ArchiveBox&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/archivebox/archivebox&quot;&gt;https://hub.docker.com/r/archivebox/archivebox&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;curl -O &amp;#x27;https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/master/docker-compose.yml&amp;#x27;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;docker-composeyml&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker-composeyml&quot; aria-label=&quot;docker composeyml permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;docker-compose.yml&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;# Usage:
#     docker-compose run archivebox init --setup
#     docker-compose up
#     echo &amp;quot;https://example.com&amp;quot; | docker-compose run archivebox archivebox add
#     docker-compose run archivebox add --depth=1 https://example.com/some/feed.rss
#     docker-compose run archivebox config --set PUBLIC_INDEX=True
#     docker-compose run archivebox help
# Documentation:
#     https://github.com/ArchiveBox/ArchiveBox/wiki/Docker#docker-compose

version: &amp;quot;3.9&amp;quot;

services:
    archivebox:
        image: archivebox/archivebox:sha-f809e3b
        command: server --quick-init 0.0.0.0:8000
        ports:
          - &amp;quot;${SERVER_PORT:-8000}:8000&amp;quot;
        environment:
            ALLOWED_HOSTS: &amp;quot;*&amp;quot;
            MEDIA_MAX_SIZE: 2g
            # SEARCH_BACKEND_ENGINE: sonic     # uncomment these if you enable sonic below
            # SEARCH_BACKEND_HOST_NAME: sonic
            # SEARCH_BACKEND_PASSWORD: SecretPassword
        volumes:
            - &amp;quot;${DATA_ROOT:-./data}:/data&amp;quot;

    # To run the Sonic full-text search backend, first download the config file to sonic.cfg
    # curl -O https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/master/etc/sonic.cfg
    # after starting, backfill any existing Snapshots into the index: docker-compose run archivebox update --index-only
    # sonic:
    #    image: valeriansaliou/sonic:v1.3.0
    #    environment:
    #        SEARCH_BACKEND_PASSWORD: SecretPassword
    #    volumes:
    #        - ./sonic.cfg:/etc/sonic.cfg:ro
    #        - ./data/sonic:/var/lib/sonic/store


    ### Optional Addons: tweak these examples as needed for your specific use case

    # Example: Run scheduled imports in a docker instead of using cron on the
    # host machine, add tasks and see more info with archivebox schedule --help
    # scheduler:
    #    image: archivebox/archivebox:latest
    #    command: schedule --foreground --every=day --depth=1 &amp;#x27;https://getpocket.com/users/USERNAME/feed/all&amp;#x27;
    #    environment:
    #        USE_COLOR: True
    #        SHOW_PROGRESS: False
    #    volumes:
    #        - ./data:/data
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;env&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#env&quot; aria-label=&quot;env permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.env&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-env&quot;&gt;SERVER_PORT=127.0.0.1:8000
DATA_ROOT=./data
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;初期設定&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A&quot; aria-label=&quot;初期設定 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;初期設定&lt;/h2&gt;&lt;p&gt;管理ユーザの作成、プライベートサーバ化、再起動。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;docker-compose exec -u &amp;quot;archivebox&amp;quot; archivebox archivebox manage createsuperuser

docker-compose exec -u &amp;quot;archivebox&amp;quot; archivebox archivebox config --set PUBLIC_INDEX=False
docker-compose exec -u &amp;quot;archivebox&amp;quot; archivebox archivebox config --set PUBLIC_SNAPSHOTS=False
docker-compose exec -u &amp;quot;archivebox&amp;quot; archivebox archivebox config --set PUBLIC_ADD_VIEW=False

docker-compose up -d --force-recreate
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ArchiveBoxは、HTMLやスクリーンショット、PDFなど複数の形式でアーカイブする。
その中に&lt;code&gt;archive.org&lt;/code&gt;への保存が含まれる。無効化したい場合は以下の設定をする。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/ArchiveBox/ArchiveBox#archiving-private-content&quot;&gt;https://github.com/ArchiveBox/ArchiveBox#archiving-private-content&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;docker-compose exec -u &amp;quot;archivebox&amp;quot; archivebox archivebox config --set SAVE_ARCHIVE_DOT_ORG=False
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[Minecraft Server]]></title><description><![CDATA[Minecraft Server https://github.com/itzg/docker-minecraft-server https://feedback.minecraft.net/hc/en-us/sections/360001186971-Release…]]></description><link>https://blog.aoirint.com2021/minecraft_server/</link><guid isPermaLink="false">https://blog.aoirint.com2021/minecraft_server/</guid><pubDate>Sat, 06 Nov 2021 08:50:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;minecraft-server&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#minecraft-server&quot; aria-label=&quot;minecraft server permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Minecraft Server&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/itzg/docker-minecraft-server&quot;&gt;https://github.com/itzg/docker-minecraft-server&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://feedback.minecraft.net/hc/en-us/sections/360001186971-Release-Changelogs&quot;&gt;https://feedback.minecraft.net/hc/en-us/sections/360001186971-Release-Changelogs&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;docker-composeyml&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker-composeyml&quot; aria-label=&quot;docker composeyml permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;docker-compose.yml&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;version: &amp;quot;3.9&amp;quot;

services:
  minecraft:
    image: itzg/minecraft-server
    ports:
      - &amp;quot;${SERVER_PORT}:25565&amp;quot;
    environment:
      EULA: &amp;quot;TRUE&amp;quot;
      OVERRIDE_SERVER_PROPERTIES: &amp;#x27;false&amp;#x27; # overwrite on every container start if true
      TZ: ${TZ}
      TYPE: ${TYPE} # https://github.com/itzg/docker-minecraft-server#server-types
      VERSION: ${VERSION} # https://feedback.minecraft.net/hc/en-us/sections/360001186971-Release-Changelogs
      SERVER_NAME: ${SERVER_NAME}
      MOTD: ${MOTD}
      ENABLE_WHITELIST: ${ENABLE_WHITELIST}
      WHITELIST: ${WHITELIST}
      OPS: ${OPS}
      SPAWN_PROTECTION: ${SPAWN_PROTECTION}
      VIEW_DISTANCE: ${VIEW_DISTANCE}
      SEED: ${SEED}
      DIFFICULTY: ${DIFFICULTY}
      MODE: ${MODE}
      PVP: ${PVP}
      LEVEL_TYPE: ${LEVEL_TYPE}
      GENERATOR_SETTINGS: ${GENERATOR_SETTINGS}
      ONLINE_MODE: ${ONLINE_MODE}
    tty: true
    stdin_open: true
    restart: unless-stopped
    volumes:
      - ./data:/data
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;env&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#env&quot; aria-label=&quot;env permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.env&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-env&quot;&gt;SERVER_PORT=0.0.0.0:25565
TZ=Asia/Tokyo
TYPE=VANILLA
VERSION=1.17.1
SERVER_NAME=MyServer
MOTD=A Vanilla Minecraft Server powered by Docker
ENABLE_WHITELIST=true
WHITELIST=user1,user2
OPS=user1
SPAWN_PROTECTION=0
VIEW_DISTANCE=
SEED=
DIFFICULTY=normal
MODE=survival
PVP=true
LEVEL_TYPE=
GENERATOR_SETTINGS=
ONLINE_MODE=true
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;スーパーフラット&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%B9%E3%83%BC%E3%83%91%E3%83%BC%E3%83%95%E3%83%A9%E3%83%83%E3%83%88&quot; aria-label=&quot;スーパーフラット permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;スーパーフラット&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/itzg/docker-minecraft-server#level-type-and-generator-settings&quot;&gt;https://github.com/itzg/docker-minecraft-server#level-type-and-generator-settings&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://minecraft.fandom.com/wiki/Superflat&quot;&gt;https://minecraft.fandom.com/wiki/Superflat&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt; ※ 1.17.1でうまく動きませんでした（常にデフォルトのフラットワールドが生成される）。
代わりに、クライアントでワールドを生成してからサーバにコピーする方法が使えます。 &lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://bugs.mojang.com/browse/MC-195468&quot;&gt;https://bugs.mojang.com/browse/MC-195468&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-env&quot;&gt;LEVEL_TYPE=flat

# Overworld without structure
# for &amp;lt;1.13
# GENERATOR_SETTINGS=minecraft:bedrock,59*minecraft:stone,3*minecraft:dirt,minecraft:grass_block;minecraft:plains

# for 1.13+
GENERATOR_SETTINGS={&amp;quot;biome&amp;quot;:&amp;quot;minecraft:plains&amp;quot;,&amp;quot;lakes&amp;quot;:false,&amp;quot;features&amp;quot;:false,&amp;quot;layers&amp;quot;:[{&amp;quot;block&amp;quot;:&amp;quot;minecraft:bedrock&amp;quot;,&amp;quot;height&amp;quot;:1},{&amp;quot;block&amp;quot;:&amp;quot;minecraft:stone&amp;quot;,&amp;quot;height&amp;quot;:59},{&amp;quot;block&amp;quot;:&amp;quot;minecraft:dirt&amp;quot;,&amp;quot;height&amp;quot;:3},{&amp;quot;block&amp;quot;:&amp;quot;minecraft:grass_block&amp;quot;,&amp;quot;height&amp;quot;:1}],&amp;quot;structures&amp;quot;:{&amp;quot;structures&amp;quot;:{}}}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;JSON生成: &lt;a href=&quot;https://misode.github.io/world/&quot;&gt;https://misode.github.io/world/&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/itzg/docker-minecraft-server/issues/999#issuecomment-907849644&quot;&gt;https://github.com/itzg/docker-minecraft-server/issues/999#issuecomment-907849644&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# https://misode.github.io/world/ で生成したjsonをsuperflat.jsonとして保存

jq -c &amp;#x27;.dimensions.&amp;quot;minecraft:overworld&amp;quot;.generator.settings&amp;#x27; superflat.json
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;その他&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%81%9D%E3%81%AE%E4%BB%96&quot; aria-label=&quot;その他 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;その他&lt;/h2&gt;&lt;p&gt;統合版（Bedrock Edition）からJava版サーバに接続するための非公式プロキシGeyserが公開されている。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/GeyserMC/Geyser&quot;&gt;GeyserMC&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/GeyserMC/GeyserConnect&quot;&gt;GeyserConnect&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[GitLab CI, GitLab PagesにビルドしたHTMLを公開する]]></title><description><![CDATA[GitLab CI, GitLab PagesにビルドしたHTMLを公開する https://docs.gitlab.com/ee/user/project/pages/ リポジトリのGitLab Pages機能を有効化したあと、
GitLab CI上で pages…]]></description><link>https://blog.aoirint.com2021/gitlab_ci_publish_gitlab_pages/</link><guid isPermaLink="false">https://blog.aoirint.com2021/gitlab_ci_publish_gitlab_pages/</guid><pubDate>Sat, 06 Nov 2021 08:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;gitlab-ci-gitlab-pagesにビルドしたhtmlを公開する&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#gitlab-ci-gitlab-pages%E3%81%AB%E3%83%93%E3%83%AB%E3%83%89%E3%81%97%E3%81%9Fhtml%E3%82%92%E5%85%AC%E9%96%8B%E3%81%99%E3%82%8B&quot; aria-label=&quot;gitlab ci gitlab pagesにビルドしたhtmlを公開する permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GitLab CI, GitLab PagesにビルドしたHTMLを公開する&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://docs.gitlab.com/ee/user/project/pages/&quot;&gt;https://docs.gitlab.com/ee/user/project/pages/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;リポジトリのGitLab Pages機能を有効化したあと、
GitLab CI上で&lt;code&gt;pages&lt;/code&gt;というジョブに&lt;code&gt;public&lt;/code&gt;というパスのArtifactがあるとき、
自動的に&lt;code&gt;pages:deploy&lt;/code&gt;というジョブが実行され、GitLab Pagesへのデプロイが行われる。&lt;/p&gt;&lt;p&gt;リポジトリがプライベートリポジトリのとき、
デプロイされたGitLab Pagesは、GitLabアカウントで認証が行われる。&lt;/p&gt;&lt;h2 id=&quot;gitlab-ciyml&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#gitlab-ciyml&quot; aria-label=&quot;gitlab ciyml permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.gitlab-ci.yml&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://docs.gitlab.com/ee/user/project/pages/getting_started/pages_from_scratch.html#specify-a-stage-to-deploy&quot;&gt;https://docs.gitlab.com/ee/user/project/pages/getting_started/pages_from_scratch.html#specify-a-stage-to-deploy&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;image: ruby:2.7

workflow:
  rules:
    - if: &amp;#x27;$CI_COMMIT_BRANCH&amp;#x27;

pages:
  stage: deploy
  script:
    - gem install bundler
    - bundle install
    - bundle exec jekyll build -d public
  artifacts:
    paths:
      - public
  rules:
    - if: &amp;#x27;$CI_COMMIT_BRANCH == &amp;quot;main&amp;quot;&amp;#x27;
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[Overleaf Community Edition]]></title><description><![CDATA[Overleaf Community Edition https://overleaf.com/ オンラインLaTeXエディタのShareLaTeXとOverleafは、Overleaf v2として2017年に統合され、OverleafはShareLaTeX…]]></description><link>https://blog.aoirint.com2021/overleaf_ce/</link><guid isPermaLink="false">https://blog.aoirint.com2021/overleaf_ce/</guid><pubDate>Thu, 04 Nov 2021 20:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;overleaf-community-edition&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#overleaf-community-edition&quot; aria-label=&quot;overleaf community edition permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overleaf Community Edition&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://overleaf.com/&quot;&gt;https://overleaf.com/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;オンラインLaTeXエディタのShareLaTeXとOverleafは、Overleaf v2として2017年に統合され、OverleafはShareLaTeXのエディタを使うようになった。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.sharelatex.com/&quot;&gt;https://www.sharelatex.com/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://ja.overleaf.com/blog/sharelatex-joins-overleaf-2017-07-20&quot;&gt;https://ja.overleaf.com/blog/sharelatex-joins-overleaf-2017-07-20&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Overleaf（ShareLaTeX）は、&lt;code&gt;overleaf.com&lt;/code&gt;で提供されているクラウド版と、セルフホスト可能なオープンソース版（Community Edition）が公開されている。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/overleaf/overleaf&quot;&gt;https://github.com/overleaf/overleaf&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;この記事では、Overleaf Community Editionの公式Dockerイメージ（イメージ名は&lt;code&gt;sharelatex/sharelatex&lt;/code&gt;）を使って、セルフホストする。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/sharelatex/sharelatex/&quot;&gt;https://hub.docker.com/r/sharelatex/sharelatex/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;クラウド版とCommunity Editionの機能の違いは、以下を参照。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.overleaf.com/for/enterprises/features&quot;&gt;https://www.overleaf.com/for/enterprises/features&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;使用できない機能&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E4%BD%BF%E7%94%A8%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84%E6%A9%9F%E8%83%BD&quot; aria-label=&quot;使用できない機能 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;使用できない機能&lt;/h2&gt;&lt;h3 id=&quot;git管理&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#git%E7%AE%A1%E7%90%86&quot; aria-label=&quot;git管理 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Git管理&lt;/h3&gt;&lt;p&gt;Git管理やGitHub連携については、Community Editionには実装されていない（クラウド版のみ）。クラウド版のGit管理はクローズドソースなファイル履歴APIを利用して実装されており、これが技術的な課題になっているらしい。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/overleaf/overleaf/issues/782&quot;&gt;https://github.com/overleaf/overleaf/issues/782&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/overleaf/overleaf/issues/10&quot;&gt;https://github.com/overleaf/overleaf/issues/10&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Overleafに管理させないでよいのなら、ファイルは&lt;code&gt;/var/lib/sharelatex/data/compiles/{project_id}-{user_id}&lt;/code&gt;に保存されるので、ここを監視して自動コミットするようなプログラムを使ってもいいかもしれない。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# 後者のIDがユーザIDであることの確認
docker-compose exec mongo mongo sharelatex --eval &amp;quot;db.users.find()&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;テンプレート&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88&quot; aria-label=&quot;テンプレート permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;テンプレート&lt;/h3&gt;&lt;p&gt;クラウド版・Pro版限定機能。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/overleaf/web/issues/203&quot;&gt;https://github.com/overleaf/web/issues/203&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/overleaf/overleaf/issues/109&quot;&gt;https://github.com/overleaf/overleaf/issues/109&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/overleaf/overleaf/wiki/Server-Pro:-Setting-up-templates&quot;&gt;https://github.com/overleaf/overleaf/wiki/Server-Pro:-Setting-up-templates&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;docker-composeyml&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker-composeyml&quot; aria-label=&quot;docker composeyml permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;docker-compose.yml&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/overleaf/overleaf/blob/a752bbefdd7ef3316aaf0c34302f08e6024aaadb/docker-compose.yml&quot;&gt;https://github.com/overleaf/overleaf/blob/a752bbefdd7ef3316aaf0c34302f08e6024aaadb/docker-compose.yml&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/overleaf/overleaf/wiki/Configuring-Overleaf&quot;&gt;https://github.com/overleaf/overleaf/wiki/Configuring-Overleaf&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;version: &amp;#x27;3.9&amp;#x27;
services:
  sharelatex:
    image: sharelatex/sharelatex:3
    restart: always
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - &amp;quot;${SERVER_PORT}:80&amp;quot;
    volumes:
      - &amp;quot;${DATA_ROOT}:/var/lib/sharelatex&amp;quot;
      - &amp;quot;${TEXLIVE_ROOT}:/usr/local/texlive&amp;quot;
    environment:
      # https://github.com/overleaf/overleaf/wiki/Configuring-Overleaf
      SHARELATEX_APP_NAME: Overleaf Community Edition
      SHARELATEX_MONGO_URL: mongodb://mongo/sharelatex
      SHARELATEX_REDIS_HOST: redis
      REDIS_HOST: redis

      ENABLED_LINKED_FILE_TYPES: &amp;#x27;project_file,project_output_file&amp;#x27;

      # Enables Thumbnail generation using ImageMagick
      ENABLE_CONVERSIONS: &amp;#x27;true&amp;#x27;

      # Disables email confirmation requirement
      EMAIL_CONFIRMATION_DISABLED: &amp;#x27;true&amp;#x27;

      # temporary fix for LuaLaTex compiles
      # see https://github.com/overleaf/overleaf/issues/695
      TEXMFVAR: /var/lib/sharelatex/tmp/texmf-var

      # SHARELATEX_SITE_URL: http://sharelatex.mydomain.com
      # SHARELATEX_NAV_TITLE: Our ShareLaTeX Instance
      # SHARELATEX_HEADER_IMAGE_URL: http://somewhere.com/mylogo.png
      # SHARELATEX_ADMIN_EMAIL: support@it.com

      # SHARELATEX_LEFT_FOOTER: &amp;#x27;[{&amp;quot;text&amp;quot;: &amp;quot;Powered by &amp;lt;a href=\&amp;quot;https://www.sharelatex.com\&amp;quot;&amp;gt;ShareLaTeX&amp;lt;/a&amp;gt; 2016&amp;quot;},{&amp;quot;text&amp;quot;: &amp;quot;Another page I want to link to can be found &amp;lt;a href=\&amp;quot;here\&amp;quot;&amp;gt;here&amp;lt;/a&amp;gt;&amp;quot;} ]&amp;#x27;
      # SHARELATEX_RIGHT_FOOTER: &amp;#x27;[{&amp;quot;text&amp;quot;: &amp;quot;Hello I am on the Right&amp;quot;} ]&amp;#x27;

      # SHARELATEX_EMAIL_FROM_ADDRESS: &amp;quot;team@sharelatex.com&amp;quot;

      # SHARELATEX_EMAIL_AWS_SES_ACCESS_KEY_ID:
      # SHARELATEX_EMAIL_AWS_SES_SECRET_KEY:

      # SHARELATEX_EMAIL_SMTP_HOST: smtp.mydomain.com
      # SHARELATEX_EMAIL_SMTP_PORT: 587
      # SHARELATEX_EMAIL_SMTP_SECURE: false
      # SHARELATEX_EMAIL_SMTP_USER:
      # SHARELATEX_EMAIL_SMTP_PASS:
      # SHARELATEX_EMAIL_SMTP_TLS_REJECT_UNAUTH: true
      # SHARELATEX_EMAIL_SMTP_IGNORE_TLS: false
      # SHARELATEX_EMAIL_SMTP_NAME: &amp;#x27;127.0.0.1&amp;#x27;
      # SHARELATEX_EMAIL_SMTP_LOGGER: true
      # SHARELATEX_CUSTOM_EMAIL_FOOTER: &amp;quot;This system is run by department x&amp;quot;

  mongo:
    image: mongo:4.0
    restart: always
    volumes:
      - &amp;quot;${MONGO_ROOT}:/data/db&amp;quot;
    healthcheck:
      test: echo &amp;#x27;db.stats().ok&amp;#x27; | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5

  redis:
    image: redis:5
    restart: always
    volumes:
      - &amp;quot;${REDIS_ROOT}:/data&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;env&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#env&quot; aria-label=&quot;env permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.env&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-env&quot;&gt;SERVER_PORT=127.0.0.1:8000
DATA_ROOT=./data/sharelatex
TEXLIVE_ROOT=./data/texlive
MONGO_ROOT=./data/mongo
REDIS_ROOT=./data/redis
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;設定&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E8%A8%AD%E5%AE%9A&quot; aria-label=&quot;設定 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;設定&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/overleaf/overleaf/wiki/Quick-Start-Guide&quot;&gt;https://github.com/overleaf/overleaf/wiki/Quick-Start-Guide&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;texliveのフルインストール&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#texlive%E3%81%AE%E3%83%95%E3%83%AB%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&quot; aria-label=&quot;texliveのフルインストール permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TeXLiveのフルインストール&lt;/h3&gt;&lt;p&gt;TeXLiveのフルバージョンは巨大なため、Dockerイメージには最小構成のみが含まれている。
フルバージョンを使うには、インストールコマンドを実行する必要がある。&lt;/p&gt;&lt;p&gt;また、コンテナが削除されるとインストールしたTeXLiveが消え、再インストールが必要になるため、マウントして永続化する。
マウントすると、もともとイメージにあったディレクトリが上書きされるので、あらかじめイメージ内のTeXLiveをマウントするディレクトリにコピーしておく。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;docker pull sharelatex/sharelatex:3
docker run -d --name sharelatex sharelatex/sharelatex:3
docker cp sharelatex:/usr/local/texlive ./data/
docker rm -f sharelatex

docker-compose pull
docker-compose up -d

docker-compose exec sharelatex tlmgr option repository https://mirror.ctan.org/systems/texlive/tlnet
docker-compose exec sharelatex tlmgr update --self
docker-compose exec sharelatex tlmgr install scheme-full

docker-compose up -d --force-recreate
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.fugenji.org/~thomas/texlive-guide/tlmgr.html&quot;&gt;http://www.fugenji.org/~thomas/texlive-guide/tlmgr.html&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;なお、公式Wikiでは、ローカル用のDockerイメージを作る方法が案内されている。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/overleaf/overleaf/wiki/Quick-Start-Guide#latex-environment&quot;&gt;https://github.com/overleaf/overleaf/wiki/Quick-Start-Guide#latex-environment&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;ユーザの登録&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%A6%E3%83%BC%E3%82%B6%E3%81%AE%E7%99%BB%E9%8C%B2&quot; aria-label=&quot;ユーザの登録 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ユーザの登録&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/overleaf/overleaf/wiki/Quick-Start-Guide#creating-and-managing-users&quot;&gt;https://github.com/overleaf/overleaf/wiki/Quick-Start-Guide#creating-and-managing-users&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;初期状態では、&lt;code&gt;/launchpad&lt;/code&gt;にアクセスすることで管理ユーザを作成できる（コマンドで作成も可）。&lt;/p&gt;&lt;p&gt;一般ユーザの登録には、&lt;code&gt;/admin/register&lt;/code&gt;にアクセスする。&lt;/p&gt;&lt;h2 id=&quot;フォントnoto-sans-cjk-jpの追加&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88noto-sans-cjk-jp%E3%81%AE%E8%BF%BD%E5%8A%A0&quot; aria-label=&quot;フォントnoto sans cjk jpの追加 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;フォント（Noto Sans CJK JP）の追加&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/overleaf/overleaf/issues/817&quot;&gt;https://github.com/overleaf/overleaf/issues/817&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;コンテナ内のシステム（&lt;code&gt;/usr/share/fonts&lt;/code&gt;もしくは&lt;code&gt;/usr/local/share/fonts&lt;/code&gt;）にフォントを追加すれば認識する。&lt;/p&gt;&lt;h3 id=&quot;dockerfile&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#dockerfile&quot; aria-label=&quot;dockerfile permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dockerfile&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-dockerfile&quot;&gt;# syntax=docker/dockerfile:1.3-labs
FROM sharelatex/sharelatex:3

RUN &amp;lt;&amp;lt;EOF
    apt-get update
    apt-get install -y \
        fonts-noto-cjk
    fc-cache
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;docker-composeyml-1&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker-composeyml-1&quot; aria-label=&quot;docker composeyml 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;docker-compose.yml&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;# ...
services:
  sharelatex:
    # image: sharelatex/sharelatex:3
    build: .
    restart: always
# ...
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;dockerignore&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#dockerignore&quot; aria-label=&quot;dockerignore permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.dockerignore&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;/data
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;gitignore&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#gitignore&quot; aria-label=&quot;gitignore permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.gitignore&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;/data
.env*
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;実行&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E5%AE%9F%E8%A1%8C&quot; aria-label=&quot;実行 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;実行&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;DOCKER_BUILDKIT=1 COMPOSE_DOCKER_CLI_BUILD=1 docker-compose build
docker-compose up -d
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;日本語組版uplatexjsarticle&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E6%97%A5%E6%9C%AC%E8%AA%9E%E7%B5%84%E7%89%88uplatexjsarticle&quot; aria-label=&quot;日本語組版uplatexjsarticle permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;日本語組版（uplatex、jsarticle）&lt;/h2&gt;&lt;p&gt;※ Noto Sans CJK JPではない&lt;/p&gt;&lt;p&gt;&lt;code&gt;Menu &amp;gt; Settings &amp;gt; Compiler&lt;/code&gt;を&lt;code&gt;LaTeX&lt;/code&gt;に設定する。&lt;/p&gt;&lt;h3 id=&quot;latexmkrc&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#latexmkrc&quot; aria-label=&quot;latexmkrc permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;latexmkrc&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://doratex.hatenablog.jp/entry/20180503/1525338512&quot;&gt;https://doratex.hatenablog.jp/entry/20180503/1525338512&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-latexmkrc&quot;&gt;# https://doratex.hatenablog.jp/entry/20180503/1525338512
$latex = &amp;#x27;uplatex&amp;#x27;;
$bibtex = &amp;#x27;upbibtex&amp;#x27;;
$dvipdf = &amp;#x27;dvipdfmx %O -o %D %S&amp;#x27;;
$makeindex = &amp;#x27;mendex -U %O -o %D %S&amp;#x27;;
$pdf_mode = 3;
$ENV{TZ} = &amp;#x27;Asia/Tokyo&amp;#x27;;
$ENV{OPENTYPEFONTS} = &amp;#x27;/usr/share/fonts//:&amp;#x27;;
$ENV{TTFONTS} = &amp;#x27;/usr/share/fonts//:&amp;#x27;;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;maintex&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#maintex&quot; aria-label=&quot;maintex permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;main.tex&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-tex&quot;&gt;\documentclass[uplatex,10pt,a4paper,twocolumn]{jsarticle}

% https://medemanabu.net/latex/vector/
\usepackage{bm}

% http://www.latex-cmd.com/equation/max_min.html
\newcommand{\argmax}{\mathop{\rm argmax}\limits}
\newcommand{\argmin}{\mathop{\rm argmin}\limits}

\usepackage[dvipdfmx]{graphicx}
\usepackage{hyperref}
\usepackage{url}

\usepackage[
    %backend=biber,
    natbib=true,
    style=numeric,
    sorting=none,
    giveninits=true,
    maxbibnames=99,
    doi=false,isbn=false,url=false,eprint=false, % 表示圧縮
]{biblatex}
\addbibresource{main.bib}

\title{First}
\author{aoirint}
\date{2021-11-05}

\begin{document}

\maketitle

\section{背景}
こんにちは

\begin{equation}
    f(x) = a^2 x + b x + c
\end{equation}

\begin{equation}
    \argmin_{\bm w}\ ({\bm w}^{\rm T} {\bm x} - y)
\end{equation}

\section{手法}
こんにちは

% \begin{figure}
%   \centering
%   \includegraphics[width=\linewidth]{figures/sample.pdf}
%   \label{fig:sample}
%   \caption{サンプル}
% \end{figure}

\section{実験}
こんにちは

\section{実験結果}
こんにちは

\section{考察}
こんにちは

\section{まとめ}
こんにちは

\printbibliography

\end{document}
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[cron]]></title><description><![CDATA[cron Linux上でプログラムの実行をスケジュールするためのプログラム。 独自の書式をもつcrontabファイルでスケジュールを設定する。 想定環境 Ubuntu 20.04 /etc/crontab crontab…]]></description><link>https://blog.aoirint.com2021/cron/</link><guid isPermaLink="false">https://blog.aoirint.com2021/cron/</guid><pubDate>Thu, 04 Nov 2021 17:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;cron&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#cron&quot; aria-label=&quot;cron permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;cron&lt;/h1&gt;&lt;p&gt;Linux上でプログラムの実行をスケジュールするためのプログラム。&lt;/p&gt;&lt;p&gt;独自の書式をもつcrontabファイルでスケジュールを設定する。&lt;/p&gt;&lt;h2 id=&quot;想定環境&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E6%83%B3%E5%AE%9A%E7%92%B0%E5%A2%83&quot; aria-label=&quot;想定環境 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;想定環境&lt;/h2&gt;&lt;p&gt;Ubuntu 20.04&lt;/p&gt;&lt;h2 id=&quot;etccrontab&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#etccrontab&quot; aria-label=&quot;etccrontab permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/etc/crontab&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;SHELL=/bin/bash
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
MAILTO=

# Example of job definition:
# .---------------- minute (0 - 59)
# |  .------------- hour (0 - 23)
# |  |  .---------- day of month (1 - 31)
# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
# |  |  |  |  |
# *  *  *  *  * user-name command to be executed
17 *    * * *   root    cd / &amp;amp;&amp;amp; run-parts --report /etc/cron.hourly
25 6    * * *   root    test -x /usr/sbin/anacron || ( cd / &amp;amp;&amp;amp; run-parts --report /etc/cron.daily )
47 6    * * 7   root    test -x /usr/sbin/anacron || ( cd / &amp;amp;&amp;amp; run-parts --report /etc/cron.weekly )
52 6    1 * *   root    test -x /usr/sbin/anacron || ( cd / &amp;amp;&amp;amp; run-parts --report /etc/cron.monthly )
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;crontabの時刻形式は独特で、複雑な設定を新しく書き起こすのは面倒くさい。&lt;/p&gt;&lt;p&gt;デフォルトの&lt;code&gt;/etc/crontab&lt;/code&gt;では、&lt;code&gt;/etc/cron.hourly&lt;/code&gt;、&lt;code&gt;/etc/cron.daily&lt;/code&gt;のようなディレクトリの内部の実行ファイルを
定期実行するように設定されているので、ここに雑にシェルスクリプトを入れると簡単にcronを体験できる。&lt;/p&gt;&lt;p&gt;&lt;code&gt;run-parts&lt;/code&gt;は、指定したディレクトリ内の実行ファイルを、ファイル名でソートした順番で実行する。
以下のように、ファイル名にソートを考慮した番号付けをすることで、ジョブの実行順を制御できる（&lt;code&gt;10-my-job&lt;/code&gt;→&lt;code&gt;20-your-job&lt;/code&gt;→&lt;code&gt;33-goma&lt;/code&gt;の順で実行される）。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;10-my-job
20-your-job
33-goma
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;cronが正しく動作しているか確認するには、&lt;code&gt;journalctl&lt;/code&gt;を使うとよい。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;journalctl -u cron.service -f -n 20
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;cronにより実行されたプログラムの標準出力や、標準エラー出力を取得するのは手間がかかる。
cronは、プログラムの出力をメールで送るという動作をするが、メールを送信できるように設定しておかなければならない。
上のcrontabファイルでは、&lt;code&gt;MAILTO&lt;/code&gt;を空にすることでメールの送信を試みないようにしている（送信できなかったメールが&lt;code&gt;/var/spool/mail&lt;/code&gt;に蓄積されてストレージを圧迫するため）。&lt;/p&gt;&lt;p&gt;ログを確認するには、プログラム中でファイルに書き出すようにする方法をとることになる。&lt;/p&gt;&lt;p&gt;シェルスクリプトからSlackに通知を送るには、以下のようにするとよい（&lt;code&gt;sudo apt install curl jq&lt;/code&gt;）。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://api.slack.com/apps&quot;&gt;https://api.slack.com/apps&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;#!/bin/bash
WORKDIR=/work
WEBHOOK_URL=https://hooks.slack.com/services/***

cd &amp;quot;$WORKDIR&amp;quot;
ERROR=$(mycommand 2&amp;gt;&amp;amp;1 | tee /dev/stderr)

if [[ $? -ne 0 ]]; then
  SHORT_ERROR=${ERROR:0:1000}
  DATA=$(jq --arg key0 &amp;quot;text&amp;quot; --arg value0 &amp;quot;ERROR: $SHORT_ERROR&amp;quot; &amp;#x27;. | .[$key0]=$value0&amp;#x27; &amp;lt;&amp;lt;&amp;lt; &amp;#x27;{}&amp;#x27;)
  curl -X POST -H &amp;#x27;Content-type: application/json&amp;#x27; --data &amp;quot;$DATA&amp;quot; &amp;quot;$WEBHOOK_URL&amp;quot;
fi
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;etccrond&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#etccrond&quot; aria-label=&quot;etccrond permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/etc/cron.d&lt;/h2&gt;&lt;p&gt;crontab形式の設定を複数のファイルに分けて配置するためのディレクトリ。
例えば、&lt;code&gt;/etc/crontab&lt;/code&gt;を直接編集せずに、アプリケーションごとにcrontabを配置するようなことができる。
また、実体を別の場所においておいて、シンボリックリンクを&lt;code&gt;/etc/cron.d&lt;/code&gt;以下に配置することもできる（後述の権限設定に注意）ので、設定のgit管理にも便利（リポジトリ内のMakefileで、&lt;code&gt;/etc/cron.d/&lt;/code&gt;以下からシンボリックリンクを張るようにしておくなど）。&lt;/p&gt;&lt;p&gt;crontabファイルを一から書くのは慣れが必要なので、上の&lt;code&gt;/etc/crontab&lt;/code&gt;をコピーし、
もともとの設定を&lt;code&gt;#&lt;/code&gt;でコメントアウトしておいて、改変しながら使うのが便利だと思う。&lt;/p&gt;&lt;p&gt;なお、crontabファイルの所有者は&lt;code&gt;root&lt;/code&gt;で、所有者以外に書き込み権限があってはならない（&lt;code&gt;chmod 644 crontab&lt;/code&gt; または &lt;code&gt;chmod 600 crontab&lt;/code&gt;）という制約があるので注意。&lt;/p&gt;&lt;p&gt;また、&lt;code&gt;SHELL&lt;/code&gt;・&lt;code&gt;PATH&lt;/code&gt;のような設定は、&lt;code&gt;/etc/crontab&lt;/code&gt;とは独立しているので、改めて記述しなければならない。&lt;/p&gt;&lt;p&gt;例えば、デフォルトでは、&lt;code&gt;SHELL&lt;/code&gt;は&lt;code&gt;/bin/sh&lt;/code&gt;であり、&lt;code&gt;PATH&lt;/code&gt;に&lt;code&gt;/usr/local/bin&lt;/code&gt;が含まれていない。
&lt;code&gt;PATH&lt;/code&gt;をそれぞれのcrontabファイルで設定しないと、ターミナルで動かしたときと違って特定のコマンドが動かない、というような問題が起こることがある。
例えば、&lt;code&gt;docker-compose&lt;/code&gt;は&lt;code&gt;/usr/local/bin&lt;/code&gt;によくインストールされるので、&lt;code&gt;docker-compose&lt;/code&gt;コマンドを含むジョブがうまく動かない、ということがある。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[PulseAudioでSSHサーバ側の音声をクライアント側で再生する]]></title><description><![CDATA[PulseAudioでSSHサーバ側の音声をクライアント側で再生する RDPと違い、VNCでは接続先の音声を送れないことがある。 接続先のデスクトップ（SSH・VNCサーバ）で再生された音声をSSH経由で送信し、SSH・VNCクライアント側で再生できるようにする。 https…]]></description><link>https://blog.aoirint.com2021/pulseaudio_over_ssh/</link><guid isPermaLink="false">https://blog.aoirint.com2021/pulseaudio_over_ssh/</guid><pubDate>Sat, 09 Oct 2021 11:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;pulseaudioでsshサーバ側の音声をクライアント側で再生する&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#pulseaudio%E3%81%A7ssh%E3%82%B5%E3%83%BC%E3%83%90%E5%81%B4%E3%81%AE%E9%9F%B3%E5%A3%B0%E3%82%92%E3%82%AF%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%B3%E3%83%88%E5%81%B4%E3%81%A7%E5%86%8D%E7%94%9F%E3%81%99%E3%82%8B&quot; aria-label=&quot;pulseaudioでsshサーバ側の音声をクライアント側で再生する permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PulseAudioでSSHサーバ側の音声をクライアント側で再生する&lt;/h1&gt;&lt;p&gt;RDPと違い、VNCでは接続先の音声を送れないことがある。&lt;/p&gt;&lt;p&gt;接続先のデスクトップ（SSH・VNCサーバ）で再生された音声をSSH経由で送信し、SSH・VNCクライアント側で再生できるようにする。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://raspberrypi.stackexchange.com/questions/8621/how-to-set-up-a-pulseaudio-sink&quot;&gt;https://raspberrypi.stackexchange.com/questions/8621/how-to-set-up-a-pulseaudio-sink&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.freedesktop.org/wiki/Software/PulseAudio/Documentation/User/Modules/#module-tunnel-sink-new&quot;&gt;https://www.freedesktop.org/wiki/Software/PulseAudio/Documentation/User/Modules/#module-tunnel-sink-new&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;module-tunnel-sink-new&lt;/code&gt;の実装はすでに&lt;code&gt;module-tunnel-sink&lt;/code&gt;で動くようになっている（&lt;code&gt;pulseaudio 13.99.1&lt;/code&gt;）&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;音声を受け取る側sshvncクライアントpulseaudioサーバ&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E9%9F%B3%E5%A3%B0%E3%82%92%E5%8F%97%E3%81%91%E5%8F%96%E3%82%8B%E5%81%B4sshvnc%E3%82%AF%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%B3%E3%83%88pulseaudio%E3%82%B5%E3%83%BC%E3%83%90&quot; aria-label=&quot;音声を受け取る側sshvncクライアントpulseaudioサーバ permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;音声を受け取る側（SSH・VNCクライアント、PulseAudioサーバ）&lt;/h2&gt;&lt;h3 id=&quot;etcpulsedefaultpa&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#etcpulsedefaultpa&quot; aria-label=&quot;etcpulsedefaultpa permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/etc/pulse/default.pa&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-pulseaudio&quot;&gt;load-module module-native-protocol-tcp auth-ip-acl=127.0.0.0/8

load-module module-null-sink sink_name=DummyOutputRemote0 sink_properties=device.description=&amp;quot;DummyOutputRemote0&amp;quot;
load-module module-loopback source=DummyOutputRemote0.monitor source_dont_move=true
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;DummyOutputRemote0に対して音声が送られてくる。&lt;/p&gt;&lt;p&gt;DummyOutputRemote0.monitorで入力として音声を拾うこともできる。&lt;/p&gt;&lt;h3 id=&quot;sshconfig&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#sshconfig&quot; aria-label=&quot;sshconfig permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;~/.ssh/config&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-pulseaudio&quot;&gt;Host your-server
    # VNC
    LocalForward 15900 localhost:5900
    # PulseAudio
    RemoteForward 14713 localhost:4713
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;音声を送る側sshvncサーバpulseaudioクライアントサーバ中継用&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E9%9F%B3%E5%A3%B0%E3%82%92%E9%80%81%E3%82%8B%E5%81%B4sshvnc%E3%82%B5%E3%83%BC%E3%83%90pulseaudio%E3%82%AF%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%B3%E3%83%88%E3%82%B5%E3%83%BC%E3%83%90%E4%B8%AD%E7%B6%99%E7%94%A8&quot; aria-label=&quot;音声を送る側sshvncサーバpulseaudioクライアントサーバ中継用 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;音声を送る側（SSH・VNCサーバ、PulseAudioクライアント・サーバ＝中継用）&lt;/h2&gt;&lt;h3 id=&quot;etcpulsedefaultpa-1&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#etcpulsedefaultpa-1&quot; aria-label=&quot;etcpulsedefaultpa 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/etc/pulse/default.pa&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-pulseaudio&quot;&gt;load-module module-tunnel-sink sink_name=Remote server=tcp:127.0.0.1:14713 sink=DummyOutputRemote0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;PulseAudio再起動（&lt;code&gt;pulseaudio -k&lt;/code&gt;）後、
接続先のデスクトップ上で音声出力デバイス（Sink）をDummyOutputRemote0に設定する。
DummyOutputRemote0が表示されない場合、どこか設定が間違っていると思われる。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;電源メニューから音声デバイスを変更できるようにするGNOME拡張&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://extensions.gnome.org/extension/906/sound-output-device-chooser/&quot;&gt;https://extensions.gnome.org/extension/906/sound-output-device-chooser/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[VOICEVOX CoreをUbuntu/GPUで使う（exampleを動かすまで）]]></title><description><![CDATA[VOICEVOX CoreをUbuntu/GPUで使う（exampleを動かすまで） ※ VOICEVOX Coreにより生成した音声の利用にあたっては、VOICEVOX Coreの添付文書・利用規約を必ず確認し、従ってください。 https://github.com…]]></description><link>https://blog.aoirint.com2021/voicevox_core/</link><guid isPermaLink="false">https://blog.aoirint.com2021/voicevox_core/</guid><pubDate>Sat, 11 Sep 2021 14:40:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;voicevox-coreをubuntugpuで使うexampleを動かすまで&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#voicevox-core%E3%82%92ubuntugpu%E3%81%A7%E4%BD%BF%E3%81%86example%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99%E3%81%BE%E3%81%A7&quot; aria-label=&quot;voicevox coreをubuntugpuで使うexampleを動かすまで permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VOICEVOX CoreをUbuntu/GPUで使う（exampleを動かすまで）&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;※ VOICEVOX Coreにより生成した音声の利用にあたっては、VOICEVOX Coreの添付文書・利用規約を必ず確認し、従ってください。&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/Hiroshiba/voicevox_core&quot;&gt;https://github.com/Hiroshiba/voicevox_core&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code&gt;Ubuntu 20.04.3 LTS (Focal Fossa)

Python 3.9.6 (pyenv)

NVIDIA-SMI 470.57.02
Driver Version: 470.57.02
CUDA Version: 11.4

cuDNN 8.2.4
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;voicevox-coreのインタフェースについて&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#voicevox-core%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%95%E3%82%A7%E3%83%BC%E3%82%B9%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6&quot; aria-label=&quot;voicevox coreのインタフェースについて permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VOICEVOX Coreのインタフェースについて&lt;/h2&gt;&lt;p&gt;VOICEVOX Coreには、深層学習モデルの推論部分だけを実装したプリミティブなインタフェースしか用意されていません。&lt;/p&gt;&lt;p&gt;高級な前処理や後処理は実装されていないため、プリミティブなインタフェースを必要としていない場合は、VOICEVOX Coreを内蔵した、VOICEVOX EngineのHTTP APIを使うことをおすすめします。&lt;/p&gt;&lt;p&gt;VOICEVOX Engineは、公式Dockerイメージが公開されています。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/Hiroshiba/voicevox_engine&quot;&gt;https://github.com/Hiroshiba/voicevox_engine&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/hiroshiba/voicevox_engine&quot;&gt;https://hub.docker.com/r/hiroshiba/voicevox_engine&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;libtorchのダウンロード&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#libtorch%E3%81%AE%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89&quot; aria-label=&quot;libtorchのダウンロード permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LibTorchのダウンロード&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://pytorch.org/&quot;&gt;https://pytorch.org/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Stable &amp;gt; Linux &amp;gt; LibTorch &amp;gt; C++/Java &amp;gt; CUDA 11.1 &amp;gt; Download here (cxx11 ABI)&lt;/p&gt;&lt;p&gt;&lt;code&gt;libtorch-cxx11-abi-shared-with-deps-1.9.0+cu111.zip&lt;/code&gt;を使用した。
圧縮時で2.1GB、展開時で5.1GB。&lt;/p&gt;&lt;p&gt;&lt;code&gt;~/local/libtorch&lt;/code&gt;以下に、&lt;code&gt;~/local/libtorch/build-version&lt;/code&gt;のように全ファイルを展開する。&lt;/p&gt;&lt;h2 id=&quot;voicevox-coreのダウンロード&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#voicevox-core%E3%81%AE%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89&quot; aria-label=&quot;voicevox coreのダウンロード permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VOICEVOX Coreのダウンロード&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/Hiroshiba/voicevox_core/releases/tag/0.5.1&quot;&gt;https://github.com/Hiroshiba/voicevox_core/releases/tag/0.5.1&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;圧縮時・展開時ともに430MB。&lt;/p&gt;&lt;p&gt;&lt;code&gt;~/local/voicevox_core&lt;/code&gt;以下に、&lt;code&gt;~/local/voicevox_core/libcore.so&lt;/code&gt;のように全ファイルを展開する。&lt;/p&gt;&lt;h2 id=&quot;bashrc&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#bashrc&quot; aria-label=&quot;bashrc permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.bashrc&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;export LIBRARY_PATH=&amp;quot;$HOME/local/voicevox_core:$LIBRARY_PATH&amp;quot;
export LIBRARY_PATH=&amp;quot;$HOME/local/libtorch/lib:$LIBRARY_PATH&amp;quot;
export LD_LIBRARY_PATH=&amp;quot;$HOME/local/voicevox_core:$LD_LIBRARY_PATH&amp;quot;
export LD_LIBRARY_PATH=&amp;quot;$HOME/local/libtorch/lib:$LD_LIBRARY_PATH&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;source ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;サンプルリポジトリをクローン&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%B3&quot; aria-label=&quot;サンプルリポジトリをクローン permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;サンプルリポジトリをクローン&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/Hiroshiba/voicevox_core&quot;&gt;https://github.com/Hiroshiba/voicevox_core&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;git clone https://github.com/Hiroshiba/voicevox_core.git
cd voicevox_core

# 再現性のためにバージョンを固定、実際は最新版の使用を推奨
git checkout 89d0962ab54269023fe0ec3170c7075744f38702
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;corehをコピー&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#coreh%E3%82%92%E3%82%B3%E3%83%94%E3%83%BC&quot; aria-label=&quot;corehをコピー permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;core.hをコピー&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cp core.h example/python/

cd example/python
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;パッケージのインストール&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&quot; aria-label=&quot;パッケージのインストール permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;パッケージのインストール&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# 依存パッケージのインストール
pip3 install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;pipを使ったインストール&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#pip%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&quot; aria-label=&quot;pipを使ったインストール permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pipを使ったインストール&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# coreモジュール（VOICEVOX Core Pythonライブラリ）のインストール
pip3 install .
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;distutilsを使ったインストール&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#distutils%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&quot; aria-label=&quot;distutilsを使ったインストール permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;distutilsを使ったインストール&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# coreモジュール（VOICEVOX Core Pythonライブラリ）のインストール
python3 setup.py install --record files.txt


# 失敗時
python3 setup.py clean
rm -rf build/ core.cpp
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;files.txt&lt;/code&gt;にインストールされたファイル一覧が出力される。
アンインストール時は、&lt;code&gt;files.txt&lt;/code&gt;に列挙されたファイルを手動で削除する。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/orion0616/items/dfe476067e499cca8535&quot;&gt;https://qiita.com/orion0616/items/dfe476067e499cca8535&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;filestxt&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#filestxt&quot; aria-label=&quot;filestxt permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;files.txt&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;***/lib/python3.9/site-packages/core.cpython-39-x86_64-linux-gnu.so
***/lib/python3.9/site-packages/core-0.0.0-py3.9.egg-info
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;サンプルプログラムrunpyの改変&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0runpy%E3%81%AE%E6%94%B9%E5%A4%89&quot; aria-label=&quot;サンプルプログラムrunpyの改変 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;サンプルプログラム（run.py）の改変&lt;/h2&gt;&lt;p&gt;&lt;code&gt;core.initialize&lt;/code&gt;の第1引数を&lt;code&gt;libcore.so&lt;/code&gt;のあるディレクトリのパスに変更する。（末尾のスラッシュは必須）。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;    core.initialize(&amp;quot;/home/user/local/voicevox_core/&amp;quot;, use_gpu)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;改変したサンプルプログラムrunpyの実行&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E6%94%B9%E5%A4%89%E3%81%97%E3%81%9F%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0runpy%E3%81%AE%E5%AE%9F%E8%A1%8C&quot; aria-label=&quot;改変したサンプルプログラムrunpyの実行 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;改変したサンプルプログラム（run.py）の実行&lt;/h2&gt;&lt;h3 id=&quot;四国めたん&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E5%9B%9B%E5%9B%BD%E3%82%81%E3%81%9F%E3%82%93&quot; aria-label=&quot;四国めたん permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;四国めたん&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;python3 run.py --use_gpu --text &amp;quot;こんにちは&amp;quot; --speaker_id 0

paplay &amp;quot;./こんにちは-0.wav&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;ずんだもん&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%81%9A%E3%82%93%E3%81%A0%E3%82%82%E3%82%93&quot; aria-label=&quot;ずんだもん permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ずんだもん&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;python3 run.py --use_gpu --text &amp;quot;こんにちはなのだ&amp;quot; --speaker_id 1

paplay &amp;quot;./こんにちはなのだ-0.wav&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;使用するgpuの変更複数台のgpuが接続された環境&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8Bgpu%E3%81%AE%E5%A4%89%E6%9B%B4%E8%A4%87%E6%95%B0%E5%8F%B0%E3%81%AEgpu%E3%81%8C%E6%8E%A5%E7%B6%9A%E3%81%95%E3%82%8C%E3%81%9F%E7%92%B0%E5%A2%83&quot; aria-label=&quot;使用するgpuの変更複数台のgpuが接続された環境 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;使用するGPUの変更（複数台のGPUが接続された環境）&lt;/h2&gt;&lt;p&gt;CUDAを使うアプリケーション一般に適用できる方法。数値は&lt;code&gt;nvidia-smi&lt;/code&gt;で確認できるGPU番号とは異なることがあるので注意。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;CUDA_VISIBLE_DEVICES=0 python3 run.py --use_gpu --text &amp;quot;こんにちは&amp;quot; --speaker_id 0
CUDA_VISIBLE_DEVICES=1 python3 run.py --use_gpu --text &amp;quot;こんにちは&amp;quot; --speaker_id 0
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;その他参考&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%81%9D%E3%81%AE%E4%BB%96%E5%8F%82%E8%80%83&quot; aria-label=&quot;その他参考 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;その他参考&lt;/h2&gt;&lt;p&gt;&lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;について調べていたが、コンパイル（&lt;code&gt;python3 setup.py install&lt;/code&gt;）時に必要（&lt;code&gt;g++&lt;/code&gt;が見に行くパス）なのは&lt;code&gt;LIBRARY_PATH&lt;/code&gt;、実行時（&lt;code&gt;core&lt;/code&gt;モジュールロード時）に必要なのは&lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;ということらしかった。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://bettamodoki.hatenadiary.jp/entry/20121121/1353480891&quot;&gt;https://bettamodoki.hatenadiary.jp/entry/20121121/1353480891&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr/&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atmarkit.itmedia.co.jp/flinux/rensai/linuxtips/a115makeerror.html&quot;&gt;https://atmarkit.itmedia.co.jp/flinux/rensai/linuxtips/a115makeerror.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://please-sleep.cou929.nu/20080718.html&quot;&gt;https://please-sleep.cou929.nu/20080718.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/Esfahan/items/0064d845ca6faf7f3d47&quot;&gt;https://qiita.com/Esfahan/items/0064d845ca6faf7f3d47&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/kazatsuyu/items/5c8d9f539cd925fda007&quot;&gt;https://qiita.com/kazatsuyu/items/5c8d9f539cd925fda007&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[SendGrid]]></title><description><![CDATA[SendGrid 背景 Discourseをセットアップしようとしていたところ、いくつかのEmailプロバイダが紹介されていた。 https://github.com/discourse/discourse/blob/4e0a43f2117ac83bcf7e0f9bed…]]></description><link>https://blog.aoirint.com2021/sendgrid/</link><guid isPermaLink="false">https://blog.aoirint.com2021/sendgrid/</guid><pubDate>Sat, 11 Sep 2021 04:10:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;sendgrid&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#sendgrid&quot; aria-label=&quot;sendgrid permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SendGrid&lt;/h1&gt;&lt;h2 id=&quot;背景&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E8%83%8C%E6%99%AF&quot; aria-label=&quot;背景 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;Discourseをセットアップしようとしていたところ、いくつかのEmailプロバイダが紹介されていた。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/discourse/discourse/blob/4e0a43f2117ac83bcf7e0f9bed65370f6c4c15bb/docs/INSTALL-email.md&quot;&gt;https://github.com/discourse/discourse/blob/4e0a43f2117ac83bcf7e0f9bed65370f6c4c15bb/docs/INSTALL-email.md&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.mailgun.com/&quot;&gt;Mailgun&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://sendgrid.com/&quot;&gt;SendGrid&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.mailjet.com/pricing&quot;&gt;Mailjet&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://elasticemail.com/&quot;&gt;Elastic Email&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Discourseはセットアップにメールサーバが要求される。以前のMastodonのセットアップでは、Gmailとアプリパスワードを使った簡易セットアップを使ったが、経験積みとセキュリティ上の懸念から、今回はメールサーバを用意することにした。&lt;/p&gt;&lt;p&gt;名前を聞いたことのあるSendGridを使う。業務上の利用を想定しているようだが、個人による利用として続行する。スケールする商用サービスでの利用ではないが、利用経験は技術選定の上で大事だと思う。その分、Abuseしないように考えなければならないが。&lt;/p&gt;&lt;h2 id=&quot;freeプラン&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#free%E3%83%97%E3%83%A9%E3%83%B3&quot; aria-label=&quot;freeプラン permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Freeプラン&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://sendgrid.com/pricing/&quot;&gt;https://sendgrid.com/pricing/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;1日に100メールまではFreeプランが使用できる。自分しか使わない、またはごくごく小規模な利用では十分だろう。&lt;/p&gt;&lt;h2 id=&quot;登録&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E7%99%BB%E9%8C%B2&quot; aria-label=&quot;登録 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;登録&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://sendgrid.com/&quot;&gt;https://sendgrid.com/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;code&gt;Start For Free&lt;/code&gt;から登録する。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;images/signup_button.png&quot; alt=&quot;&amp;quot;Start For Free&amp;quot;をクリックする&quot;/&gt;&lt;/p&gt;&lt;p&gt;細かい登録の過程は省略する。&lt;/p&gt;&lt;h2 id=&quot;ドメインの認証&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3%E3%81%AE%E8%AA%8D%E8%A8%BC&quot; aria-label=&quot;ドメインの認証 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ドメインの認証&lt;/h2&gt;&lt;p&gt;ダッシュボードを開く。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://app.sendgrid.com/&quot;&gt;https://app.sendgrid.com/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;images/authenticate_a_domain_instead.png&quot; alt=&quot;&amp;quot;authenticate a domain instead&amp;quot;をクリックする&quot;/&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://app.sendgrid.com/settings/sender_auth/domain/create&quot;&gt;https://app.sendgrid.com/settings/sender_auth/domain/create&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;images/authenticate_your_domain.png&quot; alt=&quot;DNSホストの選択&quot;/&gt;&lt;/p&gt;&lt;p&gt;ドメインプロバイダ（DNSホスト）の選択を求められる。
お名前.comはリストになかったので、&lt;code&gt;Other Host (Not Listed)&lt;/code&gt;を選択し続行する。
あまり意味はないだろうが、Which DNS Hostにプロバイダ名を書いておく。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;images/input_domain.png&quot; alt=&quot;ドメイン名の入力&quot;/&gt;&lt;/p&gt;&lt;p&gt;ドメイン名を入力する。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;images/dns_info.png&quot; alt=&quot;認証用のDNSレコード情報&quot;/&gt;&lt;/p&gt;&lt;p&gt;DNSサーバに登録すべき認証用のレコードが表示される（DNSサーバにクエリを送れば誰でも確認できるので公開情報）。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;images/onamae_dns_setup.png&quot; alt=&quot;お名前.comでのDNSレコード設定&quot;/&gt;&lt;/p&gt;&lt;p&gt;ドメインプロバイダ/DNSサーバでDNSレコードを設定する。
設定が反映されるまでしばらく待つ。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;images/domain_verified.png&quot; alt=&quot;ドメイン認証完了&quot;/&gt;&lt;/p&gt;&lt;p&gt;ドメインが認証された。
これでSendGridを使って、このドメインからのメールを送信できるようになった。&lt;/p&gt;&lt;h2 id=&quot;apiキーの発行送信テスト&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#api%E3%82%AD%E3%83%BC%E3%81%AE%E7%99%BA%E8%A1%8C%E9%80%81%E4%BF%A1%E3%83%86%E3%82%B9%E3%83%88&quot; aria-label=&quot;apiキーの発行送信テスト permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;APIキーの発行（送信テスト）&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://app.sendgrid.com/guide/integrate&quot;&gt;https://app.sendgrid.com/guide/integrate&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;images/choose_setup_method.png&quot; alt=&quot;APIキーの利用方法の選択&quot;/&gt;&lt;/p&gt;&lt;p&gt;Web APIを選択する。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;images/webapi_langs.png&quot; alt=&quot;プログラミング言語/利用プログラムの選択&quot;/&gt;&lt;/p&gt;&lt;p&gt;プログラミング言語/利用プログラムを選択する。チュートリアルの出し分けをするだけで、ここでの選択に特に意味はないと思われる（チュートリアルなしでAPIキーを発行もできる： &lt;a href=&quot;https://app.sendgrid.com/settings/api_keys&quot;&gt;https://app.sendgrid.com/settings/api_keys&lt;/a&gt;）。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;images/create_api_key.png&quot; alt=&quot;APIキーの発行&quot;/&gt;&lt;/p&gt;&lt;p&gt;とりあえずcURLでテストすることにして、APIキーを発行する。&lt;/p&gt;&lt;p&gt;下のcurlコマンドの送信JSONデータを編集する。
toを自分のメールアドレス、fromを認証したドメインのメールアドレスに変える。
特にfromのメールアカウントを作成する必要はなく、
&lt;code&gt;hoge@example.com&lt;/code&gt;のように適当なアカウント名をつけたアドレスを使えばよい。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;images/received_email.png&quot; alt=&quot;受信したEメール&quot;/&gt;&lt;/p&gt;&lt;p&gt;コマンドを適当な端末で実行し、メールが届けば成功。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;images/email_send_succeeded.png&quot; alt=&quot;Eメール送信成功&quot;/&gt;&lt;/p&gt;&lt;p&gt;SendGrid上でも送信成功を確認できる。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[WebDAV in Docker]]></title><description><![CDATA[WebDAV in Docker https://github.com/aoirint/webdav-docker https://hub.docker.com/r/aoirint/webdav 以下のリポジトリをforkし、Windows 10のExplorer…]]></description><link>https://blog.aoirint.com2021/webdav_docker/</link><guid isPermaLink="false">https://blog.aoirint.com2021/webdav_docker/</guid><pubDate>Sun, 22 Aug 2021 02:15:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;webdav-in-docker&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#webdav-in-docker&quot; aria-label=&quot;webdav in docker permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WebDAV in Docker&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/aoirint/webdav-docker&quot;&gt;https://github.com/aoirint/webdav-docker&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/aoirint/webdav&quot;&gt;https://hub.docker.com/r/aoirint/webdav&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;以下のリポジトリをforkし、Windows 10のExplorerクライアントに対応させたDockerイメージ。
Apache Web ServerのDAV機能でWebDAVサーバを立てる。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/BytemarkHosting/docker-webdav&quot;&gt;https://github.com/BytemarkHosting/docker-webdav&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;docker-composeyml&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker-composeyml&quot; aria-label=&quot;docker composeyml permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;docker-compose.yml&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;version: &amp;#x27;3.9&amp;#x27;
services:
  webdav:
    image: aoirint/webdav:2.4-20210822c
    restart: always
    ports:
      - &amp;#x27;${DAV_PORT:-127.0.0.1:8000}:80&amp;#x27;
    environment:
      LOCATION: /webdav
      ANONYMOUS_METHODS: OPTIONS
      AUTH_TYPE: Basic
      USERNAME: ${DAV_USERNAME:-user}
      PASSWORD: ${DAV_PASSWORD:-password}
      # SKIP_CHOWN: 1
    volumes:
      - ./dav:/var/lib/dav
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以上の設定で、&lt;code&gt;dav://127.0.0.1:8000/webdav&lt;/code&gt;にWebDAVサーバが立つ。&lt;/p&gt;&lt;p&gt;データは&lt;code&gt;./dav/data&lt;/code&gt;に格納される。&lt;/p&gt;&lt;h2 id=&quot;optional-etcfstab&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#optional-etcfstab&quot; aria-label=&quot;optional etcfstab permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Optional: /etc/fstab&lt;/h2&gt;&lt;p&gt;シンボリックリンクは動作しないので、&lt;code&gt;bindfs&lt;/code&gt;を使う。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo apt install bindfs fuse-utils
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&quot;language-fstab&quot;&gt;/src/path /dest/dav/data/path fuse.bindfs rw,user,uid=YOURUSER 0 0
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.netfort.gr.jp/~tosihisa/notebook/doku.php/bindfs&quot;&gt;https://www.netfort.gr.jp/~tosihisa/notebook/doku.php/bindfs&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[SmokePing in Docker]]></title><description><![CDATA[SmokePing in Docker https://hub.docker.com/r/dperson/smokeping Copy Configs docker-compose.yml config/config.d/Targets]]></description><link>https://blog.aoirint.com2021/smokeping_docker/</link><guid isPermaLink="false">https://blog.aoirint.com2021/smokeping_docker/</guid><pubDate>Sun, 22 Aug 2021 00:45:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;smokeping-in-docker&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#smokeping-in-docker&quot; aria-label=&quot;smokeping in docker permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SmokePing in Docker&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/dperson/smokeping&quot;&gt;https://hub.docker.com/r/dperson/smokeping&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;copy-configs&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#copy-configs&quot; aria-label=&quot;copy configs permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copy Configs&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;docker run --name smokeping --rm -d dperson/smokeping:latest
docker cp smokeping:/etc/smokeping ./config
docker rm -f smokeping
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;docker-composeyml&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker-composeyml&quot; aria-label=&quot;docker composeyml permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;docker-compose.yml&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;version: &amp;#x27;3.9&amp;#x27;
services:
  smokeping:
    image: dperson/smokeping:latest
    restart: always
    ports:
      - &amp;#x27;{SMOKEPING_PORT:-127.0.0.1:8000}:80&amp;#x27;
    volumes:
      - &amp;#x27;./config:/etc/smokeping:ro&amp;#x27;
      - &amp;#x27;./data:/var/lib/smokeping&amp;#x27;
    environment:
      TZ: Asia/Tokyo
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;configconfigdtargets&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#configconfigdtargets&quot; aria-label=&quot;configconfigdtargets permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;config/config.d/Targets&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-smokeping&quot;&gt;*** Targets ***

probe = FPing

menu = Top
title = Network Latency Grapher
remark = Welcome to the SmokePing website of xxx Company. \
         Here you will learn all about the latency of our network.

+ Home

menu = Home
title = Home Network
#parents = owner:/Test/James location:/

++ Router

menu = Router (192.168.0.1)
title = Router (192.168.0.1)
host = 192.168.0.1

++ MyServer

menu = MyServer (192.168.0.2)
title = MyServer (192.168.0.2)
host = 192.168.0.2
#alerts = someloss
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[ファイル変更時にコマンド実行（watchmedo, watchexec）]]></title><description><![CDATA[ファイル変更時にコマンド実行（watchmedo, watchexec） watchmedo (watchdog) https://github.com/gorakhargosh/watchdog https://pypi.org/project/watchdog…]]></description><link>https://blog.aoirint.com2021/run_command_on_file_change/</link><guid isPermaLink="false">https://blog.aoirint.com2021/run_command_on_file_change/</guid><pubDate>Sat, 21 Aug 2021 21:30:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;ファイル変更時にコマンド実行watchmedo-watchexec&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%A4%89%E6%9B%B4%E6%99%82%E3%81%AB%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E5%AE%9F%E8%A1%8Cwatchmedo-watchexec&quot; aria-label=&quot;ファイル変更時にコマンド実行watchmedo watchexec permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ファイル変更時にコマンド実行（watchmedo, watchexec）&lt;/h1&gt;&lt;h2 id=&quot;watchmedo-watchdog&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#watchmedo-watchdog&quot; aria-label=&quot;watchmedo watchdog permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;watchmedo (watchdog)&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/gorakhargosh/watchdog&quot;&gt;https://github.com/gorakhargosh/watchdog&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://pypi.org/project/watchdog/&quot;&gt;https://pypi.org/project/watchdog/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;watchmedo shell-command -R --command &amp;#x27;make build&amp;#x27; ./src

# プロセスが動いていても停止して再実行する
watchmedo auto-restart -R -d ./src -- make serve
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;インストール&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&quot; aria-label=&quot;インストール permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;インストール&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;pip3 install watchdog[watchmedo]==2.1.3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;※ 2.1.4 on Ubuntuはバグがありそう&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Exception in thread Thread-1:
Traceback (most recent call last):
  File &amp;quot;$HOME/.pyenv/versions/3.9.6/lib/python3.9/threading.py&amp;quot;, line 973, in _bootstrap_inner
    self.run()
  File &amp;quot;$HOME/.pyenv/versions/3.9.6/lib/python3.9/site-packages/watchdog/observers/api.py&amp;quot;, line 199, in run
    self.dispatch_events(self.event_queue, self.timeout)
  File &amp;quot;$HOME/.pyenv/versions/3.9.6/lib/python3.9/site-packages/watchdog/observers/api.py&amp;quot;, line 372, in dispatch_events
    handler.dispatch(event)
  File &amp;quot;$HOME/.pyenv/versions/3.9.6/lib/python3.9/site-packages/watchdog/events.py&amp;quot;, line 282, in dispatch
    self.event_dispatch_map[event.event_type](event)
AttributeError: &amp;#x27;RootHandler&amp;#x27; object has no attribute &amp;#x27;event_dispatch_map&amp;#x27;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;watchexec&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#watchexec&quot; aria-label=&quot;watchexec permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;watchexec&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/watchexec/watchexec&quot;&gt;https://github.com/watchexec/watchexec&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://crates.io/crates/watchexec-cli&quot;&gt;https://crates.io/crates/watchexec-cli&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://superuser.com/questions/181517/how-to-execute-a-command-whenever-a-file-changes&quot;&gt;https://superuser.com/questions/181517/how-to-execute-a-command-whenever-a-file-changes&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;watchexec -w ./src -- make build

# プロセスが動いていても停止して再実行する
watchexec -r -w ./src -- make serve

# 初回実行しない
watchexec -p -w ./src -- make event-trigger
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;インストール-1&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB-1&quot; aria-label=&quot;インストール 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;インストール&lt;/h3&gt;&lt;h4 id=&quot;rustのインストール&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#rust%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&quot; aria-label=&quot;rustのインストール permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rustのインストール&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.rust-lang.org/ja/learn/get-started&quot;&gt;https://www.rust-lang.org/ja/learn/get-started&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;curl --proto &amp;#x27;=https&amp;#x27; --tlsv1.2 -sSf https://sh.rustup.rs | sh
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;watchexecのインストール&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#watchexec%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&quot; aria-label=&quot;watchexecのインストール permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;watchexecのインストール&lt;/h4&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cargo install watchexec-cli
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[Terraria TShockサーバをdocker-composeで立てる]]></title><description><![CDATA[Terraria TShockサーバをdocker-composeで立てる https://github.com/Pryaxis/TShock https://hub.docker.com/r/ryshe/terraria/ 上記URL…]]></description><link>https://blog.aoirint.com2021/terraria_tshock_docker/</link><guid isPermaLink="false">https://blog.aoirint.com2021/terraria_tshock_docker/</guid><pubDate>Sat, 21 Aug 2021 20:25:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;terraria-tshockサーバをdocker-composeで立てる&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#terraria-tshock%E3%82%B5%E3%83%BC%E3%83%90%E3%82%92docker-compose%E3%81%A7%E7%AB%8B%E3%81%A6%E3%82%8B&quot; aria-label=&quot;terraria tshockサーバをdocker composeで立てる permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Terraria TShockサーバをdocker-composeで立てる&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/Pryaxis/TShock&quot;&gt;https://github.com/Pryaxis/TShock&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/ryshe/terraria/&quot;&gt;https://hub.docker.com/r/ryshe/terraria/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;上記URLから最新（もしくは対応する）バージョンを確認して、イメージタグのバージョンを変更する。&lt;/p&gt;&lt;p&gt;既存のワールドを使用する場合は、&lt;code&gt;./data/worlds/&lt;/code&gt;に&lt;code&gt;.wld&lt;/code&gt;ファイルを配置し、&lt;code&gt;WORLD_FILENAME&lt;/code&gt;を変更する。&lt;/p&gt;&lt;h2 id=&quot;docker-composeyml&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker-composeyml&quot; aria-label=&quot;docker composeyml permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;docker-compose.yml&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;version: &amp;#x27;3.9&amp;#x27;
services:
  terraria:
      image: ryshe/terraria:tshock-1.4.2.3-4.5.5
      tty: true
      stdin_open: true
      restart: always
      ports:
        - &amp;#x27;7777:7777&amp;#x27;
      volumes:
        - &amp;#x27;${WORLD_DIR:-./data/worlds}:/root/.local/share/Terraria/Worlds&amp;#x27;
        - &amp;#x27;${LOG_DIR:-./data/logs}:/tshock/logs&amp;#x27;
        - &amp;#x27;${BACKUP_DIR:-./data/backups}:/tshock/backups&amp;#x27;                       
        - &amp;#x27;${PLUGIN_DIR:-./data/plugins}:/plugins&amp;#x27;
      environment:
        TZ: &amp;#x27;Asia/Tokyo&amp;#x27;
        WORLD_FILENAME: &amp;#x27;MyWorldName.wld&amp;#x27;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;ワールドの新規作成&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%AF%E3%83%BC%E3%83%AB%E3%83%89%E3%81%AE%E6%96%B0%E8%A6%8F%E4%BD%9C%E6%88%90&quot; aria-label=&quot;ワールドの新規作成 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ワールドの新規作成&lt;/h2&gt;&lt;p&gt;autocreateオプションにはワールドサイズを数値で指定する（1: Small, 2: Medium, 3: Large）。
ここではSmallを指定している。&lt;/p&gt;&lt;p&gt;環境変数WORLD_FILENAMEが設定されていると実行に失敗するので、&lt;code&gt;-e WORLD_FILENAME=&lt;/code&gt;で外しておく。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;docker-compose run --rm -e WORLD_FILENAME= terraria -world /root/.local/share/Terraria/Worlds/MyWorldName.wld -autocreate 1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;作成完了後、サーバが起動し、サーバコンソールが開く。&lt;/p&gt;&lt;p&gt;バックグラウンド起動にするため、ここでは一旦サーバを停止しておく。&lt;/p&gt;&lt;h2 id=&quot;サーバの起動&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%B5%E3%83%BC%E3%83%90%E3%81%AE%E8%B5%B7%E5%8B%95&quot; aria-label=&quot;サーバの起動 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;サーバの起動&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;docker-compose up -d
docker-compose logs -f

tail -f data/logs/*.log
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;サーバコンソールを開く&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%B5%E3%83%BC%E3%83%90%E3%82%B3%E3%83%B3%E3%82%BD%E3%83%BC%E3%83%AB%E3%82%92%E9%96%8B%E3%81%8F&quot; aria-label=&quot;サーバコンソールを開く permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;サーバコンソールを開く&lt;/h2&gt;&lt;p&gt;Dockerコンテナ名を調べる。ここでは、&lt;code&gt;tshock_terraria_1&lt;/code&gt;とする。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;docker-compose ps
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以下コマンドでサーバコンソールが開く。
Ctrl+cするとサーバが停止してしまうので、脱出するときはCtrl+p Ctrl+qを押す。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;docker attach tshock_terraria_1
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;設定権限の変更&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E8%A8%AD%E5%AE%9A%E6%A8%A9%E9%99%90%E3%81%AE%E5%A4%89%E6%9B%B4&quot; aria-label=&quot;設定権限の変更 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;設定・権限の変更&lt;/h2&gt;&lt;p&gt;TShockにはバニラと異なる細かいデフォルト設定や権限機能があるので注意。
設定では、デフォルトで初期スポーン地点保護が有効化、墓生成が無効化されている。
権限では、デフォルトでNPCの部屋割り当て、ボス召喚などが無効化されている。
また、TShockのバージョンによってコマンドや設定方法に差異がある。&lt;/p&gt;&lt;h3 id=&quot;dataworldsconfigjson&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#dataworldsconfigjson&quot; aria-label=&quot;dataworldsconfigjson permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;./data/worlds/config.json&lt;/h3&gt;&lt;h4 id=&quot;serverpassword&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#serverpassword&quot; aria-label=&quot;serverpassword permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ServerPassword&lt;/h4&gt;&lt;p&gt;サーバアクセス時に入力を要求するパスワード&lt;/p&gt;&lt;h4 id=&quot;spawnprotection&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#spawnprotection&quot; aria-label=&quot;spawnprotection permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SpawnProtection&lt;/h4&gt;&lt;p&gt;初期スポーン保護&lt;/p&gt;&lt;h4 id=&quot;disabletombstones&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#disabletombstones&quot; aria-label=&quot;disabletombstones permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DisableTombstones&lt;/h4&gt;&lt;p&gt;死亡時の墓生成の無効化&lt;/p&gt;&lt;h3 id=&quot;権限の変更&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E6%A8%A9%E9%99%90%E3%81%AE%E5%A4%89%E6%9B%B4&quot; aria-label=&quot;権限の変更 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;権限の変更&lt;/h3&gt;&lt;p&gt;TShockサーバにはゲームキャラクタと独立したアカウントの概念があり、ユーザの権限はアカウントが属するグループに基づく。&lt;/p&gt;&lt;p&gt;サーバ初回起動時に生成される&lt;code&gt;./data/worlds/setup-code.txt&lt;/code&gt;内のパスワードを使い、&lt;code&gt;/setup &amp;lt;setup-code&amp;gt;&lt;/code&gt;を実行することで、一時的に最高権限のsuperadminになる。&lt;/p&gt;&lt;p&gt;ここで自分のアカウントにsuperadmin権限を付与すれば、&lt;code&gt;/login&lt;/code&gt;で自分のアカウントにログインしたときに最高権限になる。Setup Codeは一度しか使えないため注意。&lt;/p&gt;&lt;p&gt;superadmin不在でsetup codeを失った場合、サーバコンソールを使うか、TShockのDBを直接編集してsuperadmin権限を付与する。&lt;/p&gt;&lt;h4 id=&quot;全ユーザへの主要な制限の解除&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E5%85%A8%E3%83%A6%E3%83%BC%E3%82%B6%E3%81%B8%E3%81%AE%E4%B8%BB%E8%A6%81%E3%81%AA%E5%88%B6%E9%99%90%E3%81%AE%E8%A7%A3%E9%99%A4&quot; aria-label=&quot;全ユーザへの主要な制限の解除 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;全ユーザへの主要な制限の解除&lt;/h4&gt;&lt;p&gt;大規模サーバでは負荷や荒らし等が問題になるかもしれないので、身内サーバ向けの設定。&lt;/p&gt;&lt;p&gt;guestグループは非ログインユーザを含むユーザ、defaultグループはログイン済みユーザ。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-terraria&quot;&gt;group addperm guest tshock.ignore.*
group addperm guest tshock.tp.rod
group addperm guest tshock.world.editspawn
group addperm guest tshock.npc.summonboss
group addperm guest tshock.world.movenpc
group addperm guest tshock.npc.hurttown
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/Terraria/comments/354yle/tshock_help_turning_off_all_restrictions/&quot;&gt;https://www.reddit.com/r/Terraria/comments/354yle/tshock_help_turning_off_all_restrictions/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://tshock.readme.io/docs/permissions&quot;&gt;https://tshock.readme.io/docs/permissions&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://ch.nicovideo.jp/owenhousou/blomaga/ar580919&quot;&gt;https://ch.nicovideo.jp/owenhousou/blomaga/ar580919&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://web.archive.org/web/20210821201236/https://ch.nicovideo.jp/owenhousou/blomaga/ar580919&quot;&gt;https://web.archive.org/web/20210821201236/https://ch.nicovideo.jp/owenhousou/blomaga/ar580919&lt;/a&gt; （ニコニコユーザブロマガがサービス終了するのでアーカイブ）&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[GitHub Actions, DockerイメージをビルドしてDocker Hubにpushする（アクセストークン）]]></title><description><![CDATA[GitHub Actions, DockerイメージをビルドしてDocker Hubにpushする（アクセストークン） Docker Hubにアクセストークンを追加する。 https://hub.docker.com/settings/security…]]></description><link>https://blog.aoirint.com2021/github_actions_docker_io_token/</link><guid isPermaLink="false">https://blog.aoirint.com2021/github_actions_docker_io_token/</guid><pubDate>Sat, 10 Jul 2021 01:10:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;github-actions-dockerイメージをビルドしてdocker-hubにpushするアクセストークン&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#github-actions-docker%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%82%92%E3%83%93%E3%83%AB%E3%83%89%E3%81%97%E3%81%A6docker-hub%E3%81%ABpush%E3%81%99%E3%82%8B%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E3%83%88%E3%83%BC%E3%82%AF%E3%83%B3&quot; aria-label=&quot;github actions dockerイメージをビルドしてdocker hubにpushするアクセストークン permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GitHub Actions, DockerイメージをビルドしてDocker Hubにpushする（アクセストークン）&lt;/h1&gt;&lt;p&gt;Docker Hubにアクセストークンを追加する。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://hub.docker.com/settings/security&quot;&gt;https://hub.docker.com/settings/security&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;リポジトリのSettingsから、Secretsを開き、New repository secretから
&lt;code&gt;DOCKER_USERNAME&lt;/code&gt;、&lt;code&gt;DOCKER_PASSWORD&lt;/code&gt;を追加する。&lt;/p&gt;&lt;p&gt;&lt;code&gt;DOCKER_USERNAME&lt;/code&gt;はDocker Hub上のユーザ名、
&lt;code&gt;DOCKER_PASSWORD&lt;/code&gt;はアクセストークンを設定する。&lt;/p&gt;&lt;p&gt;以下のファイルをリポジトリに追加する（ファイル名&lt;code&gt;docker.yml&lt;/code&gt;は変更可）。&lt;/p&gt;&lt;p&gt;mainブランチにgit pushされたとき、Dockerイメージのビルドが走り、イメージがDocker Hubにdocker pushされる。&lt;/p&gt;&lt;h2 id=&quot;githubworkflowsdockeryml&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#githubworkflowsdockeryml&quot; aria-label=&quot;githubworkflowsdockeryml permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.github/workflows/docker.yml&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;#!yaml
name: Push to Docker registry

on:
  push:
    branches:
      - main

jobs:
  push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_REGISTRY_URL: docker.io

      - name: Build :latest
        if: success()
        run: docker build -t username/imagename:latest .

      - name: Deploy :latest
        if: success()
        uses: actions-hub/docker@master
        with:
          args: push username/imagename:latest
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[GoogleサービスのURLでユーザアカウントを指定する（?authuser=email）]]></title><description><![CDATA[GoogleサービスのURLでユーザアカウントを指定する Googleサービスでは、URL中の /u/0/ や /u/1/ の数値部分を書き換えることで、ログイン順に基づいてユーザの切り替えができる。しかし、ログイン順の異なる端末間でURL…]]></description><link>https://blog.aoirint.com2021/google_authuser_link/</link><guid isPermaLink="false">https://blog.aoirint.com2021/google_authuser_link/</guid><pubDate>Thu, 01 Jul 2021 04:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;googleサービスのurlでユーザアカウントを指定する&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#google%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AEurl%E3%81%A7%E3%83%A6%E3%83%BC%E3%82%B6%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%99%E3%82%8B&quot; aria-label=&quot;googleサービスのurlでユーザアカウントを指定する permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GoogleサービスのURLでユーザアカウントを指定する&lt;/h1&gt;&lt;p&gt;Googleサービスでは、URL中の&lt;code&gt;/u/0/&lt;/code&gt;や&lt;code&gt;/u/1/&lt;/code&gt;の数値部分を書き換えることで、ログイン順に基づいてユーザの切り替えができる。しかし、ログイン順の異なる端末間でURLをブックマークしたい場合などに不便である。&lt;/p&gt;&lt;p&gt;メールアドレスを指定してユーザを切り替えるには、
URLのGETパラメータに&lt;code&gt;authuser=mail@example.com&lt;/code&gt;のようにGoogleアカウントのメールアドレスを記述する。&lt;/p&gt;&lt;h2 id=&quot;google-classroom&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#google-classroom&quot; aria-label=&quot;google classroom permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Google Classroom&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://classroom.google.com/c/CLASS_ID?authuser=mail@example.com&quot;&gt;https://classroom.google.com/c/CLASS_ID?authuser=mail@example.com&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;gmail&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#gmail&quot; aria-label=&quot;gmail permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gmail&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://mail.google.com/?authuser=mail@example.com&quot;&gt;https://mail.google.com/?authuser=mail@example.com&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Makefile Tips]]></title><description><![CDATA[Makefile Tips Makefileのあるディレクトリの絶対パスを取得する $(pwd) や相対パスでは、 make コマンドの実行ディレクトリが基準になってしまう。 Makefile の実体があるディレクトリを基準としたいときは、以下のようにROOT_DIR…]]></description><link>https://blog.aoirint.com2021/makefile_tips/</link><guid isPermaLink="false">https://blog.aoirint.com2021/makefile_tips/</guid><pubDate>Thu, 01 Jul 2021 04:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;makefile-tips&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#makefile-tips&quot; aria-label=&quot;makefile tips permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Makefile Tips&lt;/h1&gt;&lt;h2 id=&quot;makefileのあるディレクトリの絶対パスを取得する&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#makefile%E3%81%AE%E3%81%82%E3%82%8B%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%81%AE%E7%B5%B6%E5%AF%BE%E3%83%91%E3%82%B9%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B&quot; aria-label=&quot;makefileのあるディレクトリの絶対パスを取得する permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Makefileのあるディレクトリの絶対パスを取得する&lt;/h2&gt;&lt;p&gt;&lt;code&gt;$(pwd)&lt;/code&gt;や相対パスでは、&lt;code&gt;make&lt;/code&gt;コマンドの実行ディレクトリが基準になってしまう。&lt;code&gt;Makefile&lt;/code&gt;の実体があるディレクトリを基準としたいときは、以下のようにROOT_DIRを定義する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-makefile&quot;&gt;ROOT_DIR = $(dir $(realpath $(firstword $(MAKEFILE_LIST))))
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;エラー時に処理を続行する&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%A8%E3%83%A9%E3%83%BC%E6%99%82%E3%81%AB%E5%87%A6%E7%90%86%E3%82%92%E7%B6%9A%E8%A1%8C%E3%81%99%E3%82%8B&quot; aria-label=&quot;エラー時に処理を続行する permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;エラー時に処理を続行する&lt;/h2&gt;&lt;p&gt;コマンドの前に&lt;code&gt;-&lt;/code&gt;（ハイフン）をつける。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-makefile&quot;&gt;.PHONY: cmd
cmd:
    ls
    -fail_command a b c
    ls
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;インデントはスペースではなくタブを使う&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%A4%E3%83%B3%E3%83%87%E3%83%B3%E3%83%88%E3%81%AF%E3%82%B9%E3%83%9A%E3%83%BC%E3%82%B9%E3%81%A7%E3%81%AF%E3%81%AA%E3%81%8F%E3%82%BF%E3%83%96%E3%82%92%E4%BD%BF%E3%81%86&quot; aria-label=&quot;インデントはスペースではなくタブを使う permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;インデントはスペースではなくタブを使う&lt;/h2&gt;&lt;p&gt;vimrcで&lt;code&gt;set expandtab&lt;/code&gt;している場合にひっかかる。&lt;/p&gt;&lt;p&gt;以下で一時的に解除するか、vimrcで&lt;code&gt;set expandtab&lt;/code&gt;するのをやめる、もしくはvimrcでファイル名による分岐で設定する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot;&gt;:set noexpandtab
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;vimrc&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#vimrc&quot; aria-label=&quot;vimrc permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.vimrc&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot;&gt;set expandtab

let _filename = expand(&amp;#x27;%:r&amp;#x27;)
if _filename == &amp;#x27;Makefile&amp;#x27;
  set noexpandtab
endif
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/Lacty/items/23a89d2b999cb0e9fae1&quot;&gt;vimでMakefileだけTabスペースではなくTabとして入力する - Qiita&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;ファイルの存在に関係なくターゲットを実行する&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E5%AD%98%E5%9C%A8%E3%81%AB%E9%96%A2%E4%BF%82%E3%81%AA%E3%81%8F%E3%82%BF%E3%83%BC%E3%82%B2%E3%83%83%E3%83%88%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B&quot; aria-label=&quot;ファイルの存在に関係なくターゲットを実行する permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ファイルの存在に関係なくターゲットを実行する&lt;/h2&gt;&lt;p&gt;Makeは本来Cのコンパイルなどに使うとき、ターゲット名に一致するファイルが存在している場合に処理をスキップするようになっている。&lt;/p&gt;&lt;p&gt;一方で、&lt;code&gt;build&lt;/code&gt;というターゲット名を使って、呼び出しのたびにコマンドを実行したいが、&lt;code&gt;build&lt;/code&gt;ディレクトリが存在するような場合に困る。&lt;/p&gt;&lt;p&gt;スキップさせないようにするには、&lt;code&gt;.PHONY: ターゲット名&lt;/code&gt;を記述する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-makefile&quot;&gt;.PHONY: cmd
cmd:
    ls
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[透過プロキシ（macOS, go-transproxy）]]></title><description><![CDATA[透過プロキシ（macOS） 環境変数 シェル起動時にネットワーク設定からプロキシ設定を環境変数に読み出すようにしている場合、GUIで設定すればOK。 NO_PROXYには必ずlocalhost/ローカルループバックアドレスを設定しておくこと（無限ループする）。 ビルド https…]]></description><link>https://blog.aoirint.com2021/transproxy_macos/</link><guid isPermaLink="false">https://blog.aoirint.com2021/transproxy_macos/</guid><pubDate>Mon, 21 Jun 2021 09:40:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;透過プロキシmacos&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E9%80%8F%E9%81%8E%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7macos&quot; aria-label=&quot;透過プロキシmacos permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;透過プロキシ（macOS）&lt;/h1&gt;&lt;h2 id=&quot;環境変数&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E7%92%B0%E5%A2%83%E5%A4%89%E6%95%B0&quot; aria-label=&quot;環境変数 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;環境変数&lt;/h2&gt;&lt;p&gt;シェル起動時にネットワーク設定からプロキシ設定を環境変数に読み出すようにしている場合、GUIで設定すればOK。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;export HTTP_PROXY=http://proxy.example.com:8080/
export HTTPS_PROXY=http://proxy.example.com:8080/
export NO_PROXY=localhost,127.0.0.0/8,::1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;NO_PROXYには必ずlocalhost/ローカルループバックアドレスを設定しておくこと（無限ループする）。&lt;/p&gt;&lt;h2 id=&quot;ビルド&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%93%E3%83%AB%E3%83%89&quot; aria-label=&quot;ビルド permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ビルド&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/wadahiro/go-transproxy&quot;&gt;https://github.com/wadahiro/go-transproxy&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;git clone https://github.com/wadahiro/go-transproxy.git
cd go-transproxy/
make

ls go-transproxy/bin/transproxy

# check network device name
ifconfig
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;transproxypfconf&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#transproxypfconf&quot; aria-label=&quot;transproxypfconf permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;~/transproxy/pf.conf&lt;/h2&gt;&lt;p&gt;MacBookの無線LANカード：&lt;code&gt;en0&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Mac miniなどの場合はNIC名が異なる場合があるので注意。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-pf&quot;&gt;Packets = &amp;quot;proto tcp from en0 to {!192.168.0.0/16}&amp;quot;
rdr pass log on lo0 $Packets port 80 -&amp;gt; 127.0.0.1 port 3129
rdr pass log on lo0 $Packets port 443 -&amp;gt; 127.0.0.1 port 3130
pass out on en0 route-to lo0 inet $Packets port {80, 443} keep state
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;有効化&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E6%9C%89%E5%8A%B9%E5%8C%96&quot; aria-label=&quot;有効化 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;有効化&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo pfctl -ef ~/transproxy/pf.conf
transproxy -disable-iptables
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;無効化&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E7%84%A1%E5%8A%B9%E5%8C%96&quot; aria-label=&quot;無効化 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;無効化&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# stop transproxy process (Ctrl+C)

# reset pf configs
sudo pfctl -df /etc/pf.conf
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/informationsea/items/094146d0a811f3edc96b&quot;&gt;Macでプロキシとの戦いに疲れたので、透過型プロキシを導入してみた - Qiita&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[透過プロキシ（Ubuntu, go-transproxy）]]></title><description><![CDATA[透過プロキシ（Ubuntu, go-transproxy） /etc/sudoers 環境変数 NO_PROXYには必ずlocalhost/ローカルループバックアドレスを設定しておくこと（無限ループする）。 デスクトップの場合はGUI設定でOK。 /usr/local/bin…]]></description><link>https://blog.aoirint.com2021/transproxy_ubuntu/</link><guid isPermaLink="false">https://blog.aoirint.com2021/transproxy_ubuntu/</guid><pubDate>Mon, 21 Jun 2021 09:10:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;透過プロキシubuntu-go-transproxy&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E9%80%8F%E9%81%8E%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7ubuntu-go-transproxy&quot; aria-label=&quot;透過プロキシubuntu go transproxy permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;透過プロキシ（Ubuntu, go-transproxy）&lt;/h1&gt;&lt;h2 id=&quot;etcsudoers&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#etcsudoers&quot; aria-label=&quot;etcsudoers permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/etc/sudoers&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-sudoers&quot;&gt;Defaults        env_keep+=&amp;quot;HTTP_PROXY&amp;quot;
Defaults        env_keep+=&amp;quot;HTTPS_PROXY&amp;quot;
Defaults        env_keep+=&amp;quot;NO_PROXY&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;環境変数&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E7%92%B0%E5%A2%83%E5%A4%89%E6%95%B0&quot; aria-label=&quot;環境変数 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;環境変数&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;export HTTP_PROXY=http://proxy.example.com:8080/
export HTTPS_PROXY=http://proxy.example.com:8080/
export NO_PROXY=localhost,127.0.0.0/8,::1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;NO_PROXYには必ずlocalhost/ローカルループバックアドレスを設定しておくこと（無限ループする）。&lt;/p&gt;&lt;p&gt;デスクトップの場合はGUI設定でOK。&lt;/p&gt;&lt;h2 id=&quot;usrlocalbintransproxy&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#usrlocalbintransproxy&quot; aria-label=&quot;usrlocalbintransproxy permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/usr/local/bin/transproxy&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/wadahiro/go-transproxy&quot;&gt;https://github.com/wadahiro/go-transproxy&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;usrlocalbintransproxy-start&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#usrlocalbintransproxy-start&quot; aria-label=&quot;usrlocalbintransproxy start permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/usr/local/bin/transproxy-start&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;#!/bin/bash

set -eu

# iptables -t nat -I OUTPUT -p tcp --dport 53 -j REDIRECT --to-ports 3131
# iptables -t nat -I OUTPUT -p udp --dport 53 -j REDIRECT --to-ports 3131
iptables -t nat -I OUTPUT -p tcp --dport 80 -j REDIRECT --to-ports 3129
iptables -t nat -I OUTPUT -p tcp --dport 443 -j REDIRECT --to-ports 3130

transproxy -disable-iptables # -dns-over-https-enabled
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;usrlocalbintransproxy-stop&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#usrlocalbintransproxy-stop&quot; aria-label=&quot;usrlocalbintransproxy stop permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/usr/local/bin/transproxy-stop&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;#!/bin/bash

set -eu

# iptables -t nat -D OUTPUT -p tcp --dport 53 -j REDIRECT --to-ports 3131
# iptables -t nat -D OUTPUT -p udp --dport 53 -j REDIRECT --to-ports 3131
iptables -t nat -D OUTPUT -p tcp --dport 443 -j REDIRECT --to-ports 3130
iptables -t nat -D OUTPUT -p tcp --dport 80 -j REDIRECT --to-ports 3129
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;iptablesのルールを書き換えるため、実行時にはroot権限が必要。&lt;/p&gt;&lt;p&gt;sudoで実行すれば、/etc/sudoersの設定から現在のシェルの環境変数が引き継がれる（-Eオプションでもいいが）。&lt;/p&gt;&lt;p&gt;transproxyは内部で環境変数からプロキシ設定を読み出し、透過プロキシサーバを立てる。&lt;/p&gt;&lt;h2 id=&quot;自動起動設定-etcsystemdsystemtransproxyservice&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E8%87%AA%E5%8B%95%E8%B5%B7%E5%8B%95%E8%A8%AD%E5%AE%9A-etcsystemdsystemtransproxyservice&quot; aria-label=&quot;自動起動設定 etcsystemdsystemtransproxyservice permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;自動起動設定 /etc/systemd/system/transproxy.service&lt;/h2&gt;&lt;p&gt;常時プロキシに接続する端末ではOS起動時に実行されるようにしておくと便利。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-systemd&quot;&gt;[Unit]
Description=transproxy

[Service]
Environment=HTTP_PROXY=http://proxy.example.com:8080/
Environment=HTTPS_PROXY=http://proxy.example.com:8080/
Environment=NO_PROXY=localhost,127.0.0.0/8,::1
ExecStart=/usr/local/bin/transproxy-start
ExecStop=/usr/local/bin/transproxy-stop
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target

&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[bind9]]></title><description><![CDATA[bind9 使用中のDNSサーバの確認 クライアントに設定されているDNSサーバは nmcli コマンドで確認できる。 Command-line to list DNS servers used by my system - Ask Ubuntu 用語 BIND DNS…]]></description><link>https://blog.aoirint.com2021/bind9/</link><guid isPermaLink="false">https://blog.aoirint.com2021/bind9/</guid><pubDate>Tue, 08 Jun 2021 16:30:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;bind9&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#bind9&quot; aria-label=&quot;bind9 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;bind9&lt;/h1&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;server$ sudo apt install bind9
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;使用中のdnsサーバの確認&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E4%BD%BF%E7%94%A8%E4%B8%AD%E3%81%AEdns%E3%82%B5%E3%83%BC%E3%83%90%E3%81%AE%E7%A2%BA%E8%AA%8D&quot; aria-label=&quot;使用中のdnsサーバの確認 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;使用中のDNSサーバの確認&lt;/h2&gt;&lt;p&gt;クライアントに設定されているDNSサーバは&lt;code&gt;nmcli&lt;/code&gt;コマンドで確認できる。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ nmcli device show | grep DNS
IP4.DNS[1]:                             8.8.8.8
IP4.DNS[2]:                             8.8.4.4
IP4.DNS[3]:                             1.1.1.1
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://askubuntu.com/questions/152593/command-line-to-list-dns-servers-used-by-my-system&quot;&gt;Command-line to list DNS servers used by my system - Ask Ubuntu&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;用語&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E7%94%A8%E8%AA%9E&quot; aria-label=&quot;用語 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;用語&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://cos.linux-dvr.biz/archives/category/bind-dns%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E6%A7%8B%E7%AF%89&quot;&gt;BIND DNSサーバー構築 | CentOSサーバー構築入門&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;コンテンツサーバ権威サーバ&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%B3%E3%83%B3%E3%83%86%E3%83%B3%E3%83%84%E3%82%B5%E3%83%BC%E3%83%90%E6%A8%A9%E5%A8%81%E3%82%B5%E3%83%BC%E3%83%90&quot; aria-label=&quot;コンテンツサーバ権威サーバ permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;コンテンツサーバ（権威サーバ）&lt;/h3&gt;&lt;p&gt;あるゾーン（DNSにおける名前の管理単位）に関する名前解決要求（非再帰問い合わせ）を受け取り、自身が管理するゾーンならば名前解決結果を、委任情報を持つゾーンならば委任先の権威サーバ情報を応答する。&lt;/p&gt;&lt;p&gt;ルートゾーン（FQDN: &lt;code&gt;.&lt;/code&gt;）を管理するルートサーバは、TLD（例えば &lt;code&gt;jp.&lt;/code&gt;）の権威サーバへの委任情報を持つ。&lt;/p&gt;&lt;p&gt;ゾーン情報において、NSレコードにより指定される。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://jprs.jp/glossary/index.php?ID=0155&quot;&gt;JPRS用語辞典｜ルートゾーン&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://jprs.jp/glossary/index.php?ID=0145&quot;&gt;JPRS用語辞典｜権威サーバー（権威DNSサーバー）&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://jprs.jp/glossary/index.php?ID=0157&quot;&gt;JPRS用語辞典｜ネームサーバー（DNSサーバー）&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;キャッシュサーバフルサービスリゾルバ&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%AD%E3%83%A3%E3%83%83%E3%82%B7%E3%83%A5%E3%82%B5%E3%83%BC%E3%83%90%E3%83%95%E3%83%AB%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%83%AA%E3%82%BE%E3%83%AB%E3%83%90&quot; aria-label=&quot;キャッシュサーバフルサービスリゾルバ permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;キャッシュサーバ（フルサービスリゾルバ）&lt;/h3&gt;&lt;p&gt;クライアントから名前解決要求（再帰問い合わせ）を受け取り、
コンテンツサーバへ反復的に名前解決要求（反復問い合わせ）を送ることで任意のドメイン名の名前解決を行う。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://jprs.jp/glossary/index.php?ID=0158&quot;&gt;JPRS用語辞典｜フルサービスリゾルバー（キャッシュDNSサーバー）&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;例えば&lt;code&gt;hoge.example.jp.&lt;/code&gt;というドメインの名前解決要求を受け取ったとき、
ルートサーバ&lt;code&gt;.&lt;/code&gt;への非再帰問い合わせにより&lt;code&gt;jp.&lt;/code&gt;権威サーバへの委任情報を取得する。
&lt;code&gt;jp.&lt;/code&gt;権威サーバへの非再帰問い合わせにより&lt;code&gt;example.jp.&lt;/code&gt;権威サーバへの委任情報を取得する。
&lt;code&gt;example.jp.&lt;/code&gt;権威サーバへの非再帰問い合わせにより&lt;code&gt;hoge.example.jp.&lt;/code&gt;のIPアドレスを取得する、のような流れで反復的に問い合わせを行うことで&lt;code&gt;hoge.example.jp.&lt;/code&gt;の名前解決を行う。&lt;/p&gt;&lt;p&gt;ISPの提供するDNSサーバや会社などの組織内DNSサーバ、GoogleやCloudflareなどが提供するパブリックDNSがある。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://ascii.jp/elem/000/000/463/463076/&quot;&gt;ASCII.jp：DNSによる名前解決の仕組みを理解しよう (1/2)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;回送&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E5%9B%9E%E9%80%81&quot; aria-label=&quot;回送 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;回送&lt;/h3&gt;&lt;p&gt;プロキシのように、受け取った名前解決要求を他のDNSサーバに送り、
応答を返す。&lt;/p&gt;&lt;h2 id=&quot;etcbindnamedconfoptions&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#etcbindnamedconfoptions&quot; aria-label=&quot;etcbindnamedconfoptions permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/etc/bind/named.conf.options&lt;/h2&gt;&lt;p&gt;自身が管理していない情報（ゾーン、委任情報）に関する問い合わせについて、
他のDNSサーバ（フルサービスリゾルバ）に問い合わせを回送するように設定する。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.atmarkit.co.jp/ait/articles/1510/28/news013.html&quot;&gt;「再帰問い合わせ」と「非再帰問い合わせ」の違いを教えてください：DNS Tips - ＠IT&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://cos.linux-dvr.biz/archives/category/bind-dns%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E6%A7%8B%E7%AF%89&quot;&gt;BIND DNSサーバー構築 | CentOSサーバー構築入門&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://ddns.blog.jp/archives/13568266.html&quot;&gt;フォワード（回送） : お父さんのためのDNS講座&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;デフォルト設定ファイル&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%87%E3%83%95%E3%82%A9%E3%83%AB%E3%83%88%E8%A8%AD%E5%AE%9A%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB&quot; aria-label=&quot;デフォルト設定ファイル permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;デフォルト設定ファイル&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-bind&quot;&gt;options {
        directory &amp;quot;/var/cache/bind&amp;quot;;

        // If there is a firewall between you and nameservers you want
        // to talk to, you may need to fix the firewall to allow multiple
        // ports to talk.  See http://www.kb.cert.org/vuls/id/800113

        // If your ISP provided one or more IP addresses for stable
        // nameservers, you probably want to use them as forwarders.
        // Uncomment the following block, and insert the addresses replacing
        // the all-0&amp;#x27;s placeholder.

        // forwarders {
        //      0.0.0.0;
        // };

        //========================================================================
        // If BIND logs error messages about the root key being expired,
        // you will need to update your keys.  See https://www.isc.org/bind-keys
        //========================================================================
        dnssec-validation auto;

        auth-nxdomain no;    # conform to RFC1035
        listen-on-v6 { any; };
};
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;変更点&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E5%A4%89%E6%9B%B4%E7%82%B9&quot; aria-label=&quot;変更点 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;変更点&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;forwarders {
        8.8.8.8;
        8.8.4.4;
        1.1.1.1;
};
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.isoroot.jp/blog/2929/&quot;&gt;初歩から解説！BINDでシンプルDNSサーバー構築【構築編】｜ 開発者ブログ ｜ 株式会社アイソルート&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;確認&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E7%A2%BA%E8%AA%8D&quot; aria-label=&quot;確認 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;確認&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;server$ systemctl restart bind9.service
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;client$ dig @192.168.x.x aoirint.com
...
;; ANSWER SECTION:
aoirint.com.        3600    IN  A   185.199.108.153
aoirint.com.        3600    IN  A   185.199.111.153
aoirint.com.        3600    IN  A   185.199.109.153
aoirint.com.        3600    IN  A   185.199.110.153
...
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/hana_shin/items/e99f64a01f2632b7a719&quot;&gt;digコマンドの使い方 - Qiita&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;etcbindnamedconflocal&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#etcbindnamedconflocal&quot; aria-label=&quot;etcbindnamedconflocal permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/etc/bind/named.conf.local&lt;/h2&gt;&lt;p&gt;DNSサーバの管理するゾーンの名前と対応する設定ファイル（ゾーンファイル）を設定する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bind&quot;&gt;//
// Do any local configuration here
//

zone &amp;quot;example.com&amp;quot; IN {
        type master;
        file &amp;quot;example.com.zone&amp;quot;;
};

// Consider adding the 1918 zones here, if they are not used in your
// organization
//include &amp;quot;/etc/bind/zones.rfc1918&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;varcachebindexamplecomzone&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#varcachebindexamplecomzone&quot; aria-label=&quot;varcachebindexamplecomzone permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/var/cache/bind/example.com.zone&lt;/h2&gt;&lt;p&gt;ゾーン情報を設定する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-zone&quot;&gt;$ORIGIN example.com.
$TTL    3600
  @       IN     SOA   dns.example.com.   root.example.com. (
    2021060900      ; Serial
    3600            ; Refresh
    900             ; Retry
    604800          ; Expire
    86400           ; Minimum
)

        IN     NS    dns.example.com.
dns     IN     A     192.168.xx.xx

@       IN     A     192.168.xx.xx
local   IN     A     192.168.xx.xx
dev     IN     A     192.168.xx.xx
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;server$ systemctl restart bind9.service
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;client$ dig @192.168.x.x example.com
...
;; ANSWER SECTION:
example.com.        3600    IN  A   192.168.xx.xx
...


client$ dig @192.168.x.x local.example.com
...
;; ANSWER SECTION:
local.example.com.      3600    IN  A   192.168.xx.xx
...


client$ dig @192.168.x.x dev.example.com
...
;; ANSWER SECTION:
dev.example.com.        3600    IN  A   192.168.xx.xx
...
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.isoroot.jp/blog/2929/&quot;&gt;初歩から解説！BINDでシンプルDNSサーバー構築【構築編】｜ 開発者ブログ ｜ 株式会社アイソルート&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.atmarkit.co.jp/ait/articles/0306/03/news002_2.html&quot;&gt;サブドメインの運用と委任：実用 BIND 9で作るDNSサーバ（6）（2/3 ページ） - ＠IT&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/m1220/items/e2093f8f5dc1a6ce9802&quot;&gt;bind9で内部向けDNS構築　（Ubuntu14.04 Server） - Qiita&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[npm startでError: ENOENT: no such file or directory ... .steampathで起動しないときの対処（React）]]></title><description><![CDATA[npm startでError: ENOENT: no such file or directory ... .steampathで起動しないときの対処（React） gitでブランチを切り替えて依存関係に差分が生じたとき、
node_modules…]]></description><link>https://blog.aoirint.com2021/npm_start_enoent_steampath/</link><guid isPermaLink="false">https://blog.aoirint.com2021/npm_start_enoent_steampath/</guid><pubDate>Fri, 04 Jun 2021 16:30:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;npm-startでerror-enoent-no-such-file-or-directory--steampathで起動しないときの対処react&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#npm-start%E3%81%A7error-enoent-no-such-file-or-directory--steampath%E3%81%A7%E8%B5%B7%E5%8B%95%E3%81%97%E3%81%AA%E3%81%84%E3%81%A8%E3%81%8D%E3%81%AE%E5%AF%BE%E5%87%A6react&quot; aria-label=&quot;npm startでerror enoent no such file or directory  steampathで起動しないときの対処react permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;npm startでError: ENOENT: no such file or directory ... .steampathで起動しないときの対処（React）&lt;/h1&gt;&lt;p&gt;gitでブランチを切り替えて依存関係に差分が生じたとき、
node_modulesを修正していないときに起きる。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Error: ENOENT: no such file or directory, stat &amp;#x27;/home/USER/.steampath&amp;#x27;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;package-lock.jsonがあれば、
package-lock.jsonに基づいて依存関係をインストールする&lt;code&gt;npm ci&lt;/code&gt;を実行する。&lt;/p&gt;&lt;p&gt;実行時に&lt;code&gt;node_modules&lt;/code&gt;ディレクトリの中身は削除され、再構築される。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm ci
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://docs.npmjs.com/cli/v7/commands/npm-ci&quot;&gt;https://docs.npmjs.com/cli/v7/commands/npm-ci&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/64962960/error-enoent-no-such-file-or-directory-stat-home-dylan-steampath&quot;&gt;https://stackoverflow.com/questions/64962960/error-enoent-no-such-file-or-directory-stat-home-dylan-steampath&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;package-lock.jsonがないときは、手動でnode_modulesを削除するのがよいかもしれない。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;rm -rf node_modules/
npm install
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ほかに、プログラムに構文エラーがあるときに起きることがある。この場合、&lt;code&gt;tsc&lt;/code&gt;でエラー箇所を調べて直す。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[npm startで構文エラーが消えないときの対処（React）]]></title><description><![CDATA[npm startで構文エラーが消えないときの対処（React） npm startで構文エラーが消えなくなることがある。 npm startでサーバを起動してコードの変更を監視したままの状態で、git…]]></description><link>https://blog.aoirint.com2021/npm_start_reset_cache/</link><guid isPermaLink="false">https://blog.aoirint.com2021/npm_start_reset_cache/</guid><pubDate>Fri, 04 Jun 2021 16:30:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;npm-startで構文エラーが消えないときの対処react&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#npm-start%E3%81%A7%E6%A7%8B%E6%96%87%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E6%B6%88%E3%81%88%E3%81%AA%E3%81%84%E3%81%A8%E3%81%8D%E3%81%AE%E5%AF%BE%E5%87%A6react&quot; aria-label=&quot;npm startで構文エラーが消えないときの対処react permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;npm startで構文エラーが消えないときの対処（React）&lt;/h1&gt;&lt;p&gt;npm startで構文エラーが消えなくなることがある。&lt;/p&gt;&lt;p&gt;npm startでサーバを起動してコードの変更を監視したままの状態で、gitでブランチを切り替えたときキャッシュが正しく更新されないことが原因と思われる。&lt;/p&gt;&lt;p&gt;キャッシュを破棄するには、&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm start -- --reset-cache
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;依存関係が変わっているとエラーの原因になるので、モジュールもインストールし直すのがよい。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm ci
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/kt3k/items/758c4f3595ffd7e74f9f&quot;&gt;https://qiita.com/kt3k/items/758c4f3595ffd7e74f9f&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Wiki.jsのセットアップ]]></title><description><![CDATA[Wiki.jsのセットアップ https://js.wiki/get-started 無料とは思えない多機能っぷりなWikiインフラ「Wiki.js」レビュー、自前でホスト＆外部サービスと連携可能 - GIGAZINE メモリ消費量 初期状態で150-200MiB…]]></description><link>https://blog.aoirint.com2021/wikijs/</link><guid isPermaLink="false">https://blog.aoirint.com2021/wikijs/</guid><pubDate>Mon, 31 May 2021 20:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;wikijsのセットアップ&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#wikijs%E3%81%AE%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97&quot; aria-label=&quot;wikijsのセットアップ permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Wiki.jsのセットアップ&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://js.wiki/get-started&quot;&gt;https://js.wiki/get-started&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://gigazine.net/news/20201003-wiki-js/&quot;&gt;無料とは思えない多機能っぷりなWikiインフラ「Wiki.js」レビュー、自前でホスト＆外部サービスと連携可能 - GIGAZINE&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;メモリ消費量&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%A1%E3%83%A2%E3%83%AA%E6%B6%88%E8%B2%BB%E9%87%8F&quot; aria-label=&quot;メモリ消費量 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;メモリ消費量&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ docker stats
CONTAINER ID   NAME            CPU %     MEM USAGE / LIMIT     MEM %     NET I/O           BLOCK I/O         PIDS
e225b6b77209   wikijs_wiki_1   0.01%     127.6MiB / 7.681GiB   1.62%     13.1MB / 22.7MB   44.5MB / 1.45MB   11
13d085313406   wikijs_db_1     0.00%     44.57MiB / 7.681GiB   0.57%     6.64MB / 4.09MB   4.27MB / 102MB    8
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;初期状態で150-200MiB程度の消費量と思われる。&lt;/p&gt;&lt;p&gt;下記の環境をサーバとして、別端末からNATループバックによる接続を試したところ、ページ遷移時のロードや記事の保存に少しだけ時間がかかるように思われたが、Wikiサイト自体がなかなか開かない、というような重さではなかった。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-plain&quot;&gt;CPU: Intel(R) Core(TM) i5-4570 CPU @ 3.20GHz
Memory: 8GB
Storage: SSD
OS: Ubuntu Desktop 18.04
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;docker-composeyaml&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker-composeyaml&quot; aria-label=&quot;docker composeyaml permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;docker-compose.yaml&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;version: &amp;quot;3.9&amp;quot;
services:
  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: wiki
      POSTGRES_PASSWORD: wikijsrocks
      POSTGRES_USER: wikijs
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/postgresql/data

  wiki:
    image: requarks/wiki:2
    depends_on:
      - db
    environment:
      DB_TYPE: postgres
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: wikijs
      DB_PASS: wikijsrocks
      DB_NAME: wiki
    restart: unless-stopped
    ports:
      - &amp;quot;127.0.0.1:8000:3000&amp;quot;

volumes:
  db-data:
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/requarks/wiki&quot;&gt;https://hub.docker.com/r/requarks/wiki&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://hub.docker.com/_/postgres&quot;&gt;https://hub.docker.com/_/postgres&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;基本的に初期設定で問題ない。&lt;/p&gt;&lt;p&gt;wikiサービスのポートの割り当てはホストのnginxからリバースプロキシすることを想定している。&lt;/p&gt;&lt;h2 id=&quot;初期設定&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A&quot; aria-label=&quot;初期設定 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;初期設定&lt;/h2&gt;&lt;p&gt;ポートにアクセスすると初期（管理者）アカウントの設定を求められる。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;images/wikijs_configure_first_account.png&quot; alt=&quot;wikijs_configure_first_account.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;管理者アカウント作成後、インデックスページの作成を求められる。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;images/wikijs_first_page_1.png&quot; alt=&quot;wikijs_first_page_1.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;images/wikijs_first_page_2.png&quot; alt=&quot;wikijs_first_page_2.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;images/wikijs_first_page_3.png&quot; alt=&quot;wikijs_first_page_3.png&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;ロケール&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%AD%E3%82%B1%E3%83%BC%E3%83%AB&quot; aria-label=&quot;ロケール permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ロケール&lt;/h2&gt;&lt;p&gt;Wikiページの言語にあたる、ロケールの設定が悩ましいところ。&lt;/p&gt;&lt;p&gt;言語を変えるとUIの言語だけでなくページ作成時のデフォルトURLプレフィクス（&lt;code&gt;/en/PAGE&lt;/code&gt;とか&lt;code&gt;/ja/PAGE&lt;/code&gt;）が変わる。&lt;/p&gt;&lt;p&gt;マニュアル用のスクリーンショットは&lt;code&gt;en&lt;/code&gt;で撮りたいが、ページの言語は&lt;code&gt;ja&lt;/code&gt;なのでプレフィクスは&lt;code&gt;/ja&lt;/code&gt;にしたい、というのは都度切り替えないとできないかもしれない。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;images/wikijs_locale_en.png&quot; alt=&quot;wikijs_locale_en.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;images/wikijs_locale_ja.png&quot; alt=&quot;wikijs_locale_ja.png&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;非公開wiki&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E9%9D%9E%E5%85%AC%E9%96%8Bwiki&quot; aria-label=&quot;非公開wiki permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;非公開Wiki&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://docs.requarks.io/groups&quot;&gt;https://docs.requarks.io/groups&lt;/a&gt; (&lt;code&gt;Guides &amp;gt; Private Wiki&lt;/code&gt;)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;管理画面の&lt;code&gt;Users &amp;gt; Groups &amp;gt; Guests&lt;/code&gt;のPermissionsをすべて無効にする。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;images/wikijs_users_groups.png&quot; alt=&quot;wikijs_users_groups.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;images/wikijs_group_permissions.png&quot; alt=&quot;wikijs_group_permissions.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;権限のないページを開くとUnauthorizedページが表示される。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;images/wikijs_unauthorized.png&quot; alt=&quot;wikijs_unauthorized.png&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;gitリポジトリによる管理&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#git%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AB%E3%82%88%E3%82%8B%E7%AE%A1%E7%90%86&quot; aria-label=&quot;gitリポジトリによる管理 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gitリポジトリによる管理&lt;/h2&gt;&lt;p&gt;管理画面の&lt;code&gt;Modules &amp;gt; Storage &amp;gt; Git&lt;/code&gt;から、WikiデータをリモートGitリポジトリにバックアップするように設定できる。
またバックアップだけでなく、Gitリポジトリ側の変更をpullすることもでき、双方向に変更をやり取りすることもできるらしい。&lt;/p&gt;&lt;p&gt;パフォーマンスの問題で、同期のタイミングはページ更新直後ではなく、タイマーで行われるので注意。&lt;/p&gt;&lt;p&gt;また、Bi-directionalの場合リモート側にあらかじめブランチを作成しておく必要がある。
これは空コミットでなくてもよい。
ブランチが存在しない場合、以下のエラーが発生する。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Invalid branch! Make sure it exists on the remote first.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Gitストレージを設定する前に投稿した記事や画像は変更が加えられるまで同期されない。
条件は不明だが、内部エラーの影響か一部の画像ファイルがバージョン管理されないことがあった。
再アップロードで解消するが若干の注意を要するかもしれない。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;images/wikijs_git_storage.png&quot; alt=&quot;wikijs_git_storage.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;Markdownページは、以下のようなYAMLヘッダ（Front Matter）がついたファイルとして保存される。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-plain&quot;&gt;---
title: Wiki.jsのセットアップ
description:
published: true
date: 2021-06-01T19:27:44.133Z
tags: wikijs, wiki
editor: markdown
dateCreated: 2021-06-01T18:48:16.731Z
---

# Wiki.jsのセットアップ

&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;github-pages&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#github-pages&quot; aria-label=&quot;github pages permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GitHub Pages&lt;/h2&gt;&lt;p&gt;そのままGitHub上でGitHub Pagesを有効にすれば、
デフォルト設定のJekyllで生成されたHTMLがホストされる。&lt;/p&gt;&lt;h2 id=&quot;リファラを送らない&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%AA%E3%83%95%E3%82%A1%E3%83%A9%E3%82%92%E9%80%81%E3%82%89%E3%81%AA%E3%81%84&quot; aria-label=&quot;リファラを送らない permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;リファラを送らない&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Site &amp;gt; Theme &amp;gt; Code Injection &amp;gt; Head HTML Injection&lt;/code&gt;に設定する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!-- Do not send referrer --&amp;gt;
&amp;lt;meta name=&amp;quot;referrer&amp;quot; content=&amp;quot;no-referrer&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[GitLab CI, DockerイメージをビルドしてContainer Registryにpushする]]></title><description><![CDATA[GitLab CI, DockerイメージをビルドしてContainer Registryにpushする リポジトリ構造 .gitlab-ci.yml app/ Dockerfile .gitlab-ci.yml]]></description><link>https://blog.aoirint.com2021/gitlab_ci_docker_registry/</link><guid isPermaLink="false">https://blog.aoirint.com2021/gitlab_ci_docker_registry/</guid><pubDate>Fri, 28 May 2021 17:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;gitlab-ci-dockerイメージをビルドしてcontainer-registryにpushする&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#gitlab-ci-docker%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%82%92%E3%83%93%E3%83%AB%E3%83%89%E3%81%97%E3%81%A6container-registry%E3%81%ABpush%E3%81%99%E3%82%8B&quot; aria-label=&quot;gitlab ci dockerイメージをビルドしてcontainer registryにpushする permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GitLab CI, DockerイメージをビルドしてContainer Registryにpushする&lt;/h1&gt;&lt;h2 id=&quot;リポジトリ構造&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E6%A7%8B%E9%80%A0&quot; aria-label=&quot;リポジトリ構造 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;リポジトリ構造&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;.gitlab-ci.yml&lt;/li&gt;&lt;li&gt;app/&lt;ul&gt;&lt;li&gt;Dockerfile&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;gitlab-ciyml&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#gitlab-ciyml&quot; aria-label=&quot;gitlab ciyml permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.gitlab-ci.yml&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;stages:
  - build

build:
  stage: build
  image: docker:20.10
  services:
    - docker:dind
  rules:
    - if: $CI_COMMIT_BRANCH == &amp;quot;main&amp;quot;
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build ./app -t $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[Atom Text Editor Setup]]></title><description><![CDATA[Atom Text Editor Setup GitHubが開発するElectron製高機能テキストエディタAtomをセットアップする。 Installation macOS, Windows https://atom.io/ Ubuntu https://flight…]]></description><link>https://blog.aoirint.com2021/atom_setup/</link><guid isPermaLink="false">https://blog.aoirint.com2021/atom_setup/</guid><pubDate>Thu, 13 May 2021 16:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;atom-text-editor-setup&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#atom-text-editor-setup&quot; aria-label=&quot;atom text editor setup permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Atom Text Editor Setup&lt;/h1&gt;&lt;p&gt;GitHubが開発するElectron製高機能テキストエディタAtomをセットアップする。&lt;/p&gt;&lt;h2 id=&quot;installation&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#installation&quot; aria-label=&quot;installation permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;&lt;h3 id=&quot;macos-windows&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#macos-windows&quot; aria-label=&quot;macos windows permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS, Windows&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/&quot;&gt;https://atom.io/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;ubuntu&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#ubuntu&quot; aria-label=&quot;ubuntu permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://flight-manual.atom.io/getting-started/sections/installing-atom/#platform-linux&quot;&gt;https://flight-manual.atom.io/getting-started/sections/installing-atom/#platform-linux&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;wget -qO - https://packagecloud.io/AtomEditor/atom/gpgkey | sudo apt-key add -
sudo sh -c &amp;#x27;echo &amp;quot;deb [arch=amd64] https://packagecloud.io/AtomEditor/atom/any/ any main&amp;quot; &amp;gt; /etc/apt/sources.list.d/atom.list&amp;#x27;
sudo apt update

sudo apt install atom
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;key-binding-resolver-ctrl--&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#key-binding-resolver-ctrl--&quot; aria-label=&quot;key binding resolver ctrl   permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key Binding Resolver (Ctrl + .)&lt;/h2&gt;&lt;p&gt;キーバインドが重複してどれが動いているかわからないときに便利。&lt;/p&gt;&lt;h2 id=&quot;packages&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#packages&quot; aria-label=&quot;packages permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Packages&lt;/h2&gt;&lt;p&gt;パッケージにより機能拡張ができる。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/&quot;&gt;https://atom.io/packages/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;GUIによる操作&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Install: Edit &amp;gt; Preferences &amp;gt; Install&lt;/li&gt;&lt;li&gt;Config: Edit &amp;gt; Preferences &amp;gt; Packages&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;CLIによる一括インストール&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# Export Package List
apm list -b -e -i --no-v &amp;gt; atom_packages.txt

# Import Package List and Install
apm install --packages-file atom_packages.txt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;おすすめパッケージリスト&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# atom_packages.txt

Sublime-Style-Column-Selection
atom-beautify
atom-ide-ui
autocomplete-python
convert-to-utf8
document-outline
file-icons
ide-python
ide-typescript
language-docker
language-graphql
language-julia
language-latex
language-nginx
latex
markdown-preview-plus
pdf-view
platformio-ide-terminal
project-manager
project-view
tree-view-git-status
language-haskell
ide-haskell
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;sublime-style-column-selection&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#sublime-style-column-selection&quot; aria-label=&quot;sublime style column selection permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sublime-Style-Column-Selection&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/sublime-style-column-selection&quot;&gt;sublime-style-column-selection&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Shift + 左ボタンドラッグで矩形選択ができる&lt;/p&gt;&lt;h3 id=&quot;atom-beautify&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#atom-beautify&quot; aria-label=&quot;atom beautify permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;atom-beautify&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/atom-beautify&quot;&gt;atom-beautify&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;デフォルトで入っているフォーマッタ&lt;/p&gt;&lt;h3 id=&quot;atom-ide-ui&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#atom-ide-ui&quot; aria-label=&quot;atom ide ui permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;atom-ide-ui&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/atom-ide-ui&quot;&gt;atom-ide-ui&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;IDE機能のコア&lt;/p&gt;&lt;h3 id=&quot;廃止atom-terminus&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E5%BB%83%E6%AD%A2atom-terminus&quot; aria-label=&quot;廃止atom terminus permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;（廃止）atom-terminus&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/atom-terminus&quot;&gt;atom-terminus&lt;/a&gt;&lt;/li&gt;&lt;li&gt;fork of &lt;a href=&quot;https://atom.io/packages/atom-terminal&quot;&gt;atom-terminal&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Ctrl + Shift + Tでターミナルウインドウを開く&lt;/p&gt;&lt;p&gt;追記：統合型のターミナルを使いたくなったので、platformio-ide-terminalを使うようになった。&lt;/p&gt;&lt;h3 id=&quot;autocomplete-python&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#autocomplete-python&quot; aria-label=&quot;autocomplete python permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;autocomplete-python&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/autocomplete-python&quot;&gt;autocomplete-python&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Python補完用（要Jedi or Kite）&lt;/p&gt;&lt;p&gt;Python Executable Paths: &lt;code&gt;/home/USER/.pyenv/shims/python&lt;/code&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;pip3 install jedi
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;convert-to-utf8&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#convert-to-utf8&quot; aria-label=&quot;convert to utf8 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;convert-to-utf8&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/convert-to-utf8&quot;&gt;convert-to-utf8&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;CP932やEUC-JPのテキストファイルをUTF-8に変換する&lt;/p&gt;&lt;h3 id=&quot;document-outline&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#document-outline&quot; aria-label=&quot;document outline permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;document-outline&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/document-outline&quot;&gt;document-outline&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;文書のアウトライン表示&lt;/p&gt;&lt;h3 id=&quot;file-icons&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#file-icons&quot; aria-label=&quot;file icons permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;file-icons&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/file-icons&quot;&gt;file-icons&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;ファイルアイコン表示&lt;/p&gt;&lt;h3 id=&quot;ide-python&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#ide-python&quot; aria-label=&quot;ide python permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ide-python&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/ide-python&quot;&gt;ide-python&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Python IDE機能&lt;/p&gt;&lt;p&gt;Python Executable: &lt;code&gt;/home/USER/.pyenv/shims/python&lt;/code&gt;&lt;/p&gt;&lt;h3 id=&quot;ide-typescript&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#ide-typescript&quot; aria-label=&quot;ide typescript permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ide-typescript&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/ide-typescript&quot;&gt;ide-typescript&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;TypeScript IDE機能&lt;/p&gt;&lt;p&gt;デフォルトで同梱されているTypeScriptが使われるが、バージョンが古いため設定を変える。
そのまま使うと、Reactで&lt;code&gt;Cannot use JSX unless the &amp;#x27;--jsx&amp;#x27; flag is provided&lt;/code&gt;などのエラーが出たり、
TypeScriptの新しい記法が構文エラーとして表示されることがある。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;npm set prefix ~/.node
npm install -g typescript
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;TypeScript server path: &lt;code&gt;/home/USER/.node/lib/node_modules/typescript/lib/tsserver.js&lt;/code&gt;&lt;/p&gt;&lt;h3 id=&quot;language-docker&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#language-docker&quot; aria-label=&quot;language docker permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;language-docker&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/language-docker&quot;&gt;language-docker&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Docker シンタックスハイライト&lt;/p&gt;&lt;h3 id=&quot;language-graphql&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#language-graphql&quot; aria-label=&quot;language graphql permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;language-graphql&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/language-graphql&quot;&gt;language-graphql&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;GraphQL シンタックスハイライト&lt;/p&gt;&lt;h3 id=&quot;language-julia&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#language-julia&quot; aria-label=&quot;language julia permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;language-julia&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/language-julia&quot;&gt;language-julia&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Julia シンタックスハイライト&lt;/p&gt;&lt;h3 id=&quot;language-latex&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#language-latex&quot; aria-label=&quot;language latex permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;language-latex&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/language-latex&quot;&gt;language-latex&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;LaTeX シンタックスハイライト&lt;/p&gt;&lt;h3 id=&quot;language-nginx&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#language-nginx&quot; aria-label=&quot;language nginx permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;language-nginx&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/language-nginx&quot;&gt;language-nginx&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;nginx シンタックスハイライト&lt;/p&gt;&lt;h3 id=&quot;latex&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#latex&quot; aria-label=&quot;latex permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;latex&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/latex&quot;&gt;latex&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;LaTeX ビルド&lt;/p&gt;&lt;p&gt;Dockerで動くようにする記事: &lt;a href=&quot;https://blog.aoirint.com/entry/2020/atom_latex_docker/&quot;&gt;https://blog.aoirint.com/entry/2020/atom_latex_docker/&lt;/a&gt;&lt;/p&gt;&lt;h3 id=&quot;markdown-preview-plus&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#markdown-preview-plus&quot; aria-label=&quot;markdown preview plus permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;markdown-preview-plus&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/markdown-preview-plus&quot;&gt;markdown-preview-plus&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Markdown プレビュー&lt;/p&gt;&lt;h3 id=&quot;pdf-view&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#pdf-view&quot; aria-label=&quot;pdf view permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pdf-view&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/pdf-view&quot;&gt;pdf-view&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;PDF プレビュー&lt;/p&gt;&lt;h3 id=&quot;platformio-ide-terminal&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#platformio-ide-terminal&quot; aria-label=&quot;platformio ide terminal permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;platformio-ide-terminal&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/platformio-ide-terminal&quot;&gt;platformio-ide-terminal&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;統合型のターミナル機能。&lt;/p&gt;&lt;p&gt;Windowsでは、シェルをGit Bashに変更する。&lt;/p&gt;&lt;p&gt;Animation Speedを0にする。&lt;/p&gt;&lt;h3 id=&quot;project-view&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#project-view&quot; aria-label=&quot;project view permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;project-view&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/project-view&quot;&gt;project-view&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;プロジェクトツリー（tree-view）にプロジェクトパスを表示&lt;/p&gt;&lt;h3 id=&quot;廃止project-viewer&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E5%BB%83%E6%AD%A2project-viewer&quot; aria-label=&quot;廃止project viewer permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;（廃止）project-viewer&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/project-viewer&quot;&gt;project-viewer&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;GUIで編集できるプロジェクト管理ツール&lt;/p&gt;&lt;p&gt;追記：画面がせまくなる、画面共有と相性が悪いので使わなくなった。&lt;/p&gt;&lt;h3 id=&quot;tree-view-git-status&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#tree-view-git-status&quot; aria-label=&quot;tree view git status permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tree-view-git-status&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/tree-view-git-status&quot;&gt;tree-view-git-status&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;tree-viewにGit status（ブランチなど）を表示&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Open JTalk in Docker]]></title><description><![CDATA[Open JTalk in Docker 以前にもOpen JTalkを触っていたが、時間が経った＆記事が雑だったのでDockerでまとめ直しておく。 Open JTalk - aoirint's note Dockerfileを作る。 mecab-naist-jdic…]]></description><link>https://blog.aoirint.com2021/open_jtalk/</link><guid isPermaLink="false">https://blog.aoirint.com2021/open_jtalk/</guid><pubDate>Sat, 03 Apr 2021 23:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;open-jtalk-in-docker&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#open-jtalk-in-docker&quot; aria-label=&quot;open jtalk in docker permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Open JTalk in Docker&lt;/h1&gt;&lt;p&gt;以前にもOpen JTalkを触っていたが、時間が経った＆記事が雑だったのでDockerでまとめ直しておく。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://aoirint.hatenablog.com/entry/2019/05/25/080329&quot;&gt;Open JTalk - aoirint&amp;#x27;s note&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Dockerfileを作る。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-dockerfile&quot;&gt;FROM ubuntu:bionic

RUN apt-get update &amp;amp;&amp;amp; \
    apt-get install -y \
        open-jtalk \
        open-jtalk-mecab-naist-jdic \
        hts-voice-nitech-jp-atr503-m001

WORKDIR /data
ENTRYPOINT [ &amp;quot;open_jtalk&amp;quot; ]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;mecab-naist-jdicは形態素解析辞書。
hts-voiceはボイスファイルだが、別途htsvoiceを用意する場合は不要。&lt;/p&gt;&lt;p&gt;ビルドする。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;docker build . -t aoirint/open_jtalk
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;実行する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;echo &amp;quot;こんにちは&amp;quot; &amp;gt; text.txt

# テキストファイルの文字列から音声を生成
docker run --rm -v &amp;quot;$PWD:/data&amp;quot; aoirint/open_jtalk -x /var/lib/mecab/dic/open-jtalk/naist-jdic/ -m /usr/share/hts-voice/nitech-jp-atr503-m001/nitech_jp_atr503_m001.htsvoice text.txt -ow output.wav

# 標準入力の文字列から音声を生成
cat text.txt | docker run --rm -i -v &amp;quot;$PWD:/data&amp;quot; aoirint/open_jtalk -x /var/lib/mecab/dic/open-jtalk/naist-jdic/ -m /usr/share/hts-voice/nitech-jp-atr503-m001/nitech_jp_atr503_m001.htsvoice -ow output.wav

# 標準入力の文字列から音声を生成して、標準出力に書き出す（wav形式）
cat text.txt | docker run --rm -i -v &amp;quot;$PWD:/data&amp;quot; aoirint/open_jtalk -x /var/lib/mecab/dic/open-jtalk/naist-jdic/ -m /usr/share/hts-voice/nitech-jp-atr503-m001/nitech_jp_atr503_m001.htsvoice -ow /dev/stdout &amp;gt; output.wav
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ffmpegで出力されたwavファイルを見るとこのような形式。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Input #0, wav, from &amp;#x27;output.wav&amp;#x27;:
  Duration: 00:00:01.61, bitrate: 768 kb/s
    Stream #0:0: Audio: pcm_s16le ([1][0][0][0] / 0x0001), 48000 Hz, mono, s16, 768 kb/s
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;続いて、mmdagent.jpで配布されているボイスファイル（htsvoice）を使ってみる。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://sourceforge.net/projects/mmdagent/files/MMDAgent_Example/&quot;&gt;MMDAgent - Browse /MMDAgent_Example at SourceForge.net&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;ここから最新のMMDAgent Exampleをダウンロードする。
&lt;code&gt;Voice/mei/mei_normal.htsvoice&lt;/code&gt;に目的のボイスファイルがある（CC BY 3.0）。
これを作業ディレクトリ（&lt;code&gt;$PWD&lt;/code&gt;）にコピーしておく。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# 他のhtsvoiceを使う（mei_normal.htsvoice）
docker run --rm -v &amp;quot;$PWD:/data&amp;quot; aoirint/open_jtalk -x /var/lib/mecab/dic/open-jtalk/naist-jdic/ -m /data/mei_normal.htsvoice text.txt -ow output.wav
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ヘルプはこのようになっている。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ docker run --rm -it -v &amp;quot;$PWD:/data&amp;quot; aoirint/open_jtalk -h
The Japanese TTS System &amp;quot;Open JTalk&amp;quot;
Version 1.10 (http://open-jtalk.sourceforge.net/)
Copyright (C) 2008-2016 Nagoya Institute of Technology
All rights reserved.

The HMM-Based Speech Synthesis Engine &amp;quot;hts_engine API&amp;quot;
Version 1.10 (http://hts-engine.sourceforge.net/)
Copyright (C) 2001-2015 Nagoya Institute of Technology
              2001-2008 Tokyo Institute of Technology
All rights reserved.

Yet Another Part-of-Speech and Morphological Analyzer &amp;quot;Mecab&amp;quot;
Version 0.996 (http://mecab.sourceforge.net/)
Copyright (C) 2001-2008 Taku Kudo
              2004-2008 Nippon Telegraph and Telephone Corporation
All rights reserved.

NAIST Japanese Dictionary
Version 0.6.1-20090630 (http://naist-jdic.sourceforge.jp/)
Copyright (C) 2009 Nara Institute of Science and Technology
All rights reserved.

open_jtalk - The Japanese TTS system &amp;quot;Open JTalk&amp;quot;

  usage:
       open_jtalk [ options ] [ infile ]
  options:                                                                   [  def][ min-- max]
    -x  dir        : dictionary directory                                    [  N/A]
    -m  htsvoice   : HTS voice files                                         [  N/A]
    -ow s          : filename of output wav audio (generated speech)         [  N/A]
    -ot s          : filename of output trace information                    [  N/A]
    -s  i          : sampling frequency                                      [ auto][   1--    ]
    -p  i          : frame period (point)                                    [ auto][   1--    ]
    -a  f          : all-pass constant                                       [ auto][ 0.0-- 1.0]
    -b  f          : postfiltering coefficient                               [  0.0][ 0.0-- 1.0]
    -r  f          : speech speed rate                                       [  1.0][ 0.0--    ]
    -fm f          : additional half-tone                                    [  0.0][    --    ]
    -u  f          : voiced/unvoiced threshold                               [  0.5][ 0.0-- 1.0]
    -jm f          : weight of GV for spectrum                               [  1.0][ 0.0--    ]
    -jf f          : weight of GV for log F0                                 [  1.0][ 0.0--    ]
    -g  f          : volume (dB)                                             [  0.0][    --    ]
    -z  i          : audio buffer size (if i==0, turn off)                   [    0][   0--    ]
  infile:
    text file                                                                [stdin]
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://namotch.hatenablog.com/entry/2015/06/25/225000&quot;&gt;Debian Jessie に OpenJtalk を入れてテキストを読み上げてみた - 残しときます（自分用）&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/sukesuke/items/be2a4562bd809ccc0fab&quot;&gt;合成音声(Open Jtalk)でwavファイルを作成しないで再生する - Qiita&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.mmdagent.jp/&quot;&gt;mmdagent.jp&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://open-jtalk.sp.nitech.ac.jp/index.php&quot;&gt;Open JTalk - HMM-based Text-to-Speech System&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Ubuntu/Raspberry Pi/Debianの時刻ずれを解消する]]></title><description><![CDATA[Ubuntu/Raspberry Pi/Debianの時刻ずれを解消する こういうエラーが出ることがある（ログはRaspberry Pi OS）。 まずは手動でタイムゾーンと時刻を合わせる（だいたいでOK）。 これでaptが実行できるようになるので、Chrony…]]></description><link>https://blog.aoirint.com2021/ubuntu_ntp/</link><guid isPermaLink="false">https://blog.aoirint.com2021/ubuntu_ntp/</guid><pubDate>Sat, 03 Apr 2021 21:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;ubunturaspberry-pidebianの時刻ずれを解消する&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#ubunturaspberry-pidebian%E3%81%AE%E6%99%82%E5%88%BB%E3%81%9A%E3%82%8C%E3%82%92%E8%A7%A3%E6%B6%88%E3%81%99%E3%82%8B&quot; aria-label=&quot;ubunturaspberry pidebianの時刻ずれを解消する permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu/Raspberry Pi/Debianの時刻ずれを解消する&lt;/h1&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ sudo apt update
Get:1 http://raspbian.raspberrypi.org/raspbian buster InRelease [15.0 kB]
Get:2 http://archive.raspberrypi.org/debian buster InRelease [32.9 kB]
Reading package lists... Done  
E: Release file for http://raspbian.raspberrypi.org/raspbian/dists/buster/InRelease is not valid yet (invalid for another 27d 15h 31min 39s). Updates for this repository will not be applied.
E: Release file for http://archive.raspberrypi.org/debian/dists/buster/InRelease is not valid yet (invalid for another 26d 5h 35min 24s). Updates for this repository will not be applied.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;こういうエラーが出ることがある（ログはRaspberry Pi OS）。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo timedatectl set-timezone Asia/Tokyo
sudo date --set 2021-04-04
sudo date --set 06:00
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;まずは手動でタイムゾーンと時刻を合わせる（だいたいでOK）。&lt;/p&gt;&lt;p&gt;これでaptが実行できるようになるので、Chronyを導入する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo apt update
sudo apt install chrony
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;/etc/chrony/chrony.conf&lt;/code&gt;を開く。&lt;/p&gt;&lt;p&gt;NTP DoS対策でポートがふさがれていて、組織のNTPサーバが提供されている場合、
このようにNTPサーバを設定してあげればOK。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# pool 2.debian.pool.ntp.org iburst
pool your.ntp.server.example iburst
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;chronyを再起動。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo systemctl restart chrony
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://wiki.debian.org/DateTime&quot;&gt;DateTime - Debian Wiki&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://centos.bungu-do.jp/archives/67&quot;&gt;タイムゾーンを日本標準時(JST)に変更する CentOS 8, 7, 6 – CentOSサーバ構築術 文具堂&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[SSH Port Forwardingを使ってNAT間で通信するPort Proxy Server in Docker]]></title><description><![CDATA[SSH Port Forwardingを使ってNAT間で通信するPort Proxy Server in Docker SSHポートフォワーディング：踏み台による中継接続 SSHポートフォワーディングには、
ローカルポートフォワーディング、
リモートポートフォワーディングの…]]></description><link>https://blog.aoirint.com2021/ssh_proxy_server_docker/</link><guid isPermaLink="false">https://blog.aoirint.com2021/ssh_proxy_server_docker/</guid><pubDate>Sat, 20 Mar 2021 18:32:29 GMT</pubDate><content:encoded>&lt;h1 id=&quot;ssh-port-forwardingを使ってnat間で通信するport-proxy-server-in-docker&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#ssh-port-forwarding%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6nat%E9%96%93%E3%81%A7%E9%80%9A%E4%BF%A1%E3%81%99%E3%82%8Bport-proxy-server-in-docker&quot; aria-label=&quot;ssh port forwardingを使ってnat間で通信するport proxy server in docker permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SSH Port Forwardingを使ってNAT間で通信するPort Proxy Server in Docker&lt;/h1&gt;&lt;h2 id=&quot;sshポートフォワーディング踏み台による中継接続&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#ssh%E3%83%9D%E3%83%BC%E3%83%88%E3%83%95%E3%82%A9%E3%83%AF%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E8%B8%8F%E3%81%BF%E5%8F%B0%E3%81%AB%E3%82%88%E3%82%8B%E4%B8%AD%E7%B6%99%E6%8E%A5%E7%B6%9A&quot; aria-label=&quot;sshポートフォワーディング踏み台による中継接続 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SSHポートフォワーディング：踏み台による中継接続&lt;/h2&gt;&lt;p&gt;SSHポートフォワーディングには、
ローカルポートフォワーディング、
リモートポートフォワーディングの2種類があります。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/mechamogera/items/b1bb9130273deb9426f5&quot;&gt;sshポートフォワーディング - Qiita&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;ローカルポートフォワーディングでは、
SSHサーバ側から見えるネットワークポートを
SSHクライアント側に転送することができます。
例えば、ファイアウォール（NAT）に守られたネットワーク（ネットワークA）内にあるWebサーバ（ホストX）に
外部ネットワーク（ネットワークB）にあるクライアント（ホストY）から接続したいとき、
踏み台となる、ネットワークBから接続可能なSSHサーバ（ホストZ）がネットワークA内にあれば、
ホストYがホストZにSSH接続することで、
ホストXのWebサーバのネットワークポートに、
ホストYの指定したポートから接続できるようになります
（「ホスト」は「各ネットワークに接続した、NICに割り当てられたIPアドレス」に対応）。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;user@hostY.networkB.example: $ ssh user@hostZ.networkA.example -L &amp;quot;127.0.0.1:10080:hostX.networkA.example:80&amp;quot;

user@hostY.networkB.example: $ wget http://127.0.0.1:10080/index.html
I am &amp;quot;hostX.networkA.example:80&amp;quot;.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;リモートポートフォワーディングでは、
SSHクライアント側から見えるネットワークポートを
SSHサーバ側に転送することができます。
先の例でいうと、ホストXがネットワークBに接続していて、
ファイアウォール（NAT）によってネットワークAにあるホストZから接続できないとき、
ホストYがホストZにSSH接続することで、ホストZからホストXに接続できるようになります。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;user@hostY.networkB.example: $ ssh user@hostZ.networkA.example -R &amp;quot;127.0.0.1:10080:hostX.networkB.example:80&amp;quot;

user@hostZ.networkA.example: $ wget http://127.0.0.1:10080/index.html
I am &amp;quot;hostX.networkB.example:80&amp;quot;.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;この方法は、ネットワーク内のあるホストにSSH接続ができる環境さえあれば、
VPNや他のTCPプロキシをセットアップするより簡単に隠されたネットワークにアクセスすることができるように思います。&lt;/p&gt;&lt;h2 id=&quot;ポートプロキシサーバ2種類のsshポートフォワーディングの組み合わせ&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%9D%E3%83%BC%E3%83%88%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7%E3%82%B5%E3%83%BC%E3%83%902%E7%A8%AE%E9%A1%9E%E3%81%AEssh%E3%83%9D%E3%83%BC%E3%83%88%E3%83%95%E3%82%A9%E3%83%AF%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E3%81%AE%E7%B5%84%E3%81%BF%E5%90%88%E3%82%8F%E3%81%9B&quot; aria-label=&quot;ポートプロキシサーバ2種類のsshポートフォワーディングの組み合わせ permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ポートプロキシサーバ：2種類のSSHポートフォワーディングの組み合わせ&lt;/h2&gt;&lt;p&gt;ここで、別の構成のネットワークについても考えてみます。
新しくネットワークCを導入して、
ホストXはNAT内のネットワークC（&lt;code&gt;hostX.networkC.example&lt;/code&gt;）、
ホストYはNAT内のネットワークB（&lt;code&gt;hostY.networkB.example&lt;/code&gt;）、
ホストZはネットワークB、Cからともに接続可能なネットワークA（&lt;code&gt;hostZ.networkA.example&lt;/code&gt;）
という構成を考えてみます。&lt;/p&gt;&lt;p&gt;この構成で、ホストYからホストXに接続可能な環境を作るには、次のような手順が考えられます。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;ホストXからホストZにSSH接続し、リモートポートフォワーディングによってホストZ上の&amp;quot;ポートQ&amp;quot;をホストX上の&amp;quot;ポートP&amp;quot;に転送する&lt;/li&gt;&lt;li&gt;ホストYからホストZにSSH接続し、ローカルポートフォワーディングによってホストY上の&amp;quot;ポートR&amp;quot;をホストZ上の&amp;quot;ポートQ&amp;quot;に転送する&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;これにより、ホストYは、自身のポートRを使って、ホストXのポートPに接続することができます。
もしホストXに物理的にアクセスできない環境でも、
あらかじめホストXをホストZに常時接続するように設定しておけば、
その接続（ポートQからポートPへの転送）が生きている限り、好きなタイミングでホストYからホストXに接続（ポートRからポートQへの転送、すなわちポートRからポートPへの転送）することができます。&lt;/p&gt;&lt;h2 id=&quot;ssh-port-forwardingを使ったport-proxy-server-in-docker&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#ssh-port-forwarding%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9Fport-proxy-server-in-docker&quot; aria-label=&quot;ssh port forwardingを使ったport proxy server in docker permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SSH Port Forwardingを使ったPort Proxy Server in Docker&lt;/h2&gt;&lt;p&gt;前項のポートプロキシサーバの問題として、次の3つを考えました。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;ホストYのユーザは、ホストZ上のローカルポート（ローカルループバックアドレスにバインドしたポート）に自由にアクセスできる&lt;/li&gt;&lt;li&gt;ホストYのユーザは、ホストZ上のファイルに（権限の範囲で）自由にアクセスできる&lt;/li&gt;&lt;li&gt;ホストZのシステム上にホストYのユーザがログインするためのユーザを用意しなければならない&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;これらの問題の解決法として、Dockerを使ってホストZ上のSSHサーバ・ユーザ管理を仮想化することを試してみました。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/toshihirock/items/f5b9f7799ec8bf8c328e&quot;&gt;Docker の bridge と host ネットワークについて勉強する - Qiita&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;作ったシステムはGitHubにおいています。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;ホストZ用のシステム：&lt;a href=&quot;https://github.com/aoirint/SSHPortForwardingProxy&quot;&gt;https://github.com/aoirint/SSHPortForwardingProxy&lt;/a&gt;&lt;/li&gt;&lt;li&gt;ホストX用のシステム：&lt;a href=&quot;https://github.com/aoirint/SSHPortForwardingProxyClient&quot;&gt;https://github.com/aoirint/SSHPortForwardingProxyClient&lt;/a&gt;&lt;/li&gt;&lt;li&gt;ホストY：通常の&lt;code&gt;ssh&lt;/code&gt;コマンドを使用&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;仮想化の不完全な点として、ホストX用のシステムについて、設定が煩雑になるのを避けるため、&lt;code&gt;network_mode: host&lt;/code&gt;（&lt;code&gt;--net host&lt;/code&gt;）を指定してしまっています。
また、パスワードログインやログインシェルは無効化していますが、まだSSHサーバの設定（アクセス制限）に不備があるかもしれません。
他に、ホストXからホストZ上の仮想SSHサーバへの初回接続でフィンガープリントの確認をスキップしています。&lt;/p&gt;&lt;h3 id=&quot;事前準備の手順&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E4%BA%8B%E5%89%8D%E6%BA%96%E5%82%99%E3%81%AE%E6%89%8B%E9%A0%86&quot; aria-label=&quot;事前準備の手順 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;事前準備の手順&lt;/h3&gt;&lt;p&gt;認証はすべて公開鍵認証を使うことを想定します。
そのため、あらかじめ各ホスト間で公開鍵の共有が必要です。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;[ホストX] SSH鍵を生成し、公開鍵をホストZに転送する&lt;/li&gt;&lt;li&gt;[ホストY] SSH鍵を生成し、公開鍵をホストZに転送する&lt;/li&gt;&lt;li&gt;[ホストY] SSH鍵を生成し、公開鍵をホストXに転送する&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&quot;準備手順&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E6%BA%96%E5%82%99%E6%89%8B%E9%A0%86&quot; aria-label=&quot;準備手順 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;準備手順&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;[ホストZ] &lt;code&gt;git clone https://github.com/aoirint/SSHPortForwardingProxy.git&lt;/code&gt;&lt;/li&gt;&lt;li&gt;[ホストZ] &lt;code&gt;docker-compose.override.yml.template&lt;/code&gt;を&lt;code&gt;docker-compose.override.yml&lt;/code&gt;にコピーする&lt;/li&gt;&lt;li&gt;[ホストZ] どのポートで仮想SSHサーバをホストするか決め、&lt;code&gt;docker-compose.override.yml&lt;/code&gt;にポートマッピングを記述する&lt;ul&gt;&lt;li&gt;ここでは、ホストX、Yから仮想SSHサーバに&lt;code&gt;hostZ.networkA.example:10080&lt;/code&gt;でアクセスすることとする&lt;/li&gt;&lt;li&gt;仮想サーバ（VirtualZ）は、DockerによってネットワークVに分離される（ブリッジ）。SSHサーバは、&lt;code&gt;virtualZ.networkV.example:22&lt;/code&gt;でホストすることとする&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;[ホストZ] ホストX、ホストYの公開鍵を&lt;code&gt;/authorized_keys/USERNAME&lt;/code&gt;に通常の&lt;code&gt;authorized_keys&lt;/code&gt;と同様の形で格納する&lt;ul&gt;&lt;li&gt;USERNAMEは仮想SSHサーバに各ホストからログインするときのユーザ名として使われる&lt;/li&gt;&lt;li&gt;複数のファイルを格納した場合、それぞれのユーザが作られる&lt;/li&gt;&lt;li&gt;ここでは、ホストX用のユーザをuserX、ホストY用のユーザをuserYとする&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;[ホストZ] &lt;code&gt;docker-compose up -d&lt;/code&gt;&lt;/li&gt;&lt;li&gt;[ホストX] &lt;code&gt;git clone https://github.com/aoirint/SSHPortForwardingProxyClient.git&lt;/code&gt;&lt;/li&gt;&lt;li&gt;[ホストX] &lt;code&gt;docker-compose.override.yml.template&lt;/code&gt;を&lt;code&gt;docker-compose.override.yml&lt;/code&gt;にコピーする&lt;/li&gt;&lt;li&gt;[ホストX] ホストX上のどのポートを仮想サーバ上のどのポートに転送するか決め、&lt;code&gt;docker-compose.override.yml&lt;/code&gt;に設定を記述する&lt;ul&gt;&lt;li&gt;ここでは、ホストXのSSHサーバ&lt;code&gt;hostX.networkC.example:22&lt;/code&gt;を&lt;code&gt;virtualZ.networkV.example:10022&lt;/code&gt;に転送することとする&lt;/li&gt;&lt;li&gt;秘密鍵のマウントおよびコンテナ内でのパスを合わせて設定する&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;[ホストX] &lt;code&gt;docker-compose up -d&lt;/code&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&quot;使用手順&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E4%BD%BF%E7%94%A8%E6%89%8B%E9%A0%86&quot; aria-label=&quot;使用手順 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;使用手順&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;[ホストY] &lt;code&gt;ssh userY@hostZ.networkA.example -p 10080 -N -i &amp;quot;VirtualZへの秘密鍵のパス&amp;quot; -L &amp;quot;127.0.0.1:20080:127.0.0.1:10022&amp;quot;&lt;/code&gt;&lt;ul&gt;&lt;li&gt;接続をバックグランドで維持しておく&lt;/li&gt;&lt;li&gt;ホストXのSSHサーバにホストYの20080番ポートからアクセスできるようになった（ここではホストY内のローカルアクセスに限定）&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;[ホストY] &lt;code&gt;ssh userYinHostX@localhost -p 20080 -i &amp;quot;ホストXへの秘密鍵のパス&amp;quot;&lt;/code&gt;&lt;ul&gt;&lt;li&gt;ホストYからホストXにSSH接続ができる（目的達成）&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 id=&quot;未解決の問題&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E6%9C%AA%E8%A7%A3%E6%B1%BA%E3%81%AE%E5%95%8F%E9%A1%8C&quot; aria-label=&quot;未解決の問題 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;未解決の問題&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;ホストYは、ネットワークAから見えるホストに（ホストZのアドレスで）自由に接続できる&lt;ul&gt;&lt;li&gt;&lt;code&gt;--cap-add​=NET_ADMIN&lt;/code&gt;と&lt;code&gt;iptables&lt;/code&gt;を使って制限できるかもしれない&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Docker Desktop for Mac上のX ClientをホストのXQuartz（X Window Server）で表示する]]></title><description><![CDATA[Docker Desktop for Mac上のX ClientをホストのXQuartz（X Window Server）で表示する Docker Desktop for Mac 3.0.2 (50996) macOS Catalina Version 10.15.…]]></description><link>https://blog.aoirint.com2020/xquartz_docker/</link><guid isPermaLink="false">https://blog.aoirint.com2020/xquartz_docker/</guid><pubDate>Sat, 19 Dec 2020 15:30:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;docker-desktop-for-mac上のx-clientをホストのxquartzx-window-serverで表示する&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker-desktop-for-mac%E4%B8%8A%E3%81%AEx-client%E3%82%92%E3%83%9B%E3%82%B9%E3%83%88%E3%81%AExquartzx-window-server%E3%81%A7%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B&quot; aria-label=&quot;docker desktop for mac上のx clientをホストのxquartzx window serverで表示する permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker Desktop for Mac上のX ClientをホストのXQuartz（X Window Server）で表示する&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;$ docker -v
Docker version 20.10.0, build 7287ab3

$ brew -v
Homebrew 2.6.2
Homebrew/homebrew-core (git revision ce927; last commit 2020-12-19)
Homebrew/homebrew-cask (git revision eb977; last commit 2020-12-19)

$ brew info xquartz
xquartz: 2.7.11 (auto_updates)
https://www.xquartz.org/
/usr/local/Caskroom/xquartz/2.7.11 (74.6MB)
From: https://github.com/Homebrew/homebrew-cask/blob/HEAD/Casks/xquartz.rb
==&amp;gt; Name
XQuartz
==&amp;gt; Description
Open-source version of the X.Org X Window System
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;Docker Desktop for Mac 3.0.2 (50996)&lt;/li&gt;&lt;li&gt;macOS Catalina Version 10.15.7&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;xquartzのインストールhomebrewとhomebrew-cask&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#xquartz%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%ABhomebrew%E3%81%A8homebrew-cask&quot; aria-label=&quot;xquartzのインストールhomebrewとhomebrew cask permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;XQuartzのインストール（HomebrewとHomebrew Cask）&lt;/h2&gt;&lt;p&gt;現在は&lt;code&gt;brew cask&lt;/code&gt;コマンドは非推奨で、&lt;code&gt;brew&lt;/code&gt;だけでOK（あるいは&lt;code&gt;--cask&lt;/code&gt;オプションをつける）。
XQuartzの場合は&lt;code&gt;--cask&lt;/code&gt;をつけなくても内部で勝手に&lt;code&gt;brew cask&lt;/code&gt;としてインストールしてくれた。
Homebrew CaskというのはGUIアプリケーション向けのHomebrewの拡張らしいが、Homebrewと何が違うのかわからん。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Warning: Calling brew cask install is deprecated! Use brew install [--cask] instead.
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://brew.sh/&quot;&gt;The Missing Package Manager for macOS (or Linux) — Homebrew&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://formulae.brew.sh/cask/&quot;&gt;homebrew-cask — Homebrew Formulae&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/Homebrew/homebrew-cask&quot;&gt;Homebrew/homebrew-cask: 🍻 A CLI workflow for the administration of macOS applications distributed as binaries&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://apple.stackexchange.com/questions/125468/what-is-the-difference-between-brew-and-brew-cask&quot;&gt;command line - What is the difference between &lt;code&gt;brew&lt;/code&gt; and &lt;code&gt;brew cask&lt;/code&gt;? - Ask Different&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/blob/master/USAGE.md&quot;&gt;homebrew-cask/USAGE.md at master · Homebrew/homebrew-cask&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Homebrewは、開発元からソースコードが配布されていて、そのコンパイル済みのバイナリ（またはソースダウンロード＋自動ローカルビルド）を提供するもので、
Homebrew Caskは、&lt;code&gt;*.dmg&lt;/code&gt;が配布されていてマウントして&lt;code&gt;*.app&lt;/code&gt;を&lt;code&gt;/Applications&lt;/code&gt;にコピーする操作（実際には&lt;code&gt;/usr/local/Caskroom&lt;/code&gt;にインストールする）のを自動化する、というものなのだろうか?
&lt;code&gt;--cask&lt;/code&gt;を明示するのは両方に登録されていてもCaskを優先するみたいな指定なのか? XQuartzの場合は&lt;code&gt;--cask&lt;/code&gt;を付けなくてもCaskとしてインストールされた。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# brew install xquartz # これでもよさそう
brew install --cask xquartz
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;XQuartz.appを起動する。
シェルに環境変数DISPLAYが設定される（&lt;code&gt;/private/tmp/com.apple.launchd.***/org.macosforge.xquartz:0&lt;/code&gt;のような値）。&lt;/p&gt;&lt;p&gt;XQuartzと合わせて導入されるxhostやxeyesにパスが通っていないので、&lt;code&gt;/usr/X11/bin&lt;/code&gt;にパスを通しておく。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# bashの場合：~/.bash_profile
export PATH=/usr/X11/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;起動確認。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;xeyes
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;また、XQuartzのXQuartz &amp;gt; Preferences &amp;gt; Security &amp;gt; Allow connections from network clientsにチェックを入れる。
Dockerからアクセスするために必要。
また、この設定はXQuartzを再起動しないと反映されないので、一度XQuartzをQuitして起動しなおす。&lt;/p&gt;&lt;h2 id=&quot;テスト用dockerイメージ&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%86%E3%82%B9%E3%83%88%E7%94%A8docker%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8&quot; aria-label=&quot;テスト用dockerイメージ permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;テスト用Dockerイメージ&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-dockerfile&quot;&gt;FROM alpine:3

RUN apk --no-cache add xeyes

CMD [&amp;quot;/usr/bin/xeyes&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker build . -t xeyes
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;確認docker-desktop-for-macのdns設定&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E7%A2%BA%E8%AA%8Ddocker-desktop-for-mac%E3%81%AEdns%E8%A8%AD%E5%AE%9A&quot; aria-label=&quot;確認docker desktop for macのdns設定 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;確認：Docker Desktop for MacのDNS設定&lt;/h2&gt;&lt;p&gt;以下のようなdocker pullに失敗する事象のため、Docker daemonのDNS設定を変更していた。
具体的には、Docker Desktop for Macのタスクバーアイコン &amp;gt; Preferences &amp;gt; Docker EngineのJSON設定欄に
&lt;code&gt;&amp;quot;dns&amp;quot;: [ &amp;quot;primary dns address&amp;quot;, &amp;quot;secondary dns adderss&amp;quot; ]&lt;/code&gt;のように設定を書き足して解決していた。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;failed to solve with frontend dockerfile.v0:
failed to create LLB definition:
failed to authorize:
rpc error: code = Unknown desc = failed to fetch oauth token:
Get https://auth.docker.io/token?scope=repository%3Alibrary%2Fubuntu%3Apull&amp;amp;service=registry.docker.io:
dial tcp 54.236.131.166:443: i/o timeout
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/44410259/how-do-i-configure-which-dns-server-docker-uses-in-docker-desktop-for-mac&quot;&gt;How do I configure which DNS server docker uses in Docker Desktop for Mac? - Stack Overflow&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/docker/for-mac/issues/1346&quot;&gt;docker run hello-world results in i/o timeout · Issue #1346 · docker/for-mac&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/48042184/how-to-solve-i-o-timeout-error-in-docker-pull&quot;&gt;dns - How to solve i/o timeout error in docker pull - Stack Overflow&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;この状態では、以下のhost.docker.internalを使う方法・hostnameを使う方法が動作せず、この設定は削除する必要があった。
なお最初に起きていた事象は、ネットワークのファイアウォールによってOP53B（DNSブロック）されていたのが原因と思われるが、
この設定を削除したとき、同様のネットワークで事象は復活しなかった（ネットワークの切り替え直後だったために起きていた一時的な問題？）。&lt;/p&gt;&lt;h2 id=&quot;hostdockerinternalを使う方法旧-dockerformaclocalhost-dockerformachostinternal&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#hostdockerinternal%E3%82%92%E4%BD%BF%E3%81%86%E6%96%B9%E6%B3%95%E6%97%A7-dockerformaclocalhost-dockerformachostinternal&quot; aria-label=&quot;hostdockerinternalを使う方法旧 dockerformaclocalhost dockerformachostinternal permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;host.docker.internalを使う方法（旧 docker.for.mac.localhost, docker.for.mac.host.internal）&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/@mreichelt/how-to-show-x11-windows-within-docker-on-mac-50759f4b65cb&quot;&gt;How to show X11 windows with Docker on Mac | by Marc Reichelt | Medium&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.achimetto.me/docker-gui-app-on-macos.html&quot;&gt;How to display a gui app in a Docker container in macOS | Alessandro Chimetto&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://raphine.hatenablog.com/entry/2018/08/14/004634&quot;&gt;Mac+dockerでx11アプリケーションを起動する - livaの雑記帳&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://gist.github.com/cschiewek/246a244ba23da8b9f0e7b11a68bf3285#gistcomment-3477013&quot;&gt;X11 in docker on macOS へのコメント&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://gist.github.com/paul-krohn/e45f96181b1cf5e536325d1bdee6c949&quot;&gt;Docker X11 macOS&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;この方法がシンプルで安全なように思われた。
以下は、X Serverのすべてのアクセス制限を復活させたのち、localhostからのアクセスのみを許可した状態でxeyesをDocker上で起動する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;xhost -
xhost + localhost

docker run --rm -e DISPLAY=host.docker.internal:0 xeyes
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;hostnameを使うxauthorityを共有する方法&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#hostname%E3%82%92%E4%BD%BF%E3%81%86xauthority%E3%82%92%E5%85%B1%E6%9C%89%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95&quot; aria-label=&quot;hostnameを使うxauthorityを共有する方法 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hostnameを使う＋~/.Xauthorityを共有する方法&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/hoto17296/items/bdb2ab24bc32b6b7f360&quot;&gt;Docker for Mac で X11 アプリケーションを動かす - Qiita&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/kawaz/items/6cf04f923ebfac45a997&quot;&gt;macOS で Docker 内で動かした X11 アプリを表示させる - Qiita&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;hostnameを使うtmpx11-unixを共有する方法&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#hostname%E3%82%92%E4%BD%BF%E3%81%86tmpx11-unix%E3%82%92%E5%85%B1%E6%9C%89%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95&quot; aria-label=&quot;hostnameを使うtmpx11 unixを共有する方法 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hostnameを使う＋/tmp/.X11-unixを共有する方法&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://gist.github.com/cschiewek/246a244ba23da8b9f0e7b11a68bf3285&quot;&gt;X11 in docker on macOS&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;プライベートipを使う方法&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%97%E3%83%A9%E3%82%A4%E3%83%99%E3%83%BC%E3%83%88ip%E3%82%92%E4%BD%BF%E3%81%86%E6%96%B9%E6%B3%95&quot; aria-label=&quot;プライベートipを使う方法 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;プライベートIPを使う方法&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://gokids.hatenablog.com/entry/2018/11/14/190000&quot;&gt;Mac DockerでGUIを使いたい（XQuartz版） - あよなの足跡&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/37523980/running-gui-apps-on-docker-container-with-a-macbookpro-host&quot;&gt;macos - Running GUI apps on docker container with a MacBookPro host - Stack Overflow&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://sourabhbajaj.com/blog/2017/02/07/gui-applications-docker-mac/&quot;&gt;Running GUI applications using Docker for Mac - Sourabh&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://gist.github.com/cschiewek/246a244ba23da8b9f0e7b11a68bf3285#gistcomment-3119974&quot;&gt;X11 in docker on macOS へのコメント&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;socatを使う方法unixソケットをtcpにリレーする方法&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#socat%E3%82%92%E4%BD%BF%E3%81%86%E6%96%B9%E6%B3%95unix%E3%82%BD%E3%82%B1%E3%83%83%E3%83%88%E3%82%92tcp%E3%81%AB%E3%83%AA%E3%83%AC%E3%83%BC%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95&quot; aria-label=&quot;socatを使う方法unixソケットをtcpにリレーする方法 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;socatを使う方法（UnixソケットをTCPにリレーする方法）&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://gist.github.com/asufana/229cdac01fccee1a7d32ca8b5d7cfee6&quot;&gt;Dockerで稼働するGUIアプリをMacOSXから利用する&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/37826094/xt-error-cant-open-display-if-using-default-display&quot;&gt;macos - Xt error: Can&amp;#x27;t open display, if using default DISPLAY - Stack Overflow&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;ssh-x11-forwardingを使う方法&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#ssh-x11-forwarding%E3%82%92%E4%BD%BF%E3%81%86%E6%96%B9%E6%B3%95&quot; aria-label=&quot;ssh x11 forwardingを使う方法 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SSH X11 Forwardingを使う方法&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/machisuke/items/84626eba60ab76d8fc4e&quot;&gt;dockerコンテナの中で立ち上げたGUIアプリをmacに表示してみる - Qiita&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[GitHubのPAT（Personal Access Token）認証手順（Ubuntu）]]></title><description><![CDATA[GitHubのPAT（Personal Access Token）認証手順（Ubuntu） GitHubがパスワードによるGitアクセスを無効化する（正確にはパーソナルアクセストークン認証を必須化する、だが現状SSH認証は残る）旨のアナウンスをした（ Token…]]></description><link>https://blog.aoirint.com2020/github_pat_auth/</link><guid isPermaLink="false">https://blog.aoirint.com2020/github_pat_auth/</guid><pubDate>Fri, 18 Dec 2020 02:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;githubのpatpersonal-access-token認証手順ubuntu&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#github%E3%81%AEpatpersonal-access-token%E8%AA%8D%E8%A8%BC%E6%89%8B%E9%A0%86ubuntu&quot; aria-label=&quot;githubのpatpersonal access token認証手順ubuntu permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GitHubのPAT（Personal Access Token）認証手順（Ubuntu）&lt;/h1&gt;&lt;p&gt;GitHubがパスワードによるGitアクセスを無効化する（正確にはパーソナルアクセストークン認証を必須化する、だが現状SSH認証は残る）旨のアナウンスをした（&lt;a href=&quot;https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/&quot;&gt;Token authentication requirements for Git operations - The GitHub Blog&lt;/a&gt;）。&lt;/p&gt;&lt;p&gt;これまで、コマンドラインGit操作のためのGitHubの認証にはパスワード認証（HTTPS Basic認証）を使っていた。
一応、リポジトリを操作するたびにパスワードを入力するのは面倒なので、
cacheは有効化していた。（&lt;code&gt;git config --global credential.helper cache&lt;/code&gt;）。&lt;/p&gt;&lt;p&gt;パスワード認証は、持ち出せないPCやVPS、モバイル端末や新しいPCから一時的にリポジトリにアクセスする必要があるときに便利だった。
もちろん、キーロガーやgitコマンドなどシステムがハックされている可能性を考えると望ましくないことはわかっていたが..。
以前はSSH認証を使っていた時期もあったが、ブラウザ上での鍵の登録削除操作が必要でこういった一時的な認証には向かない（この記事ではこの問題は解決しない。都度PATを用意するか、平文保存するか、あるいは手元で認証情報を持つ必要のない自動デプロイを採用することになるかもしれない）。
また、同じGitホスティングサービスに複数アカウントを作っているとき、デバイス数×アカウント数と大量に鍵を管理する必要が出てくる（この記事ではこの問題も解決しない）。&lt;/p&gt;&lt;p&gt;自分の認識として、GitHubのGit操作をする認証にはパスワード認証（HTTPS Basic認証）、SSH認証、パーソナルアクセストークンがある（GitHub ActionsのトークンやOAuthなどは除く）。&lt;/p&gt;&lt;p&gt;SSH認証を使っていなかった理由は先に述べた問題（一時的なアクセス・大量の鍵管理）のほかに、プロキシがある。
自分の環境では、ネットワーク/場所が変わるたびにプロキシ設定を切り替える必要があり、
HTTPS認証の場合、毎回&lt;code&gt;git config --global http.proxy&lt;/code&gt;あるいは&lt;code&gt;git config --global --unset http.proxy&lt;/code&gt;を打つことになっている（あるいはシェルスクリプト。&lt;code&gt;global&lt;/code&gt;なのはリポジトリ別に設定を残さないためと&lt;code&gt;clone&lt;/code&gt;ができないから）。
ここでSSHを使うとHTTPプロキシ経由で通信するためのProxyCommandを設定することになるが、これがやっかいである。
まず、OSごとにプロキシコマンドが異なる。&lt;code&gt;connect -H&lt;/code&gt;（Windows）、&lt;code&gt;ncat --proxy-type http --proxy&lt;/code&gt;（macOS）、&lt;code&gt;nc -X connect -x&lt;/code&gt;（Linux）とそれぞれのOS用の設定を用意することになる。
また、プロキシのON/OFF自体については、ふつうに&lt;code&gt;ssh&lt;/code&gt;でつなぐときは、ワイルドカード設定を使って接続先名でプロキシを切り替えるようにしているのだが、
Gitの場合は接続先名を変えるために&lt;code&gt;git remote set-url&lt;/code&gt;する必要があり、これにはリポジトリのパスを記憶して頻繁に入力する必要が出てきてしまう。今のところそのような認識であるので、パーソナルアクセストークンを使った認証に切り替えていく。&lt;/p&gt;&lt;p&gt;パーソナルアクセストークン（PAT）は、パスワードの代わりに利用可能な認証情報で、権限を絞ったトークンを生成できる。&lt;a href=&quot;https://docs.github.com/en/free-pro-team@latest/packages/learn-github-packages/about-github-packages&quot;&gt;GitHub Package Registry&lt;/a&gt;を利用するときに使っていて（&lt;code&gt;docker login docker.pkg.github.com&lt;/code&gt;。パスワード認証不可。現在GitHubのDockerレジストリはpull認証不要の&lt;a href=&quot;https://docs.github.com/en/free-pro-team@latest/packages/guides/about-github-container-registry&quot;&gt;GitHub Container Registry&lt;/a&gt; &lt;code&gt;ghcr.io&lt;/code&gt; に置き換えられる予定でパブリックベータ中）、好印象を持っていた（PyPIやDocker Hubでもトークン認証が便利）。また、GitHubはSSH認証よりも&lt;a href=&quot;https://docs.github.com/en/free-pro-team@latest/github/getting-started-with-github/set-up-git#next-steps-authenticating-with-github-from-git&quot;&gt;HTTPS認証を推奨している&lt;/a&gt;。PATの設定箇所は若干わかりにくいが、Settings &amp;gt; Developer settings &amp;gt; Personal access tokensから設定できる。&lt;/p&gt;&lt;p&gt;主要機の切り替えにあたって、トークンを毎回入力するわけにはいかないので、入力されたパスワード（トークン）を認証情報マネージャを使って永続化する設定をする。Windows（Git for Windows）、macOSでは自動で設定されるように思うが、Ubuntuでは手動設定することになる。&lt;/p&gt;&lt;p&gt;&lt;code&gt;libgnome-keyring&lt;/code&gt;の&lt;code&gt;git-credential-gnome-keyring&lt;/code&gt;というのがあるが、&lt;code&gt;libgnome-keyring&lt;/code&gt;が非推奨になっている（&lt;a href=&quot;https://stackoverflow.com/a/40312117&quot;&gt;linux - Error when using Git credential helper with gnome-keyring as Sudo - Stack Overflow&lt;/a&gt;、&lt;a href=&quot;https://mail.gnome.org/archives/commits-list/2014-January/msg01585.html&quot;&gt;[libgnome-keyring] Deprecate libgnome-keyring. Use libsecret instead&lt;/a&gt;）ようなので&lt;code&gt;libsecret&lt;/code&gt;を使う（裏側では同じ&lt;code&gt;gnome-keyring&lt;/code&gt;が動いているようだが）。
どちらもほぼ手順は同じだが、開発用パッケージからソースコードを取得したあと、手動で&lt;code&gt;make&lt;/code&gt;するという謎手順がある（#パッケージマネージャとは）。これで一応保存時の暗号化（復元可能）は施された状態で永続化できる。&lt;/p&gt;&lt;p&gt;パスワードを暗号化して保存するにはデスクトップ環境が必要で、サーバ上で利用する場合はSSH認証を使うのがよさそう。
GitHubでは、アカウントごとのほか、リポジトリごとにDeploy Keysとして公開鍵を登録できる。&lt;/p&gt;&lt;h2 id=&quot;libsecretの場合&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#libsecret%E3%81%AE%E5%A0%B4%E5%90%88&quot; aria-label=&quot;libsecretの場合 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;libsecretの場合&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://askubuntu.com/a/959662&quot;&gt;password - What is the correct way to use git with gnome-keyring and http(s) repos? - Ask Ubuntu&lt;/a&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo apt install libsecret-1-0 libsecret-1-dev
sudo make --directory=/usr/share/doc/git/contrib/credential/libsecret
git config --global credential.helper /usr/share/doc/git/contrib/credential/libsecret/git-credential-libsecret
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;libgnone-keyringの場合非推奨&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#libgnone-keyring%E3%81%AE%E5%A0%B4%E5%90%88%E9%9D%9E%E6%8E%A8%E5%A5%A8&quot; aria-label=&quot;libgnone keyringの場合非推奨 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;libgnone-keyringの場合（非推奨）&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://zenn.dev/tlls/articles/gnome-keyring-git-credential&quot;&gt;zenn:tlls/gnome-keyringでgitクレデンシャルを保存する&lt;/a&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo apt install libgnome-keyring-dev
sudo make --directory=/usr/share/doc/git/contrib/credential/gnome-keyring
git config --global credential.helper /usr/share/doc/git/contrib/credential/gnome-keyring/git-credential-gnome-keyring
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[テンプレート]]></title><description><![CDATA[テンプレート]]></description><link>https://blog.aoirint.com2020/template/</link><guid isPermaLink="false">https://blog.aoirint.com2020/template/</guid><pubDate>Tue, 08 Dec 2020 15:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;テンプレート&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88&quot; aria-label=&quot;テンプレート permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;テンプレート&lt;/h1&gt;&lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;---
title: テンプレート
# og_image:
# twitter_card: summary_large_image
og_description: テンプレート
date: &amp;#x27;2020-12-09 00:00:00&amp;#x27;
draft: true
category: 管理用
tags:
  - 管理用
  - テンプレート
---
# テンプレート
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[Debianパッケージから内容物を抽出する]]></title><description><![CDATA[Debianパッケージから内容物を抽出する Debian -- buster の bash パッケージに関する詳細 http://ftp.jp.debian.org/debian/pool/main/b/bash/bash_5.0-4_amd64.deb]]></description><link>https://blog.aoirint.com2020/extract_from_deb_file/</link><guid isPermaLink="false">https://blog.aoirint.com2020/extract_from_deb_file/</guid><pubDate>Tue, 08 Dec 2020 13:40:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;debianパッケージから内容物を抽出する&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#debian%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%81%8B%E3%82%89%E5%86%85%E5%AE%B9%E7%89%A9%E3%82%92%E6%8A%BD%E5%87%BA%E3%81%99%E3%82%8B&quot; aria-label=&quot;debianパッケージから内容物を抽出する permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debianパッケージから内容物を抽出する&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://packages.debian.org/buster/bash&quot;&gt;Debian -- buster の bash パッケージに関する詳細&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://ftp.jp.debian.org/debian/pool/main/b/bash/bash_5.0-4_amd64.deb&quot;&gt;http://ftp.jp.debian.org/debian/pool/main/b/bash/bash_5.0-4_amd64.deb&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;wget http://ftp.jp.debian.org/debian/pool/main/b/bash/bash_5.0-4_amd64.deb
mkdir bash
tar xvf bash_5.0-4_amd64.deb -C bash/
cd bash
mkdir data
tar xvf data.tar.xz -C data/

cd data
# here is root directory
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[Pythonを追加するDockerfile]]></title><description><![CDATA[Pythonを追加するDockerfile pyenvは部品を使うだけで最終的には削除します（Pythonは/usr/localに導入）]]></description><link>https://blog.aoirint.com2020/dockerfile_python/</link><guid isPermaLink="false">https://blog.aoirint.com2020/dockerfile_python/</guid><pubDate>Tue, 08 Dec 2020 13:30:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;pythonを追加するdockerfile&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#python%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8Bdockerfile&quot; aria-label=&quot;pythonを追加するdockerfile permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pythonを追加するDockerfile&lt;/h1&gt;&lt;p&gt;pyenvは部品を使うだけで最終的には削除します（Pythonは/usr/localに導入）&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-dockerfile&quot;&gt;FROM ubuntu:bionic


ARG DEBIAN_FRONTEND=noninteractive
ARG PYTHON_VERSION=3.9.0
ARG PYTHON_ROOT=/usr/local
ARG PYENV_ROOT=/tmp/.pyenv
ARG PYBUILD_ROOT=/tmp/python-build

RUN apt update &amp;amp;&amp;amp; apt install -y \
    build-essential \
    libssl-dev \
    zlib1g-dev \
    libbz2-dev \
    libreadline-dev \
    libsqlite3-dev \
    wget \
    curl \
    llvm \
    libncurses5-dev \
    libncursesw5-dev \
    xz-utils \
    tk-dev \
    libffi-dev \
    liblzma-dev \
    python-openssl \
    git \
  &amp;amp;&amp;amp; git clone https://github.com/pyenv/pyenv.git $PYENV_ROOT \
  &amp;amp;&amp;amp; PREFIX=$PYBUILD_ROOT $PYENV_ROOT/plugins/python-build/install.sh \
  &amp;amp;&amp;amp; $PYBUILD_ROOT/bin/python-build -v $PYTHON_VERSION $PYTHON_ROOT \
  &amp;amp;&amp;amp; rm -rf $PYBUILD_ROOT $PYENV_ROOT

&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[Dockerイメージから内容物を抽出する]]></title><description><![CDATA[Dockerイメージから内容物を抽出する docker save | Docker Documentation]]></description><link>https://blog.aoirint.com2020/extract_from_docker_image/</link><guid isPermaLink="false">https://blog.aoirint.com2020/extract_from_docker_image/</guid><pubDate>Tue, 08 Dec 2020 13:30:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;dockerイメージから内容物を抽出する&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%81%8B%E3%82%89%E5%86%85%E5%AE%B9%E7%89%A9%E3%82%92%E6%8A%BD%E5%87%BA%E3%81%99%E3%82%8B&quot; aria-label=&quot;dockerイメージから内容物を抽出する permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dockerイメージから内容物を抽出する&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/reference/commandline/save/#save-an-image-to-a-targz-file-using-gzip&quot;&gt;docker save | Docker Documentation&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker pull alpine:3
docker save -o out.tar alpine:3
mkdir out
tar xvf out.tar -C out/
cd out/6709f754bd0ccbbea9a7481e92772a494cca1543b3421978edff62bc5de16662
tar xvf layer.tar -C layer/

cd layer
# here is root directory
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[Mastodonをdocker-composeで立てる（Ubuntu 18.04）]]></title><description><![CDATA[Mastodonをdocker-composeで立てる（Ubuntu 18.04） tootsuite/mastodon: Your self-hosted, globally interconnected microblogging community Mastodon…]]></description><link>https://blog.aoirint.com2020/mastodon_docker/</link><guid isPermaLink="false">https://blog.aoirint.com2020/mastodon_docker/</guid><pubDate>Sun, 06 Dec 2020 02:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;mastodonをdocker-composeで立てるubuntu-1804&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#mastodon%E3%82%92docker-compose%E3%81%A7%E7%AB%8B%E3%81%A6%E3%82%8Bubuntu-1804&quot; aria-label=&quot;mastodonをdocker composeで立てるubuntu 1804 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mastodonをdocker-composeで立てる（Ubuntu 18.04）&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/tootsuite/mastodon&quot;&gt;tootsuite/mastodon: Your self-hosted, globally interconnected microblogging community&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://docs.joinmastodon.org/&quot;&gt;Mastodon documentation&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;内容はコミットID&lt;code&gt;44d5c6bc8ffd92cd201380dabe35748e50b6af68&lt;/code&gt;、Mastodon Dockerイメージバージョン&lt;code&gt;v3.2.1&lt;/code&gt;（Digest：&lt;code&gt;sha256:41cd5fb48d8b15ec806f08ab06fec98df33ec9b83a1f879e0fb30da9994018dc&lt;/code&gt;）におけるもの。&lt;code&gt;docker-compose&lt;/code&gt;の設定ファイルバージョンは&lt;code&gt;3&lt;/code&gt;。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ lsb_release -a
No LSB modules are available.
Distributor ID: Ubuntu
Description:    Ubuntu 18.04.5 LTS
Release:    18.04
Codename:   bionic

$ uname -r
5.4.0-56-generic

$ docker -v
Docker version 19.03.14, build 5eb3275d40

$ docker-compose -v
docker-compose version 1.27.1, build 509cfb99

$ docker images tootsuite/mastodon --digests
REPOSITORY           TAG                 DIGEST                                                                    IMAGE ID            CREATED             SIZE
tootsuite/mastodon   v3.2.1              sha256:41cd5fb48d8b15ec806f08ab06fec98df33ec9b83a1f879e0fb30da9994018dc   37ca50fc92bd        6 weeks ago         1.86GB
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;今回はDocker Hub上のイメージを使用し、ローカルビルドをしない想定でいく（ごちゃごちゃするので）。
Mastodonを改造したい場合など、必要に応じて&lt;code&gt;github:tootsuite/mastodon&lt;/code&gt;をFork/Cloneし、自分で/CIでビルドして信頼できるDockerレジストリに登録すればいいと思う。&lt;/p&gt;&lt;p&gt;Mastodonのリポジトリから&lt;code&gt;docker-compose.yml&lt;/code&gt;、&lt;code&gt;.env.production.sample&lt;/code&gt;をコピーしてくる。&lt;/p&gt;&lt;p&gt;環境変数設定ファイルである&lt;code&gt;.env.production.sample&lt;/code&gt;を&lt;code&gt;.env.production&lt;/code&gt;にリネームする。&lt;/p&gt;&lt;p&gt;ローカルビルドはしないので、web、streaming、sidekiqから&lt;code&gt;build: .&lt;/code&gt;の行を削除する。
また、&lt;code&gt;image: tootsuite/mastodon:v3.2.1&lt;/code&gt;のようにバージョンを固定しておく（実運用する場合は定期的に書き換えてバージョンアップ）。&lt;/p&gt;&lt;p&gt;DB、Redis、Mastodon各サービスのDockerイメージを取得する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker-compose pull
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;DB（PostgreSQL）のパスワードを生成する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# 適当な長さで
# rake secretを使ってもいいのだろうか?
pwgen 32
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;中のDB部分にDB名・ユーザ名・パスワードを設定する
（&lt;code&gt;docker-compose.yml&lt;/code&gt;に直接書きたくない場合は&lt;code&gt;.env.db&lt;/code&gt;などを作成、&lt;code&gt;env_file: &lt;/code&gt;以下にファイルパスを設定する。または&lt;code&gt;docker-compose.override.yml&lt;/code&gt;を作成する）。
&lt;code&gt;healthcheck&lt;/code&gt;のところのユーザ名の書き換え、DB名の書き換えを忘れないように注意（&lt;code&gt;FATAL: role &amp;quot;postgres&amp;quot; does not exist&lt;/code&gt;、&lt;code&gt;FATAL:  database &amp;quot;mastodon&amp;quot; does not exist&lt;/code&gt;）。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;  db:
    restart: always
    image: postgres:9.6-alpine
    shm_size: 256mb
    networks:
      - internal_network
    healthcheck:
      test: [&amp;quot;CMD&amp;quot;, &amp;quot;pg_isready&amp;quot;, &amp;quot;-U&amp;quot;, &amp;quot;mastodon&amp;quot;, &amp;quot;-D&amp;quot;, &amp;quot;mastodon_production&amp;quot;]
    volumes:
      - ./postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: mastodon
      POSTGRES_DB: mastodon_production
      POSTGRES_PASSWORD: YOUR_PASSWORD
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Mastodonの環境変数設定ファイル&lt;code&gt;.env.production&lt;/code&gt;の編集に移る。&lt;/p&gt;&lt;p&gt;Federationのセクションにいき、&lt;code&gt;LOCAL_DOMAIN&lt;/code&gt;を編集する。
起動テスト目的なら適当なドメイン、またはngrokでHTTP 3000番（Mastodonのデフォルトポート）を開けておいてそのドメインを使うというのでいいと思う（そうした場合、実運用時は初期化した方がよさそうだが）。
ひとまずメールアドレス検証で送られるメールの確認リンクに使用されていた（適当なドメインを使用した場合はパスをコピーして使用すればよい）。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# Federation
# ----------
# This identifies your server and cannot be changed safely later
# ----------
LOCAL_DOMAIN=mstdn.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Redisのセクションにいき、&lt;code&gt;REDIS_HOST&lt;/code&gt;を編集する。
docker-composeが作成するネットワークを使用するので、ホスト名&lt;code&gt;redis&lt;/code&gt;（サービス名）で接続できる。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-env&quot;&gt;# Redis
# -----
REDIS_HOST=redis
REDIS_PORT=6379
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;PostgreSQLのセクションにいき、&lt;code&gt;DB_HOST&lt;/code&gt;、&lt;code&gt;DB_PASS&lt;/code&gt;を編集する。
docker-composeが作成するネットワークを使用するので、ホスト名&lt;code&gt;db&lt;/code&gt;（サービス名）で接続できる。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-env&quot;&gt;# PostgreSQL
# ----------
DB_HOST=db
DB_USER=mastodon
DB_NAME=mastodon_production
DB_PASS=YOUR_PASSWORD
DB_PORT=5432
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ひとまず全文検索エンジンElasticSearchは無効化しておく。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-env&quot;&gt;# ElasticSearch (optional)
# ------------------------
ES_ENABLED=false
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;セッション用と二要素認証用の2つのシークレットをDocker Hub上のMastodonイメージ（&lt;code&gt;docker.io/tootsuite/mastodon&lt;/code&gt;）内の&lt;code&gt;Rakefile&lt;/code&gt;を使って生成する。
標準出力にランダム文字列が吐き出されるのでコピーする。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# for SECRET_KEY_BASE
docker run --rm tootsuite/mastodon:v3.2.1 bundle exec rake secret

# for OTP_SECRET
docker run --rm tootsuite/mastodon:v3.2.1 bundle exec rake secret
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Web Pushの公開鍵・秘密鍵を生成する（環境変数を設定しないとエラー）。標準出力に.envの形式で吐き出されるのでコピーする。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run --rm --env-file ./.env.production tootsuite/mastodon:v3.2.1 bundle exec rake mastodon:webpush:generate_vapid_key
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;メールアドレス検証・通知などに使うメールサーバ（SMTPサーバ）を設定する。&lt;/p&gt;&lt;p&gt;今回は面倒なので自分のGoogleアカウントを使用する。
Googleアカウントの二段階認証が有効になっていることを確認し、
Googleアカウント設定からメールに使用するアプリパスワードを生成する。&lt;/p&gt;&lt;p&gt;実際は、SendGridなどのEメールプロバイダを使ってメールサーバを用意するのがよい。
手順はドメインプロバイダ/DNSサーバにレコードを追加する程度なので、それほど難しくない。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;../../2021/sendgrid/&quot;&gt;SendGrid - えやみぐさ&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-env&quot;&gt;# Sending mail
# ------------
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_LOGIN=YOUR_NAME@gmail.com
SMTP_PASSWORD=YOUR_APP_PASSWORD
SMTP_FROM_ADDRESS=YOUR_NAME@gmail.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;オブジェクトストレージ接続機能はひとまず無効化しておく。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-env&quot;&gt;# File storage (optional)
# -----------------------
S3_ENABLED=false
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;設定ファイルの編集は以上。&lt;/p&gt;&lt;p&gt;DBの初期化と静的ファイル生成。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker-compose run --rm web rails db:migrate

docker-compose run --rm web rails assets:precompile
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;rails assets/precompile&lt;/code&gt;の方は、プロキシ環境下で&lt;code&gt;info There appears to be trouble with your network connection. Retrying...&lt;/code&gt;のように表示されて止まってしまうことがある。自分のテスト環境では、&lt;code&gt;docker-compose run --rm -e HTTP_PROXY -e HTTPS_PROXY web bash -c &amp;quot;yarn config set proxy \$HTTP_PROXY -g &amp;amp;&amp;amp; yarn config set https-proxy \$HTTPS_PROXY -g &amp;amp;&amp;amp; yarn config set network-timeout 1000000 -g &amp;amp;&amp;amp; rails assets:precompile --trace&amp;quot;&lt;/code&gt;のようにプロキシやタイムアウト時間を設定しても解決しなかった（traceを見る限り、&lt;code&gt;assets:precompile&lt;/code&gt;内の&lt;code&gt;yarn install&lt;/code&gt;で止まってしまう。&lt;a href=&quot;https://github.com/rails/rails/blob/v5.2.4.3/railties/lib/rails/tasks/yarn.rake#L11&quot;&gt;Railsの該当部分のソースコード&lt;/a&gt;）。&lt;code&gt;yarn&lt;/code&gt;の実体は&lt;code&gt;IMAGE_HOME/bin/yarn&lt;/code&gt;のようだが、&lt;code&gt;IMAGE_HOME/bin/yarn config&lt;/code&gt;のようにしても変わらず、&lt;code&gt;-g&lt;/code&gt;を外しても変わらなかった）。結局解決方法はわからなかったが、プロキシ外で実行してもマウントしているディレクトリ（&lt;code&gt;./public&lt;/code&gt;）には今のところ何も生成されない（&lt;code&gt;Everything&amp;#x27;s up-to-date. Nothing to do&lt;/code&gt;）ようなのでこの手順は飛ばしても問題ないかもしれない..（DBを変更しているかどうかはわからないが）。&lt;/p&gt;&lt;p&gt;docker-compose run --rmでweb以外のコンテナが止まらないので一度すべてのコンテナを停止・削除する。
これにより永続化が正しく動作していることを確認できる。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker-compose down
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;本起動。
&lt;code&gt;restart: always&lt;/code&gt;が設定されているため&lt;code&gt;docker-compose down&lt;/code&gt;しない限りはホスト再起動時も自動で起動する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker-compose up -d
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;途中で操作間違えたり、DB初期化中にkillしたりして失敗したときはコンテナ・マウントディレクトリを削除して初期化。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker-compose down
sudo rm -rf postgres/ public/ redis/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;HTTP 3000番から接続し、ブラウザ上でアカウントを作成する。
検証メールが届く。
その後アカウント&lt;code&gt;hoge&lt;/code&gt;を管理者に設定する。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;docker-compose run --rm web bundle exec bin/tootctl accounts modify hoge --role admin
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;またはコマンドで管理者アカウントを作成する。ランダムパスワードが生成され、標準出力に出力される。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker-compose run --rm web bundle exec bin/tootctl accounts create hoge --email hoge@example.com --confirmed --role admin
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;http://localhost:3000&lt;/code&gt;でうまく接続できないときやリモートマシンで立てたときは、&lt;a href=&quot;https://ngrok.com/&quot;&gt;ngrok&lt;/a&gt;を使うのが便利。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# ポート3000番をランダムURLで外部からアクセスできるようにする
ngrok http 3000
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;プロフィール画像アップロード時にエラーが出てしまった。
&lt;code&gt;./public/system&lt;/code&gt;をマウント時にdockerが作成しているために&lt;code&gt;root&lt;/code&gt;所有になっているのが原因。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Errno::EACCES (Permission denied @ dir_s_mkdir - /opt/mastodon/public/system/accounts)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;docker-compose run --rm web id -u&lt;/code&gt;の出力は&lt;code&gt;991&lt;/code&gt;だったので、ホスト側で&lt;code&gt;sudo chown -R 991:991 ./public&lt;/code&gt;を実行して所有者を書き換えて解決した。&lt;/p&gt;&lt;p&gt;多人数が利用する OR 長期的に利用する予定で、VPSでホストするような場合、添付ファイルがVPSの容量を喰いつぶしてしまうことが想定されるので、そのような場合オブジェクトストレージを用意したい。&lt;/p&gt;&lt;p&gt;一人専用サーバの場合、&lt;code&gt;.env.production&lt;/code&gt;に以下の設定を追加すると便利。&lt;code&gt;/&lt;/code&gt;へのアクセスをユーザページにリダイレクトしてくれるようになり、新規登録を停止する。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;SINGLE_USER_MODE=true
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;HTTPS化のためnginxによるリバースプロキシを設定する。
GitHub上にあった設定ファイルを参考にしている。
おそらく&lt;code&gt;X-Forwarded-Proto https&lt;/code&gt;を設定しないと&lt;code&gt;https://localhost&lt;/code&gt;にリダイレクトされるという事象が起こるので注意。
証明書の設定は書いていないが、&lt;code&gt;certbot&lt;/code&gt;（Let&amp;#x27;s Encrypt）を使用する場合&lt;code&gt;sudo certbot --nginx&lt;/code&gt;で自動挿入してくれる。
Mastodon側のポート番号はデフォルトのローカルループバックアドレスへのbindをそのまま使うことを想定。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-nginx&quot;&gt;# https://github.com/tootsuite/mastodon/blob/master/nanobox/nginx-local.conf
# https://github.com/tootsuite/mastodon/blob/54192a9b6f8ee68114e3bc9ebf241099456e85f6/nanobox/nginx-local.conf

upstream rails {
  server 127.0.0.1:3000;
}

upstream node {
  server 127.0.0.1:4000;
}

map $http_upgrade $connection_upgrade {
  default upgrade;
  &amp;#x27;&amp;#x27;      close;
}

server {
  server_name mstdn.example.com;

  keepalive_timeout 70;
  client_max_body_size 80M;

  add_header Strict-Transport-Security &amp;quot;max-age=31536000&amp;quot;;

  location / {
    try_files $uri @rails;
  }

  location @rails {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header Proxy &amp;quot;&amp;quot;;
    proxy_pass_header Server;

    proxy_pass http://rails;
    proxy_buffering off;
    proxy_redirect off;

    # WebSocket
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    tcp_nodelay on;
  }

  location /api/v1/streaming {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header Proxy &amp;quot;&amp;quot;;
    proxy_pass_header Server;

    proxy_pass http://node;
    proxy_buffering off;
    proxy_redirect off;

    # WebSocket
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    tcp_nodelay on;
  }

}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;参考&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E5%8F%82%E8%80%83&quot; aria-label=&quot;参考 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/tootsuite/mastodon&quot;&gt;tootsuite/mastodon: Your self-hosted, globally interconnected microblogging community&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://docs.joinmastodon.org/admin/config/&quot;&gt;Configuring your environment - Mastodon documentation&lt;/a&gt;&lt;ul&gt;&lt;li&gt;Docker用のドキュメントはないのか?&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/tootsuite/mastodon&quot;&gt;tootsuite/mastodon - Docker Hub&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://hub.docker.com/_/postgres&quot;&gt;postgres - Docker Hub&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://hub.docker.com/_/redis&quot;&gt;redis - Docker Hub&lt;/a&gt;&lt;/li&gt;&lt;li&gt;docker-compose 2 時代の記事&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/zembutsu/items/f1f1ede26102ba27fce2&quot;&gt;Docker応用チュートリアル：Mastodon - Qiita&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/zembutsu/items/fd52a504321dd5d6f0b8&quot;&gt;Dockerで雑にMastodonを起動する方法 - Qiita&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/qqhann/items/7cd01f4b5cff4a31e053&quot;&gt;Rails5をproduction（本番環境）で起動する時に嵌ったこと - Qiita&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/kumasun/items/bf4997f181f893130041&quot;&gt;Mastodon 保守メモ - Qiita&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/kumasun/items/870769d7db4d95cde238&quot;&gt;勝手 Mastodon tootctl リファレンス - Qiita&lt;/a&gt;&lt;/li&gt;&lt;li&gt;出回っている（日本語）情報はMastodonが流行った2017年前後のものが多いと思われるが、ここはかなり新しい情報が載っているようだ&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[PulseAudioをDockerで使う]]></title><description><![CDATA[PulseAudioをDockerで使う Raspberry Piを使ったデバイスを作るときや、
デスクトップアプリケーションを動かしたいとき、
Dockerコンテナから音を鳴らしたい、ということが
よくあるのでメモしておきます。 ここでは、UbuntuまたはRaspberry…]]></description><link>https://blog.aoirint.com2020/pulseaudio_docker/</link><guid isPermaLink="false">https://blog.aoirint.com2020/pulseaudio_docker/</guid><pubDate>Sat, 14 Nov 2020 05:30:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;pulseaudioをdockerで使う&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#pulseaudio%E3%82%92docker%E3%81%A7%E4%BD%BF%E3%81%86&quot; aria-label=&quot;pulseaudioをdockerで使う permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PulseAudioをDockerで使う&lt;/h1&gt;&lt;p&gt;Raspberry Piを使ったデバイスを作るときや、
デスクトップアプリケーションを動かしたいとき、
Dockerコンテナから音を鳴らしたい、ということが
よくあるのでメモしておきます。&lt;/p&gt;&lt;p&gt;ここでは、UbuntuまたはRaspberry Pi OS上でPulseAudio・Dockerを一般ユーザで動かすことを前提に進めていきます。&lt;/p&gt;&lt;h2 id=&quot;いろいろ設定が必要&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%81%84%E3%82%8D%E3%81%84%E3%82%8D%E8%A8%AD%E5%AE%9A%E3%81%8C%E5%BF%85%E8%A6%81&quot; aria-label=&quot;いろいろ設定が必要 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;いろいろ設定が必要&lt;/h2&gt;&lt;p&gt;今のところ、PulseAudioをDocker内から使うには
ホスト側でそれなりの設定が必要になるほか、
Docker内ユーザのUID・GIDをホストユーザのUID・GIDと同じにすることが
必要であるように思っています。
ホスト側のセキュリティを緩めればできるかもですが、
調査が必要なので今回は扱いません。&lt;/p&gt;&lt;h2 id=&quot;ホスト側pulseaudioの設定&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%9B%E3%82%B9%E3%83%88%E5%81%B4pulseaudio%E3%81%AE%E8%A8%AD%E5%AE%9A&quot; aria-label=&quot;ホスト側pulseaudioの設定 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ホスト側PulseAudioの設定&lt;/h2&gt;&lt;p&gt;以下の内容は、デスクトップ環境（Ubuntu Desktop）などではすでに設定されているかもしれません。
Raspberry Pi OS Lite（2020-08-20）では設定されていなかったようなので、手順を書いておきます。&lt;/p&gt;&lt;p&gt;まずはホストに&lt;code&gt;PulseAudio&lt;/code&gt;をインストールしておきます。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo apt install pulseaudio
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;次はホストでのPulseAudioの起動設定です。
ホストOSが起動してから、手動でPulseAudioを起動することはあまり考えられないので、
OSの起動時にPulseAudioが動いていた方がいいでしょう。&lt;/p&gt;&lt;p&gt;OS起動時などのプロセス（サービス）の自動起動は&lt;code&gt;systemd&lt;/code&gt;で管理されていて、
&lt;code&gt;systemctl&lt;/code&gt;コマンドでサービスの起動停止や状態管理をします。
サービスの設定ファイルである&lt;code&gt;*.service&lt;/code&gt;ファイルは&lt;code&gt;/etc/systemd/system&lt;/code&gt;に配置されています。&lt;/p&gt;&lt;p&gt;しかしここは当然&lt;code&gt;root&lt;/code&gt;ユーザしかいじれないので、一般ユーザが同様に自動起動をするためのコマンドとして、&lt;code&gt;systemctl --user&lt;/code&gt;コマンドがあります。
このコマンドを使用するには、あらかじめ&lt;code&gt;root&lt;/code&gt;権限で設定が必要なようです。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo loginctl enable-linger $USER
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これでユーザ名&lt;code&gt;$USER&lt;/code&gt;（現在のシェルのユーザ名）で&lt;code&gt;systemctl --user&lt;/code&gt;が使えるようになるはずです。&lt;/p&gt;&lt;p&gt;&lt;code&gt;systemd&lt;/code&gt;の一般ユーザ用の設定は&lt;code&gt;~/.config/systemd/user&lt;/code&gt;に配置します。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://gist.github.com/kafene/32a07cac0373409e31f5bfe981eefb19&quot;&gt;Pulseaudio via systemd --user | Gist by @kafene&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;こちらのGistの設定ファイルが有用だったので使わせてもらいます。&lt;/p&gt;&lt;p&gt;~/.config/systemd/user/pulseaudio.service&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-systemd&quot;&gt;[Unit]
Description=Pulseaudio Sound Service
Requires=pulseaudio.socket

[Service]
Type=notify
ExecStart=/usr/bin/pulseaudio --verbose --daemonize=no
ExecStartPost=/usr/bin/pactl load-module module-alsa-sink
Restart=on-failure

[Install]
Also=pulseaudio.socket
WantedBy=default.target
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;~/.config/systemd/user/pulseaudio.socket&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-systemd&quot;&gt;[Unit]
Description=Pulseaudio Sound System

[Socket]
Priority=6
Backlog=5
ListenStream=%t/pulse/native

[Install]
WantedBy=sockets.target
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;PulseAudioを手動で起動するときは&lt;code&gt;pulseaudio --start&lt;/code&gt;を使いますが、
ここではkillした上でサービスの自動起動を有効にし、&lt;code&gt;systemd&lt;/code&gt;を使ってPulseAudioを再起動します。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;pulseaudio --kill

systemctl --user daemon-reload
systemctl --user enable pulseaudio.service
systemctl --user enable pulseaudio.socket

systemctl --user start pulseaudio.service
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;docker側の設定&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker%E5%81%B4%E3%81%AE%E8%A8%AD%E5%AE%9A&quot; aria-label=&quot;docker側の設定 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker側の設定&lt;/h2&gt;&lt;p&gt;まず、Dockerコンテナの作業ユーザを&lt;code&gt;root&lt;/code&gt;ではなく一般ユーザにします。
また、ここではホストのPulseAudioと通信するため、
Dockerコンテナを作成したユーザと同じ&lt;code&gt;PID&lt;/code&gt;・&lt;code&gt;GID&lt;/code&gt;をもつユーザにします。&lt;/p&gt;&lt;p&gt;DockerイメージにはPulseAudioに加えて、
音声ファイル再生コマンド&lt;code&gt;play&lt;/code&gt;を使うため、&lt;code&gt;sox&lt;/code&gt;をインストールしています。&lt;/p&gt;&lt;p&gt;PulseAudioが起動しているとき、
ユーザごとの&lt;code&gt;${XDG_RUNTIME_DIR}/pulse/native&lt;/code&gt;(&lt;code&gt;%t/pulse/native&lt;/code&gt;、&lt;code&gt;/run/user/$UID/pulse/native&lt;/code&gt;)に
PulseAudioのプロセスと通信するUnixソケットファイルが生成されます。
また、認証情報として&lt;code&gt;~/.config/pulse/cookie&lt;/code&gt;が生成されます。
今回はDockerコンテナにこれらのファイルをマウントすることでPulseAudioと通信していきます。&lt;/p&gt;&lt;h3 id=&quot;起動コマンドを使った設定&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E8%B5%B7%E5%8B%95%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E8%A8%AD%E5%AE%9A&quot; aria-label=&quot;起動コマンドを使った設定 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;起動コマンドを使った設定&lt;/h3&gt;&lt;p&gt;Dockerfile&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-dockerfile&quot;&gt;RUN apt update &amp;amp;&amp;amp; apt install -y \
  pulseaudio \
  sox \
    libsox-fmt-all
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ビルドします。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker build . -t aoirint/pulseaudio
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run \
  -u &amp;quot;$(id -u):$(id -g)&amp;quot;
  -v
  aoirint/pulseaudio

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;docker-composeを使った設定&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker-compose%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E8%A8%AD%E5%AE%9A&quot; aria-label=&quot;docker composeを使った設定 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;docker-composeを使った設定&lt;/h3&gt;&lt;h3 id=&quot;エントリポイントを使った設定&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%A8%E3%83%B3%E3%83%88%E3%83%AA%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E8%A8%AD%E5%AE%9A&quot; aria-label=&quot;エントリポイントを使った設定 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;エントリポイントを使った設定&lt;/h3&gt;&lt;p&gt;一応、エントリポイント（&lt;code&gt;ENTRYPOINT&lt;/code&gt;、Dockerコンテナ起動時に毎回実行されるコマンド）を
使う方法を書いておきます。
ここでは、&lt;code&gt;gosu&lt;/code&gt;を使って&lt;code&gt;CMD&lt;/code&gt;（&lt;code&gt;ENTRYPOINT&lt;/code&gt;の引数、またはデフォルトで実行されるコマンド）を
一般ユーザで実行するようにします。&lt;/p&gt;&lt;p&gt;Dockerfile&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-dockerfile&quot;&gt;RUN apt update &amp;amp;&amp;amp; apt install -y \
  pulseaudio \
  sox \
    libsox-fmt-all \
  gosu

ADD ./docker-entrypoint.sh /
ENTRYPOINT [ &amp;quot;/docker-entrypoint.sh&amp;quot; ]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;docker-entrypoint.sh（ホスト側で実行権限を付与）&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;#!/bin/sh

&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[ソース公開するArduinoプログラムに秘密情報を埋め込む]]></title><description><![CDATA[ソース公開するArduinoプログラムに秘密情報を埋め込む aoirint/RoomSystemSensorESP32: ESP32とFirebaseを使った部屋センシング・オンライン化 クライアント の開発中に
Arduinoプログラム（ .ino ）にWiFi…]]></description><link>https://blog.aoirint.com2020/arduino_secret_info/</link><guid isPermaLink="false">https://blog.aoirint.com2020/arduino_secret_info/</guid><pubDate>Sun, 08 Nov 2020 23:10:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;ソース公開するarduinoプログラムに秘密情報を埋め込む&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%BD%E3%83%BC%E3%82%B9%E5%85%AC%E9%96%8B%E3%81%99%E3%82%8Barduino%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%81%AB%E7%A7%98%E5%AF%86%E6%83%85%E5%A0%B1%E3%82%92%E5%9F%8B%E3%82%81%E8%BE%BC%E3%82%80&quot; aria-label=&quot;ソース公開するarduinoプログラムに秘密情報を埋め込む permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ソース公開するArduinoプログラムに秘密情報を埋め込む&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/aoirint/RoomSystemSensorESP32&quot;&gt;aoirint/RoomSystemSensorESP32: ESP32とFirebaseを使った部屋センシング・オンライン化 クライアント&lt;/a&gt;の開発中に
Arduinoプログラム（&lt;code&gt;.ino&lt;/code&gt;）にWiFiパスワード・APIキーなどの秘密情報を埋め込む必要が出てきた。&lt;/p&gt;&lt;p&gt;ここでは、Arduino IDEの主要機能を持つCLIソフトウェア&lt;code&gt;arduino-cli&lt;/code&gt;を使う。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/arduino/arduino-cli&quot;&gt;arduino/arduino-cli: Arduino command line interface&lt;/a&gt;&lt;/p&gt;&lt;p&gt;arduino-cliの使い方については、別記事参照。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://blog.aoirint.com/entry/2020/arduino_cli_usage/&quot;&gt;arduino-cliの使い方 - えやみぐさ&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;秘密情報の埋め込み&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E7%A7%98%E5%AF%86%E6%83%85%E5%A0%B1%E3%81%AE%E5%9F%8B%E3%82%81%E8%BE%BC%E3%81%BF&quot; aria-label=&quot;秘密情報の埋め込み permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;秘密情報の埋め込み&lt;/h2&gt;&lt;p&gt;秘密情報の埋め込みには、以下のようなシェルスクリプト&lt;code&gt;compile.sh&lt;/code&gt;を作成するのが楽でよい。
&lt;code&gt;DEFINES=&lt;/code&gt;の部分の&lt;code&gt;-D&lt;/code&gt;から&lt;code&gt;=&lt;/code&gt;までの文字列が定数名、&lt;code&gt;=&lt;/code&gt;の右辺が定数値として
定義された状態でソースコードがコンパイルされる。
ここでは同ディレクトリの&lt;code&gt;.env&lt;/code&gt;ファイルを読み込んで使用する。
&lt;code&gt;.env&lt;/code&gt;ファイルのフォーマットはよくあるものと同じで、
改行で区切られ、&lt;code&gt;#&lt;/code&gt;から始まる行を無視する&lt;code&gt;KEY=VALUE&lt;/code&gt;形式のテキストファイル。&lt;/p&gt;&lt;p&gt;ボードへの書き込みには以下の&lt;code&gt;upload.sh&lt;/code&gt;のようなスクリプトを使うとよい。&lt;/p&gt;&lt;p&gt;&lt;code&gt;screen&lt;/code&gt;コマンドをラップするスクリプト&lt;code&gt;serialmon.sh&lt;/code&gt;もおいておく。&lt;/p&gt;&lt;h3 id=&quot;compilesh&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#compilesh&quot; aria-label=&quot;compilesh permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;compile.sh&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;#!/bin/bash

set -eu

if [ -f .env ]; then
    echo &amp;quot;Found .env file.&amp;quot;
    export $(cat .env | sed &amp;#x27;s/#.*//g&amp;#x27; | xargs)
fi


# ESP32-DevKitC
FQBN=&amp;quot;esp32:esp32:esp32&amp;quot;

# Arduino UNO
# FQBN=&amp;quot;arduino:avr:uno&amp;quot;


DEFINES=&amp;quot;-DSECRET_WIFI_SSID=$WIFI_SSID&amp;quot;
DEFINES=&amp;quot;${DEFINES} -DSECRET_WIFI_PW=$WIFI_PW&amp;quot;
DEFINES=&amp;quot;${DEFINES} -DSECRET_FIREBASE_HOST=$FIREBASE_HOST&amp;quot;
DEFINES=&amp;quot;${DEFINES} -DSECRET_FIREBASE_AUTH=$FIREBASE_AUTH&amp;quot;


SKETCH=&amp;quot;$(basename $PWD).ino&amp;quot;

arduino-cli compile \
    -b &amp;quot;$FQBN&amp;quot; \
    --build-properties \
        &amp;quot;build.defines=${DEFINES}&amp;quot; \
    &amp;quot;$SKETCH&amp;quot; &amp;quot;$@&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;プログラム側では以下のようにする。&lt;code&gt;#x&lt;/code&gt;はコメントではないので注意（文字列リテラルとして展開するマクロ）。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;#define _Q(x) #x
#define Q(x) _Q(x)

#ifdef SECRET_WIFI_SSID
  #define WIFI_SSID Q(SECRET_WIFI_SSID)
#else
  #define WIFI_SSID &amp;quot;WIFI-SSID&amp;quot;
#endif

#ifdef SECRET_WIFI_PW
  #define WIFI_PW Q(SECRET_WIFI_PW)
#else
  #define WIFI_PW &amp;quot;WIFI-PASSWORD&amp;quot;
#endif

void initWiFi() {
  WiFi.begin(WIFI_SSID, WIFI_PW);
  Serial.print(&amp;quot;WiFi &amp;quot;);
  Serial.print(WIFI_SSID);
  Serial.println(&amp;quot; connecting&amp;quot;);

  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(&amp;quot;.&amp;quot;);
    delay(100);
  }

  Serial.println();
  Serial.print(&amp;quot;WiFi connected: &amp;quot;);
  Serial.println(WiFi.localIP());
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;uploadsh&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#uploadsh&quot; aria-label=&quot;uploadsh permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;upload.sh&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;#!/bin/bash

set -eu

SERIAL_PORT=&amp;quot;$1&amp;quot;


# ESP32-DevKitC
FQBN=&amp;quot;esp32:esp32:esp32&amp;quot;

# Arduino UNO
# FQBN=&amp;quot;arduino:avr:uno&amp;quot;


SKETCH=&amp;quot;$(basename $PWD).ino&amp;quot;
ARGS=&amp;quot;${@:2}&amp;quot;

arduino-cli upload \
    -b &amp;quot;$FQBN&amp;quot; \
    -p &amp;quot;$SERIAL_PORT&amp;quot; \
    &amp;quot;$ARGS&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./upload.sh /dev/ttyACM0
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;serialmonsh&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#serialmonsh&quot; aria-label=&quot;serialmonsh permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;serialmon.sh&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;#!/bin/bash

set -eu

SERIAL_PORT=&amp;quot;$1&amp;quot;
BAUDRATE=115200

screen &amp;quot;$SERIAL_PORT&amp;quot; &amp;quot;$BAUDRATE&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./serialmon.sh /dev/ttyACM0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;閉じるには&lt;code&gt;Ctrl+A k&lt;/code&gt;を押した後に&lt;code&gt;y&lt;/code&gt;を押して&lt;code&gt;Enter&lt;/code&gt;。&lt;/p&gt;&lt;h3 id=&quot;updatesh&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#updatesh&quot; aria-label=&quot;updatesh permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;update.sh&lt;/h3&gt;&lt;p&gt;まとめて実行する&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;#!/bin/bash

set -eu

SERIAL_PORT=&amp;quot;$1&amp;quot;

./compile.sh &amp;amp;&amp;amp; ./upload.sh &amp;quot;$SERIAL_PORT&amp;quot; &amp;amp;&amp;amp; ./serialmon.sh &amp;quot;$SERIAL_PORT&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./update.sh
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;compileshの中身&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#compilesh%E3%81%AE%E4%B8%AD%E8%BA%AB&quot; aria-label=&quot;compileshの中身 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;compile.shの中身&lt;/h3&gt;&lt;p&gt;同ディレクトリ中にある&lt;code&gt;.env&lt;/code&gt;ファイルを読み込み、
C言語の定数として取り込まれる&lt;code&gt;build.defines&lt;/code&gt;に手動で変数を列挙している
（nginx Dockerのtemplate置換のように定義済みの環境変数を自動で入れ込む改良もしたい）。&lt;/p&gt;&lt;p&gt;またDEFINESの中身をエスケープしたい（変数内に&lt;code&gt; -D&lt;/code&gt;を許容したい）が、
まだやり方がわかっていない。&lt;/p&gt;&lt;h2 id=&quot;関連&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E9%96%A2%E9%80%A3&quot; aria-label=&quot;関連 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;関連&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://note.com/o3c9/n/ne14c1817be11&quot;&gt;Arduinoスケッチに安全に秘匿値を埋め込む｜o3c9｜note&lt;/a&gt;&lt;ul&gt;&lt;li&gt;Arduino IDEのコマンドライン機能を使ったりMakefile作ったりしている&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[arduino-cliの使い方]]></title><description><![CDATA[arduino-cliの使い方 インストール Installation - Arduino CLI arduino/arduino-cli Arduino CLIの公式ドキュメント に従ってインストールする。後述する screen…]]></description><link>https://blog.aoirint.com2020/arduino_cli_usage/</link><guid isPermaLink="false">https://blog.aoirint.com2020/arduino_cli_usage/</guid><pubDate>Sun, 08 Nov 2020 23:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;arduino-cliの使い方&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#arduino-cli%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9&quot; aria-label=&quot;arduino cliの使い方 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;arduino-cliの使い方&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;$ arduino-cli version
arduino-cli Version: 0.13.0 Commit: 693a045
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;インストール&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&quot; aria-label=&quot;インストール permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;インストール&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://arduino.github.io/arduino-cli/latest/installation/&quot;&gt;Installation - Arduino CLI&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/arduino/arduino-cli&quot;&gt;arduino/arduino-cli&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://arduino.github.io/arduino-cli/latest/&quot;&gt;Arduino CLIの公式ドキュメント&lt;/a&gt;に従ってインストールする。後述する&lt;code&gt;screen&lt;/code&gt;コマンドも合わせてインストールする。
&lt;code&gt;arduino-cli&lt;/code&gt;はDockerイメージも配布されているのでお好みで。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | BINDIR=~/.local/bin sh
echo &amp;quot;export PATH=\&amp;quot;\$PATH:\$HOME/.local/bin\&amp;quot;&amp;quot; &amp;gt;&amp;gt; ~/.bashrc
source ~/.bashrc

sudo apt install screen
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;プラットフォーム一覧を更新しておく。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;arduino-cli core update-index
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;シリアルポートを使うため、&lt;code&gt;dialout&lt;/code&gt;グループにユーザを追加する（&lt;code&gt;/dev/ttyACM#&lt;/code&gt;や&lt;code&gt;/dev/ttyUSB#&lt;/code&gt;のグループは&lt;code&gt;dialout&lt;/code&gt;）。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo adduser $USER dialout
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;スケッチの作成&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%B9%E3%82%B1%E3%83%83%E3%83%81%E3%81%AE%E4%BD%9C%E6%88%90&quot; aria-label=&quot;スケッチの作成 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;スケッチの作成&lt;/h2&gt;&lt;p&gt;特に特殊なファイルを必要としたりはしないので、
Arduino IDEで作成しても、好きなテキストエディタで作成してもよい。&lt;/p&gt;&lt;p&gt;一応テンプレート付きのスケッチを作成するには、&lt;code&gt;arduino-cli sketch new SKETCH_NAME&lt;/code&gt;を実行する。&lt;/p&gt;&lt;p&gt;手動で作成する場合にはArduino IDEと同様、
スケッチ名（ディレクトリ名）と同じ名前で、&lt;code&gt;SKETCH_NAME.ino&lt;/code&gt;のように
メインのソースコードを作成する。&lt;/p&gt;&lt;p&gt;以下、&lt;code&gt;arduino-cli&lt;/code&gt;のコマンドはスケッチのディレクトリで実行する。&lt;/p&gt;&lt;h2 id=&quot;fqbnの確認&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#fqbn%E3%81%AE%E7%A2%BA%E8%AA%8D&quot; aria-label=&quot;fqbnの確認 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FQBNの確認&lt;/h2&gt;&lt;p&gt;&lt;code&gt;arduino-cli&lt;/code&gt;でボードを扱うときには、ボード名にあたる&lt;code&gt;FQBN&lt;/code&gt;というコロンで区切られた文字列を使う。&lt;/p&gt;&lt;p&gt;&lt;code&gt;arduino-cli board listall&lt;/code&gt;コマンドで
&lt;code&gt;arduino-cli&lt;/code&gt;が対応しているボードのFQBN一覧が出力される。
&lt;code&gt;arduino-cli board listall esp32&lt;/code&gt;のようにキーワードを追加して、
絞り込むこともできる。&lt;/p&gt;&lt;p&gt;また、&lt;code&gt;arduino-cli board list&lt;/code&gt;コマンドでPCに接続しているボードのFQBNを調べられる場合がある（Arduino系ボードの場合？）。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Arduino UNO: &lt;code&gt;arduino:avr:uno&lt;/code&gt;&lt;/li&gt;&lt;li&gt;Arduino Nano: &lt;code&gt;arduino:avr:nano&lt;/code&gt;&lt;ul&gt;&lt;li&gt;ブートローダが古い場合?: &lt;a href=&quot;https://github.com/arduino/arduino-cli/issues/29&quot;&gt;https://github.com/arduino/arduino-cli/issues/29&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Arduino Nano Every: &lt;code&gt;arduino:megaavr:nona4809&lt;/code&gt;&lt;/li&gt;&lt;li&gt;ESP32-DevKitC: &lt;code&gt;esp32:esp32:esp32&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;プラットフォームコアのインストール&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%97%E3%83%A9%E3%83%83%E3%83%88%E3%83%95%E3%82%A9%E3%83%BC%E3%83%A0%E3%82%B3%E3%82%A2%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&quot; aria-label=&quot;プラットフォームコアのインストール permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;プラットフォームコアのインストール&lt;/h2&gt;&lt;p&gt;コンパイルには別途ボードに対応するビルドツールセット（プラットフォームコア）をインストールする必要があり、FQBNから以下のようにコマンドを実行する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Arduino (AVR)
arduino-cli core install arduino:avr

# Arduino Nano Every ほか
arduino-cli core install arduino:megaavr

# ESP32
arduino-cli core install esp32:esp32
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;ライブラリのインストール&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&quot; aria-label=&quot;ライブラリのインストール permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ライブラリのインストール&lt;/h2&gt;&lt;p&gt;ライブラリの導入には、&lt;code&gt;arduino-cli lib&lt;/code&gt;コマンドを使う。
例えば、&lt;code&gt;ArduinoJson&lt;/code&gt;ライブラリを導入するときは、
以下のように検索コマンドで該当するライブラリの名前を確かめ、インストールコマンドを実行する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;arduino-cli lib search ArduinoJson

arduino-cli lib install ArduinoJson
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;スケッチのコンパイル&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%B9%E3%82%B1%E3%83%83%E3%83%81%E3%81%AE%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%AB&quot; aria-label=&quot;スケッチのコンパイル permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;スケッチのコンパイル&lt;/h2&gt;&lt;p&gt;ボードに書き込む前に、まずスケッチ（ソースコード）をコンパイルする。&lt;/p&gt;&lt;p&gt;Arduino UNO（FQBN：&lt;code&gt;arduino:avr:uno&lt;/code&gt;）に書き込むためのスケッチをコンパイルする。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;arduino-cli compile -b arduino:avr:uno
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;コンパイル成果物はデフォルトで&lt;code&gt;./build&lt;/code&gt;ディレクトリに書き出されるので、
&lt;code&gt;.gitignore&lt;/code&gt;などに追加しておく。&lt;/p&gt;&lt;p&gt;Arduino Nano EveryはATmega4809を搭載しているが、デフォルトでArduino UnoやNanoのATmega328Pをエミュレートする互換モードになる。
違いはよくわからないが、低レベルAPIを直接使っている場合に影響があるかもしれない。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# 互換モード（デフォルト）
arduino-cli compile -b arduino:megaavr:nona4809

# 通常モード
arduino-cli compile -b arduino:megaavr:nona4809:mode=off
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;$ arduino-cli board details arduino:megaavr:nona4809
Board name:                Arduino Nano Every                                                            
FQBN:                      arduino:megaavr:nona4809                                                      
Board version:             1.8.7                                                                         

Official Arduino board:    ✔                                                                             

Identification properties: VID:0x2341 PID:0x0058                                                         

Package name:              arduino                                                                       
Package maintainer:        Arduino                                                                       
Package URL:               https://downloads.arduino.cc/packages/package_index.json                      
Package website:           http://www.arduino.cc/                                                        
Package online help:       http://www.arduino.cc/en/Reference/HomePage                                   

Platform name:             Arduino megaAVR Boards                                                        
Platform category:         Arduino                                                                       
Platform architecture:     megaavr                                                                       
Platform URL:              http://downloads.arduino.cc/cores/core-ArduinoCore-megaavr-1.8.7.tar.bz2      
Platform file name:        core-ArduinoCore-megaavr-1.8.7.tar.bz2                                        
Platform size (bytes):     875098                                                                        
Platform checksum:         SHA-256:24853e59bfcfcfa09d7ab51011b65f2246e082228b1f14fdaa4cbb2c6aae23b4      

Required tool:             arduino:avr-gcc                                                                                                    7.3.0-atmel3.6.1-arduino5

Required tool:             arduino:avrdude                                                                                                    6.3.0-arduino17          

Required tool:             arduino:arduinoOTA                                                                                                 1.3.0                    

Option:                    Registers emulation                                                                                                mode                     
                           ATMEGA328                                                                      ✔                                   mode=on                  
                           None (ATMEGA4809)                                                                                                  mode=off                 
Programmers:               Id                                                                             Name                               
                           medbg                                                                          Onboard Atmel mEDBG (UNO WiFi Rev2)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;スケッチの書き込み&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%B9%E3%82%B1%E3%83%83%E3%83%81%E3%81%AE%E6%9B%B8%E3%81%8D%E8%BE%BC%E3%81%BF&quot; aria-label=&quot;スケッチの書き込み permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;スケッチの書き込み&lt;/h2&gt;&lt;p&gt;ボードにコンパイルしたスケッチを書き込む。
シリアルポートを&lt;code&gt;-p&lt;/code&gt;オプションで指定する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;arduino-cli upload -b arduino:avr:uno -p /dev/ttyACM0
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;シリアルモニタ&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%B7%E3%83%AA%E3%82%A2%E3%83%AB%E3%83%A2%E3%83%8B%E3%82%BF&quot; aria-label=&quot;シリアルモニタ permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;シリアルモニタ&lt;/h2&gt;&lt;p&gt;&lt;code&gt;arduino-cli&lt;/code&gt;にはシリアルモニタ機能がない（追加される予定もない）ので、
ほかのツールを使う必要がある。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/arduino/arduino-cli/issues/876&quot;&gt;Feature Request: Serial Monitor · Issue #876 · arduino/arduino-cli&lt;/a&gt;&lt;ul&gt;&lt;li&gt;機能提案はリジェクトされている（別のツールを使ってね）&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;code&gt;screen&lt;/code&gt;コマンドがよく使われるようだったので、これを使う。
Ubuntuの場合&lt;code&gt;apt install screen&lt;/code&gt;で導入できる。
/dev/ttyACM0の部分にはシリアルポート名を、115200の部分にはbaudrateを入れる。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;screen /dev/ttyACM0 115200
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;閉じるには&lt;code&gt;Ctrl+a k&lt;/code&gt;を入力する。&lt;/p&gt;&lt;h2 id=&quot;プロキシ設定&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7%E8%A8%AD%E5%AE%9A&quot; aria-label=&quot;プロキシ設定 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;プロキシ設定&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/arduino/arduino-cli/issues/660&quot;&gt;&amp;quot;board list&amp;quot; command doesn&amp;#x27;t follow proxy configuration · Issue #660 · arduino/arduino-cli&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/arduino/arduino-pro-ide/issues/271&quot;&gt;how to use net proxy? · Issue #271 · arduino/arduino-pro-ide&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;code&gt;arduino-cli&lt;/code&gt;の通信にプロキシを設定するには、
コンフィグファイルを作成する必要がある。&lt;/p&gt;&lt;p&gt;&lt;code&gt;arduino-cli config init&lt;/code&gt;を実行すると
&lt;code&gt;arduino-cli&lt;/code&gt;の設定関係ディレクトリに&lt;code&gt;arduino-cli.yml&lt;/code&gt;が生成される。
私の環境では、&lt;code&gt;~/.arduino15/arduino-cli.yml&lt;/code&gt;が生成された。
これを開き、以下のようにプロキシ設定を追加する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;board_manager:
  additional_urls: []

（略）

network:
  proxy: http://proxy:port
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;関連&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E9%96%A2%E9%80%A3&quot; aria-label=&quot;関連 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;関連&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://l-w-i.net/t/arduino/cli_001.txt&quot;&gt;[Arduino] arduino-cli初期設定(内蔵LEDでLチカ) - Life with IT&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[ESP32でDFPlayerを使う]]></title><description><![CDATA[ESP32でDFPlayerを使う メモリやピンが少ない、
出力電流が小さい、DACがない/解像度が低いといった
問題の生じるマイコンで、音声を再生するのに便利な
音声再生モジュールとして、DFPlayerを使う。]]></description><link>https://blog.aoirint.com2020/esp32_dfplayer/</link><guid isPermaLink="false">https://blog.aoirint.com2020/esp32_dfplayer/</guid><pubDate>Sun, 08 Nov 2020 22:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;esp32でdfplayerを使う&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#esp32%E3%81%A7dfplayer%E3%82%92%E4%BD%BF%E3%81%86&quot; aria-label=&quot;esp32でdfplayerを使う permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ESP32でDFPlayerを使う&lt;/h1&gt;&lt;p&gt;メモリやピンが少ない、
出力電流が小さい、DACがない/解像度が低いといった
問題の生じるマイコンで、音声を再生するのに便利な
音声再生モジュールとして、DFPlayerを使う。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ESP32でFirebase Realtime Databaseを使う]]></title><description><![CDATA[ESP32でFirebase Realtime Databaseを使う 通常Admin SDKを使った開発を刷る場合には
サービスアカウントを作成し、jsonで秘密鍵を取得するが、
今回はデータベースシークレット（レガシー）を取得する。 TODO:]]></description><link>https://blog.aoirint.com2020/esp32_firebase_realtime_database/</link><guid isPermaLink="false">https://blog.aoirint.com2020/esp32_firebase_realtime_database/</guid><pubDate>Sun, 08 Nov 2020 22:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;esp32でfirebase-realtime-databaseを使う&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#esp32%E3%81%A7firebase-realtime-database%E3%82%92%E4%BD%BF%E3%81%86&quot; aria-label=&quot;esp32でfirebase realtime databaseを使う permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ESP32でFirebase Realtime Databaseを使う&lt;/h1&gt;&lt;p&gt;通常Admin SDKを使った開発を刷る場合には
サービスアカウントを作成し、jsonで秘密鍵を取得するが、
今回はデータベースシークレット（レガシー）を取得する。&lt;/p&gt;&lt;p&gt;TODO:&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Imagemagickで画像のDPIを変更する]]></title><description><![CDATA[Imagemagickで画像のDPIを変更する 画像のDPI（dot per inch）がばらばらの場合、
TeXで画像を取り込んだときのサイズがばらばらになるため統一する。 以下はIN.pngをDPI 72にしてOUT.pngに出力するコマンド。 もともとのDPI…]]></description><link>https://blog.aoirint.com2020/change_image_dpi_imagemagick/</link><guid isPermaLink="false">https://blog.aoirint.com2020/change_image_dpi_imagemagick/</guid><pubDate>Sun, 08 Nov 2020 21:30:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;imagemagickで画像のdpiを変更する&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#imagemagick%E3%81%A7%E7%94%BB%E5%83%8F%E3%81%AEdpi%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B&quot; aria-label=&quot;imagemagickで画像のdpiを変更する permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Imagemagickで画像のDPIを変更する&lt;/h1&gt;&lt;p&gt;画像のDPI（dot per inch）がばらばらの場合、
TeXで画像を取り込んだときのサイズがばらばらになるため統一する。&lt;/p&gt;&lt;p&gt;以下はIN.pngをDPI 72にしてOUT.pngに出力するコマンド。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;convert -density 72 -units PixelsPerInch IN.png OUT.png
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;もともとのDPIを調べるコマンド。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;identify -format &amp;#x27;%x,%y\n&amp;#x27; IN.png
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[OBS Studio on Ubuntu + NVIDIA GPUでWindow Captureを動作させる]]></title><description><![CDATA[OBS Studio on Ubuntu + NVIDIA GPUでWindow Captureを動作させる Ubuntu + NVIDIA GPU環境では、OBS StudioでWindow Capture…]]></description><link>https://blog.aoirint.com2020/obs_ubuntu_nvidia_window_capture/</link><guid isPermaLink="false">https://blog.aoirint.com2020/obs_ubuntu_nvidia_window_capture/</guid><pubDate>Sun, 08 Nov 2020 21:10:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;obs-studio-on-ubuntu--nvidia-gpuでwindow-captureを動作させる&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#obs-studio-on-ubuntu--nvidia-gpu%E3%81%A7window-capture%E3%82%92%E5%8B%95%E4%BD%9C%E3%81%95%E3%81%9B%E3%82%8B&quot; aria-label=&quot;obs studio on ubuntu  nvidia gpuでwindow captureを動作させる permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OBS Studio on Ubuntu + NVIDIA GPUでWindow Captureを動作させる&lt;/h1&gt;&lt;p&gt;Ubuntu + NVIDIA GPU環境では、OBS StudioでWindow Captureしようとすると
一部のアプリケーションで黒画面の表示になり動作しない。
おそらくOpenGLで描画しているものが対象。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://obsproject.com/forum/threads/solved-window-capture-black-screen.47082/&quot;&gt;Bug Report - [SOLVED] Window Capture Black Screen | OBS Forums&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;私の環境では
&lt;code&gt;Window Capture (Xcomposite)&lt;/code&gt;の設定欄をスクロールして
&lt;code&gt;Use alpha-less texture format (Mesa workaround)&lt;/code&gt;にチェックを入れることで
正しく表示されるようになった。&lt;/p&gt;&lt;p&gt;Ubuntu 18.04, X.Org X Server 1.19.6, GDM 3.28.3, NVIDIA Driver 440.33.01、OBS Studio 26.0.2 (64bit)で動作確認。&lt;/p&gt;&lt;p&gt;OSの再起動や、フルスクリーンとウインドウ表示の切り替えなどが有効な場合もある。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[PulseAudioで特定のアプリケーションからの音声出力だけを分離する]]></title><description><![CDATA[PulseAudioで特定のアプリケーションからの音声出力だけを分離する https://www.freedesktop.org/wiki/Software/PulseAudio/Documentation/User/Modules/#module-loopback…]]></description><link>https://blog.aoirint.com2020/pulseaudio_split_output/</link><guid isPermaLink="false">https://blog.aoirint.com2020/pulseaudio_split_output/</guid><pubDate>Sun, 08 Nov 2020 21:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;pulseaudioで特定のアプリケーションからの音声出力だけを分離する&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#pulseaudio%E3%81%A7%E7%89%B9%E5%AE%9A%E3%81%AE%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%8B%E3%82%89%E3%81%AE%E9%9F%B3%E5%A3%B0%E5%87%BA%E5%8A%9B%E3%81%A0%E3%81%91%E3%82%92%E5%88%86%E9%9B%A2%E3%81%99%E3%82%8B&quot; aria-label=&quot;pulseaudioで特定のアプリケーションからの音声出力だけを分離する permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PulseAudioで特定のアプリケーションからの音声出力だけを分離する&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.freedesktop.org/wiki/Software/PulseAudio/Documentation/User/Modules/#module-loopback&quot;&gt;https://www.freedesktop.org/wiki/Software/PulseAudio/Documentation/User/Modules/#module-loopback&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;以下のコマンドで仮想出力デバイス&lt;code&gt;DummyOutput0&lt;/code&gt;と、そのループバック&lt;code&gt;Loopback from Monitor of DummyOutput0&lt;/code&gt;が追加される。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pacmd load-module module-null-sink sink_name=DummyOutput0 sink_properties=device.description=DummyOutput0
pacmd load-module module-loopback source=DummyOutput0.monitor source_dont_move=true
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;pavucontrol&lt;/code&gt;または&lt;code&gt;PulseAudio Volume Control&lt;/code&gt;の&lt;code&gt;Playback&lt;/code&gt;から
目的のアプリケーションの出力先を&lt;code&gt;DummyOutput0&lt;/code&gt;にする。
また、&lt;code&gt;Loopback from Monitor of DummyOutput0&lt;/code&gt;の出力先を
希望のスピーカーにすることで音声出力を分離しつつ同時に視聴できる。&lt;/p&gt;&lt;p&gt;&lt;code&gt;source_dont_move=true&lt;/code&gt;は、デフォルトの入力デバイス変更時にLoopbackの入力デバイスも変更されてしまうのを防ぐオプション。
&lt;code&gt;pavucontrol&lt;/code&gt;からも変更できなくなる。&lt;/p&gt;&lt;p&gt;仮想出力デバイスとループバックを削除するには、以下のコマンドを実行する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pacmd unload-module module-loopback
pacmd unload-module module-null-sink
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;ログイン時に自動作成する&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3%E6%99%82%E3%81%AB%E8%87%AA%E5%8B%95%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B&quot; aria-label=&quot;ログイン時に自動作成する permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ログイン時に自動作成する&lt;/h2&gt;&lt;h3 id=&quot;etcpulsedefaultpa&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#etcpulsedefaultpa&quot; aria-label=&quot;etcpulsedefaultpa permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/etc/pulse/default.pa&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-pulseaudio&quot;&gt;# Custom
load-module module-null-sink sink_name=DummyOutputApp sink_properties=device.description=&amp;quot;DummyOutputApp&amp;quot;
load-module module-loopback source=DummyOutputApp.monitor source_dont_move=true

load-module module-null-sink sink_name=DummyOutputVoiceChat sink_properties=device.description=&amp;quot;DummyOutputVoiceChat&amp;quot;
load-module module-loopback source=DummyOutputVoiceChat.monitor source_dont_move=true

load-module module-null-sink sink_name=DummyOutputGeneral0 sink_properties=device.description=&amp;quot;DummyOutputGeneral0&amp;quot;
load-module module-loopback source=DummyOutputGeneral0.monitor source_dont_move=true

load-module module-null-sink sink_name=DummyOutputGeneral1 sink_properties=device.description=&amp;quot;DummyOutputGeneral1&amp;quot;
load-module module-loopback source=DummyOutputGeneral1.monitor source_dont_move=true
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;pulseaudioの再起動&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#pulseaudio%E3%81%AE%E5%86%8D%E8%B5%B7%E5%8B%95&quot; aria-label=&quot;pulseaudioの再起動 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PulseAudioの再起動&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;pulseaudio --kill
pulseaudio --start
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;デバイス接続時の入出力デバイス自動切り替えを無効化する&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%87%E3%83%90%E3%82%A4%E3%82%B9%E6%8E%A5%E7%B6%9A%E6%99%82%E3%81%AE%E5%85%A5%E5%87%BA%E5%8A%9B%E3%83%87%E3%83%90%E3%82%A4%E3%82%B9%E8%87%AA%E5%8B%95%E5%88%87%E3%82%8A%E6%9B%BF%E3%81%88%E3%82%92%E7%84%A1%E5%8A%B9%E5%8C%96%E3%81%99%E3%82%8B&quot; aria-label=&quot;デバイス接続時の入出力デバイス自動切り替えを無効化する permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;デバイス接続時の入出力デバイス自動切り替えを無効化する&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://askubuntu.com/questions/1061414/how-to-disable-pulseaudio-automatic-device-switch&quot;&gt;https://askubuntu.com/questions/1061414/how-to-disable-pulseaudio-automatic-device-switch&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;新しい出力デバイスが検出されたとき、デフォルト出力デバイスが切り替わるのを防ぐ。&lt;/p&gt;&lt;h3 id=&quot;etcpulsedefaultpa-1&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#etcpulsedefaultpa-1&quot; aria-label=&quot;etcpulsedefaultpa 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/etc/pulse/default.pa&lt;/h3&gt;&lt;p&gt;&lt;code&gt;load-module module-switch-on-port-available&lt;/code&gt;、&lt;code&gt;load-module module-switch-on-connect&lt;/code&gt;をコメントアウトする。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-pulseaudio&quot;&gt;### Should be after module-*-restore but before module-*-detect
#load-module module-switch-on-port-available

### Use hot-plugged devices like Bluetooth or USB automatically (LP: #1702794)
#.ifexists module-switch-on-connect.so
#load-module module-switch-on-connect
#.endif
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;pulseaudioの再起動-1&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#pulseaudio%E3%81%AE%E5%86%8D%E8%B5%B7%E5%8B%95-1&quot; aria-label=&quot;pulseaudioの再起動 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PulseAudioの再起動&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;pulseaudio --kill
pulseaudio --start
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;電源メニューから音声デバイスを切り替えられるようにするgnome-shell-extension&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E9%9B%BB%E6%BA%90%E3%83%A1%E3%83%8B%E3%83%A5%E3%83%BC%E3%81%8B%E3%82%89%E9%9F%B3%E5%A3%B0%E3%83%87%E3%83%90%E3%82%A4%E3%82%B9%E3%82%92%E5%88%87%E3%82%8A%E6%9B%BF%E3%81%88%E3%82%89%E3%82%8C%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8Bgnome-shell-extension&quot; aria-label=&quot;電源メニューから音声デバイスを切り替えられるようにするgnome shell extension permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;電源メニューから音声デバイスを切り替えられるようにするGnome Shell Extension&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://extensions.gnome.org/extension/906/sound-output-device-chooser/&quot;&gt;https://extensions.gnome.org/extension/906/sound-output-device-chooser/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/kgshank/gse-sound-output-device-chooser&quot;&gt;https://github.com/kgshank/gse-sound-output-device-chooser&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;PulseAudioを再起動するとデバイス一覧に古い項目が残り、選択するとGnome Desktopがフリーズするバグがある。
PulseAudio再起動後はAlt+F2でrコマンドを実行することで拡張機能がリロードされ、この問題を回避できる。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ESP32とFirebaseでIoTセンサシステムを構築する]]></title><description><![CDATA[テンプレート]]></description><link>https://blog.aoirint.com2020/esp32_firebase_sensor/</link><guid isPermaLink="false">https://blog.aoirint.com2020/esp32_firebase_sensor/</guid><pubDate>Mon, 02 Nov 2020 15:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;テンプレート&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88&quot; aria-label=&quot;テンプレート permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;テンプレート&lt;/h1&gt;</content:encoded></item><item><title><![CDATA[テンプレート]]></title><description><![CDATA[テンプレート]]></description><link>https://blog.aoirint.com2020/</link><guid isPermaLink="false">https://blog.aoirint.com2020/</guid><pubDate>Sat, 31 Oct 2020 15:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;テンプレート&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88&quot; aria-label=&quot;テンプレート permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;テンプレート&lt;/h1&gt;</content:encoded></item><item><title><![CDATA[テンプレート]]></title><description><![CDATA[テンプレート]]></description><link>https://blog.aoirint.com2021/</link><guid isPermaLink="false">https://blog.aoirint.com2021/</guid><pubDate>Sat, 31 Oct 2020 15:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;テンプレート&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88&quot; aria-label=&quot;テンプレート permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;テンプレート&lt;/h1&gt;</content:encoded></item><item><title><![CDATA[Docker + Docker Compose on Vagrant Ubuntu Server]]></title><description><![CDATA[Docker + Docker Compose on Vagrant Ubuntu Server Downloads – Oracle VM VirtualBox Downloads | Vagrant by HashiCorp Vagrant box ubuntu/bionic…]]></description><link>https://blog.aoirint.com2020/docker_on_vagrant_ubuntu_server/</link><guid isPermaLink="false">https://blog.aoirint.com2020/docker_on_vagrant_ubuntu_server/</guid><pubDate>Thu, 22 Oct 2020 07:30:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;docker--docker-compose-on-vagrant-ubuntu-server&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker--docker-compose-on-vagrant-ubuntu-server&quot; aria-label=&quot;docker  docker compose on vagrant ubuntu server permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker + Docker Compose on Vagrant Ubuntu Server&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;Downloads – Oracle VM VirtualBox&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot;&gt;Downloads | Vagrant by HashiCorp&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://app.vagrantup.com/ubuntu/boxes/bionic64&quot;&gt;Vagrant box ubuntu/bionic64 - Vagrant Cloud&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/install/ubuntu/&quot;&gt;Install Docker Engine on Ubuntu | Docker Documentation&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/compose/install/&quot;&gt;Install Docker Compose | Docker Documentation&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;kvm (qemu)を使うこともできるらしいが、対応したboxを用意する必要があるのでVirtualBoxを使う。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://knowledge.sakura.ad.jp/2535/&quot;&gt;KVM用仮想マシンをVagrantで手軽に作る | さくらのナレッジ&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;commands&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#commands&quot; aria-label=&quot;commands permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commands&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# 起動
vagrant up

# 削除
vagrant destroy

# ssh
vagrant ssh

# 停止（シャットダウン）
vagrant halt
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;vagrantfile&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#vagrantfile&quot; aria-label=&quot;vagrantfile permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vagrantfile&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(&amp;quot;2&amp;quot;) do |config|
  config.vm.box = &amp;quot;ubuntu/bionic64&amp;quot;
  config.vm.hostname = &amp;quot;ubuntu-docker&amp;quot;

  # config.vm.network &amp;quot;forwarded_port&amp;quot;, guest: 80, host: 8080
  # config.vm.network &amp;quot;forwarded_port&amp;quot;, guest: 80, host: 8080, host_ip: &amp;quot;127.0.0.1&amp;quot;

  config.vm.provider &amp;quot;virtualbox&amp;quot; do |vb|
    vb.name = &amp;quot;ubuntu-docker&amp;quot;
    vb.memory = &amp;quot;1024&amp;quot;
    # vb.gui = true
  end

  config.vm.provision &amp;quot;shell&amp;quot;, inline: &amp;lt;&amp;lt;-SHELL
    apt-get update

    apt-get install -y \
      apt-transport-https \
      ca-certificates \
      curl \
      gnupg-agent \
      software-properties-common

    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -

    add-apt-repository -y \
      &amp;quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \
      $(lsb_release -cs) \
      stable&amp;quot;

    apt-get update

    apt-get install -y \
      docker-ce \
      docker-ce-cli \
      containerd.io

    curl -L &amp;quot;https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)&amp;quot; -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose

    adduser vagrant docker
  SHELL
end
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[Dockerでプロキシ・バーチャルホストに対応したSSH Serverを立てる]]></title><description><![CDATA[Dockerでプロキシ・バーチャルホストに対応したSSH Serverを立てる 本記事は、ホストのSSHサーバと独立した仮想SSHサーバを立てることを目標とする。 クライアントが、限られたサーバ側ポート（22、80、44…]]></description><link>https://blog.aoirint.com2020/docker_sshd/</link><guid isPermaLink="false">https://blog.aoirint.com2020/docker_sshd/</guid><pubDate>Thu, 15 Oct 2020 14:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;dockerでプロキシバーチャルホストに対応したssh-serverを立てる&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker%E3%81%A7%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7%E3%83%90%E3%83%BC%E3%83%81%E3%83%A3%E3%83%AB%E3%83%9B%E3%82%B9%E3%83%88%E3%81%AB%E5%AF%BE%E5%BF%9C%E3%81%97%E3%81%9Fssh-server%E3%82%92%E7%AB%8B%E3%81%A6%E3%82%8B&quot; aria-label=&quot;dockerでプロキシバーチャルホストに対応したssh serverを立てる permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dockerでプロキシ・バーチャルホストに対応したSSH Serverを立てる&lt;/h1&gt;&lt;p&gt;本記事は、ホストのSSHサーバと独立した仮想SSHサーバを立てることを目標とする。&lt;/p&gt;&lt;p&gt;クライアントが、限られたサーバ側ポート（22、80、443）の通信のみが通過できるネットワークに接続しているとき、
ホストで動かしているサービスと同じサービスを新たに立てようとすると
ポート番号が重複してしまい、接続可能な状態にすることができない。&lt;/p&gt;&lt;p&gt;HTTPではWebサーバのバーチャルホスト機能を使って
ドメインを切り分けるなどしてポート重複を回避できるが、
SSHではプロトコル上、HTTPのようにホスト名を使ってバーチャルホストを実現することができない。&lt;/p&gt;&lt;p&gt;本記事では、以下のようにリバースプロキシ・HTTPプロキシを
SSHサーバの前段階に設けることでHTTPと同様なアクセス振り分けを可能にする。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;クライアント
→クライアント側ネットワーク（:80 or :443のみ通過可）
→リバースプロキシ（Webサーバ） :80 or :443
→HTTPプロキシ internal port
→SSHサーバ :22
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;sshサーバを立てる&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#ssh%E3%82%B5%E3%83%BC%E3%83%90%E3%82%92%E7%AB%8B%E3%81%A6%E3%82%8B&quot; aria-label=&quot;sshサーバを立てる permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SSHサーバを立てる&lt;/h2&gt;&lt;p&gt;SSHサーバを立てる。Dockerfileは&lt;a href=&quot;https://github.com/maltyxx/docker-sshd&quot;&gt;maltyxx/sshd&lt;/a&gt;を使う。&lt;/p&gt;&lt;h3 id=&quot;docker-composeyml&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker-composeyml&quot; aria-label=&quot;docker composeyml permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;docker-compose.yml&lt;/h3&gt;&lt;p&gt;debianのリポジトリとリンクして自動ビルドされるようなことが書いてあるがなんか止まってて
ちょっと古いので、ローカルでビルドすることにする。
&lt;code&gt;docker-compose.yml&lt;/code&gt;を書いたら&lt;code&gt;docker-compose build&lt;/code&gt;を実行してビルドする。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Commit ID: 24a1f32f6060054c64e294d3b074885c856b29d2
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;version: &amp;#x27;3.8&amp;#x27;
services:
  sshd:
    image: maltyxx/sshd
    build: https://github.com/maltyxx/docker-sshd.git
    restart: always
    command: &amp;#x27;myuser::1000&amp;#x27;
    ports:
      - &amp;#x27;2222:22&amp;#x27;
    volumes:
      - &amp;#x27;./YOUR_PUBLIC_KEY.pub:/home/myuser/.ssh/keys/YOUR_PUBLIC_KEY.pub:ro&amp;#x27;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;説明&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E8%AA%AC%E6%98%8E&quot; aria-label=&quot;説明 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;説明&lt;/h4&gt;&lt;p&gt;コマンド部分にユーザ情報を書くと自動でコンテナ内ユーザが作成される（README参照、複数ユーザも可）。
ここではパスワードなしのユーザ&lt;code&gt;myuser&lt;/code&gt;とする。&lt;/p&gt;&lt;p&gt;コンテナ内ユーザの特定ディレクトリにホストの公開鍵をマウントすれば、
公開鍵認証ができる。&lt;/p&gt;&lt;h3 id=&quot;テスト&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%86%E3%82%B9%E3%83%88&quot; aria-label=&quot;テスト permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;テスト&lt;/h3&gt;&lt;p&gt;ここではテストのため、ホストの&lt;code&gt;0.0.0.0:2222&lt;/code&gt;にSSHサーバのポートを割り当てている。&lt;/p&gt;&lt;p&gt;ホストから秘密鍵&lt;code&gt;YOUR_PRIVATE_KEY&lt;/code&gt;を使ってこのSSHサーバにログインできるか確認する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ssh localhost -p 2222 -l myuser -i ~/.ssh/YOUR_PRIVATE_KEY
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;起動、終了は&lt;code&gt;docker-compose up -d&lt;/code&gt;、&lt;code&gt;docker-compose down&lt;/code&gt;でよい。
確認後はポートの割り当ては不要なので削除する。&lt;/p&gt;&lt;h2 id=&quot;httpプロキシを立てる&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#http%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7%E3%82%92%E7%AB%8B%E3%81%A6%E3%82%8B&quot; aria-label=&quot;httpプロキシを立てる permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTPプロキシを立てる&lt;/h2&gt;&lt;p&gt;HTTPプロキシを立てる。&lt;a href=&quot;https://github.com/squid-cache/squid&quot;&gt;Squid&lt;/a&gt;を使う。Dockerイメージは&lt;a href=&quot;https://github.com/sameersbn/docker-squid&quot;&gt;sameersbn/squid&lt;/a&gt;を使う。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Docker Image Tag: 3.5.27-2
Commit ID: 924b0855440442a4be330ef4dba7a85681e9a49d
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;docker-composeyml-1&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker-composeyml-1&quot; aria-label=&quot;docker composeyml 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;docker-compose.yml&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;version: &amp;#x27;3.8&amp;#x27;
services:
  sshd:
    image: maltyxx/sshd
    build: https://github.com/maltyxx/docker-sshd.git
    restart: always
    command: &amp;#x27;myuser::1000&amp;#x27;
    volumes:
      - &amp;#x27;./YOUR_PUBLIC_KEY.pub:/home/myuser/.ssh/keys/YOUR_PUBLIC_KEY.pub:ro&amp;#x27;

  http_proxy:
    image: sameersbn/squid
    restart: always
    ports:
      - &amp;#x27;3128:3128&amp;#x27;
    volumes:
      - &amp;#x27;./squid/squid.conf:/etc/squid/squid.conf:ro&amp;#x27;
    depends_on:
      - &amp;#x27;sshd&amp;#x27;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;squidsquidconf&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#squidsquidconf&quot; aria-label=&quot;squidsquidconf permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;squid/squid.conf&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-squid&quot;&gt;acl all src all

acl Safe_ports port 22
http_access deny !Safe_ports

acl sshd dstdomain sshd
http_access allow sshd
http_access deny all

http_port 3128

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;テスト-1&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%86%E3%82%B9%E3%83%88-1&quot; aria-label=&quot;テスト 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;テスト&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ssh sshd -p 22 -l myuser \
  -i ~/.ssh/YOUR_PRIVATE_KEY \
  -o ProxyCommand=&amp;#x27;nc -X connect -x localhost:3128 %h %p&amp;#x27;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ProxyCommand部の設定方法はOSによって変わるので注意（別記事を参照、&lt;a href=&quot;https://blog.aoirint.com/entry/2020/gpu_pc_setup/#h_entry_2020_gpu_pc_setup_index_md_ssh%E3%81%AE%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7%E8%A8%AD%E5%AE%9A_18&quot;&gt;GPU PC Setupの最後におまけとして&lt;/a&gt;）。&lt;/p&gt;&lt;p&gt;ここで指定している&lt;code&gt;localhost&lt;/code&gt;はsshコマンドを実行しているクライアントのlocalhost。&lt;/p&gt;&lt;p&gt;&lt;code&gt;ssh&lt;/code&gt;の直後の&lt;code&gt;sshd&lt;/code&gt;の名前解決はSSHサーバ側で行われる（ProxyCommandの&lt;code&gt;%h&lt;/code&gt;に入る）。&lt;/p&gt;&lt;h2 id=&quot;リバースプロキシを立てる&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%AA%E3%83%90%E3%83%BC%E3%82%B9%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7%E3%82%92%E7%AB%8B%E3%81%A6%E3%82%8B&quot; aria-label=&quot;リバースプロキシを立てる permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;リバースプロキシを立てる&lt;/h2&gt;&lt;p&gt;リバースプロキシを立てる。nginxを使う。Dockerイメージは&lt;a href=&quot;https://hub.docker.com/_/nginx&quot;&gt;_/nginx&lt;/a&gt;を使う。&lt;/p&gt;&lt;h3 id=&quot;docker-composeyml-2&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker-composeyml-2&quot; aria-label=&quot;docker composeyml 2 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;docker-compose.yml&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;version: &amp;#x27;3.8&amp;#x27;
services:
  sshd:
    image: maltyxx/sshd
    build: https://github.com/maltyxx/docker-sshd.git
    restart: always
    command: &amp;#x27;myuser::1000&amp;#x27;
    volumes:
      - &amp;#x27;./YOUR_PUBLIC_KEY.pub:/home/myuser/.ssh/keys/YOUR_PUBLIC_KEY.pub:ro&amp;#x27;

  http_proxy:
    image: sameersbn/squid
    restart: always
    volumes:
      - &amp;#x27;./squid/squid.conf:/etc/squid/squid.conf&amp;#x27;
    depends_on:
      - &amp;#x27;sshd&amp;#x27;

  nginx:
    image: nginx
    restart: always
    ports:
      # - &amp;#x27;127.0.0.1:8000:80&amp;#x27;
      - &amp;#x27;8000:80&amp;#x27;
    volumes:
      - &amp;#x27;./nginx/default.conf:/etc/nginx/templates/default.conf.template&amp;#x27;
    depends_on:
      - &amp;#x27;http_proxy&amp;#x27;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;nginxdefaultconf&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#nginxdefaultconf&quot; aria-label=&quot;nginxdefaultconf permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;nginx/default.conf&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-nginx&quot;&gt;
upstream @http_proxy {
  server http_proxy:3128;
}

server_tokens off;

server {
  # listen 80;
  # server_name proxy.example.com;

    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_redirect off;

  proxy_pass http://@http_proxy;

}

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;おまけstream-proxy&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%81%8A%E3%81%BE%E3%81%91stream-proxy&quot; aria-label=&quot;おまけstream proxy permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;おまけ：Stream Proxy&lt;/h3&gt;&lt;p&gt;&lt;code&gt;stream&lt;/code&gt;という機能でTCP/UDPプロキシが張れる。
しかしTCP/UDPの仕様上リバースプロキシはできないと思われるので
今回は使わなかった。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://nginx.org/en/docs/stream/ngx_stream_core_module.html&quot;&gt;Module ngx_stream_core_module | nginx.org&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/dseg/items/75bf517738a1d8b2d036#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB&quot;&gt;NGINX 1.9が汎用TCPサーバとして使えるようになっていた件 - Qiita&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;nginxnginxconf&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#nginxnginxconf&quot; aria-label=&quot;nginxnginxconf permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;nginx/nginx.conf&lt;/h4&gt;&lt;pre&gt;&lt;code class=&quot;language-nginx&quot;&gt;worker_processes auto;

error_log /var/log/nginx/error.log info;

events {
    worker_connections  1024;
}

stream {
  upstream @sshd {
    server sshd:22;
  }

  server {
    listen 80;
    proxy_pass @sshd;
  }

}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;docker-composeyml-3&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker-composeyml-3&quot; aria-label=&quot;docker composeyml 3 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;docker-compose.yml&lt;/h4&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;version: &amp;#x27;3.8&amp;#x27;
services:
  sshd:
    image: maltyxx/sshd
    build: https://github.com/maltyxx/docker-sshd.git
    restart: always
    command: &amp;#x27;myuser::1000&amp;#x27;
    volumes:
      - &amp;#x27;./YOUR_PUBLIC_KEY.pub:/home/myuser/.ssh/keys/YOUR_PUBLIC_KEY.pub:ro&amp;#x27;

  nginx:
    image: nginx
    restart: always
    ports:
      - &amp;#x27;8000:80&amp;#x27;
    volumes:
      - &amp;#x27;./nginx/nginx.conf:/etc/nginx/nginx.conf:ro&amp;#x27;
    depends_on:
      - &amp;#x27;sshd&amp;#x27;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;テスト-2&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%86%E3%82%B9%E3%83%88-2&quot; aria-label=&quot;テスト 2 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;テスト&lt;/h4&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ssh localhost -p 8000 -l myuser -i ./YOUR_PRIVATE_KEY
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://superuser.com/questions/1135208/can-nginx-serve-ssh-and-https-at-the-same-time-on-the-same-port&quot;&gt;multiplexing - Can nginx serve SSH and HTTP(S) at the same time on the same port? - Super User&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.nginx.com/blog/running-non-ssl-protocols-over-ssl-port-nginx-1-15-2/&quot;&gt;Run Non-SSL Protocols on the Same Port as SSL in NGINX 1.15.2&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://takuya-1st.hatenablog.jp/entry/2019/09/27/035208&quot;&gt;nginx でSSHをプロキシして転送する 443 の再利用も可能 - それマグで！&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://takuya-1st.hatenablog.jp/entry/2016/10/14/144244&quot;&gt;sslh でport443 を有効活用して、sshもhttpsも同時に待ち受けする。 - それマグで！&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[ロータリエンコーダ付きステッピングモータをArduinoで制御して角度を取得する]]></title><description><![CDATA[ロータリエンコーダ付きステッピングモータをArduinoで制御して角度を取得する 機材 Arduino UNO（中華） ロータリエンコーダ付きステッピングモータ PKP214U06A-R2EL PKP214U06A-R2EL-L｜PKPシリーズ／PK…]]></description><link>https://blog.aoirint.com2020/stepping_motor/</link><guid isPermaLink="false">https://blog.aoirint.com2020/stepping_motor/</guid><pubDate>Mon, 05 Oct 2020 22:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;ロータリエンコーダ付きステッピングモータをarduinoで制御して角度を取得する&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%AD%E3%83%BC%E3%82%BF%E3%83%AA%E3%82%A8%E3%83%B3%E3%82%B3%E3%83%BC%E3%83%80%E4%BB%98%E3%81%8D%E3%82%B9%E3%83%86%E3%83%83%E3%83%94%E3%83%B3%E3%82%B0%E3%83%A2%E3%83%BC%E3%82%BF%E3%82%92arduino%E3%81%A7%E5%88%B6%E5%BE%A1%E3%81%97%E3%81%A6%E8%A7%92%E5%BA%A6%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B&quot; aria-label=&quot;ロータリエンコーダ付きステッピングモータをarduinoで制御して角度を取得する permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ロータリエンコーダ付きステッピングモータをArduinoで制御して角度を取得する&lt;/h1&gt;&lt;h2 id=&quot;機材&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E6%A9%9F%E6%9D%90&quot; aria-label=&quot;機材 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;機材&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Arduino UNO（中華）&lt;/li&gt;&lt;li&gt;ロータリエンコーダ付きステッピングモータ&lt;ul&gt;&lt;li&gt;PKP214U06A-R2EL&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.orientalmotor.co.jp/products/detail.action?hinmei=PKP214U06A-R2EL-L&quot;&gt;PKP214U06A-R2EL-L｜PKPシリーズ／PKシリーズ｜ステッピングモーター｜オリエンタルモーター株式会社&lt;/a&gt;&lt;ul&gt;&lt;li&gt;モータ部説明書（PDF、HM-7433J.pdf）&lt;/li&gt;&lt;li&gt;ロータリエンコーダ部説明書（PDF、HM-7439JE.pdf）&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.orientalmotor.co.jp/file_addon/products/st/image/tj_pkp214u06a-r2el-l_d.gif&quot;&gt;特性図（画像）&lt;/a&gt;（DC24V駆動時）&lt;/li&gt;&lt;li&gt;モータ部&lt;ul&gt;&lt;li&gt;2相&lt;/li&gt;&lt;li&gt;ユニポーラ5本リード線&lt;/li&gt;&lt;li&gt;基本ステップ角度1.8°&lt;/li&gt;&lt;li&gt;AC 50/60Hz 0.5kV 絶縁耐圧（1分間）&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;ロータリエンコーダ部&lt;ul&gt;&lt;li&gt;分解能 200 パルス/回転（pulse/revolution）&lt;/li&gt;&lt;li&gt;A相、B相、Z相：3チャンネル出力&lt;/li&gt;&lt;li&gt;DC5V駆動&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;モータドライバ&lt;ul&gt;&lt;li&gt;SLA7078MPRT&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.semicon.sanken-ele.co.jp/ctrl/product/category/2Ph_StepMotorUnp/detail/?product=SLA7078MPRT&quot;&gt;SLA7078MPRT ｜サンケン電気&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://akizukidenshi.com/catalog/g/gI-08015/&quot;&gt;２相ステッピングモータードライバー　ユニポーラ駆動用　ＳＬＡ７０７８ＭＰＲＴ: 半導体 秋月電子通商-電子部品・ネット通販&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.semicon.sanken-ele.co.jp/sk_content/sla7073mprt_ds_jp.pdf&quot;&gt;データシート（PDF、sla7073mprt_ds_jp.pdf）&lt;/a&gt;&lt;/li&gt;&lt;li&gt;μステップ対応品&lt;/li&gt;&lt;li&gt;実使用電圧 10-44V&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;モータドライバ基板&lt;ul&gt;&lt;li&gt;SEC20120330A&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://sec-suzuki.com/newpage333.htm&quot;&gt;エレ・メカ・ホビーショップＳＥＣ 資料置き場&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://sec-suzuki.com/step-2p-v1.pdf&quot;&gt;新型 ２相ステップドライバ資料（PDF、step-2p-v1.pdf）&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;ステッピングモータの制御&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%B9%E3%83%86%E3%83%83%E3%83%94%E3%83%B3%E3%82%B0%E3%83%A2%E3%83%BC%E3%82%BF%E3%81%AE%E5%88%B6%E5%BE%A1&quot; aria-label=&quot;ステッピングモータの制御 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ステッピングモータの制御&lt;/h2&gt;&lt;h3 id=&quot;配線&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E9%85%8D%E7%B7%9A&quot; aria-label=&quot;配線 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;配線&lt;/h3&gt;&lt;p&gt;ステッピングモータ本体からは、左から黒・緑・橙・青・赤の5本のケーブルが出ている。
これは説明書を見ると
黒・緑がA相（A・&lt;span style=&quot;text-decoration:overline&quot;&gt;A&lt;/span&gt;）、
青・赤がB相（B・&lt;span style=&quot;text-decoration:overline&quot;&gt;B&lt;/span&gt;）、
橙が電源になっている。
モータドライバ基板の対応する端子にこれらを接続する。&lt;/p&gt;&lt;p&gt;モータ電源として24V DC電源（&lt;a href=&quot;https://akizukidenshi.com/catalog/g/gM-06962/&quot;&gt;ATS065-P240&lt;/a&gt;）を使用した。&lt;/p&gt;&lt;h3 id=&quot;ドライバ設定&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%89%E3%83%A9%E3%82%A4%E3%83%90%E8%A8%AD%E5%AE%9A&quot; aria-label=&quot;ドライバ設定 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ドライバ設定&lt;/h3&gt;&lt;p&gt;μステップ機能（角度をより細かく制御できる）を使い、
励磁方式をW1-2相励磁（4分割）にするため、ドライバのM3端子をHIGHにする。
今回使ったドライバ基板ではDIPスイッチの4番をONにする。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.pulsemotor.com/feature/steppingmotordrive3.html&quot;&gt;第3回 ドライブICの制御方式「励磁方式」 | 特集 | NPM 日本パルスモーター株式会社&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;ドライバ基板上の半固定抵抗（Refに接続）を使って、
カレントダウン（過熱防止のための電流カット機能）時の電流と
通常時の電流をできるだけ絞る（反時計回りで絞れる）。
実際に回すときは、求められるトルクと発熱のトレードオフで調節すると思われる。&lt;/p&gt;&lt;h3 id=&quot;制御コード&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E5%88%B6%E5%BE%A1%E3%82%B3%E3%83%BC%E3%83%89&quot; aria-label=&quot;制御コード permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;制御コード&lt;/h3&gt;&lt;p&gt;以下のような機能を実現する簡単な制御コードを書いた。要&lt;a href=&quot;https://github.com/PaulStoffregen/TimerOne&quot;&gt;TimerOne&lt;/a&gt;。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;パルスの開始・停止&lt;/li&gt;&lt;li&gt;パルス幅の切り替え&lt;/li&gt;&lt;li&gt;カレントダウンの切り替え&lt;/li&gt;&lt;li&gt;回転方向の切り替え&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;code&gt;SteppingMotor.ino&lt;/code&gt;として新規タブに貼り付ける。&lt;/p&gt;&lt;p&gt;&lt;code&gt;RPM_PER_PULSE_KHZ&lt;/code&gt;は特性図を見ると、パルス速度 1 kHzのとき回転速度 300 r/minとあるので300を使う。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;// ステッピングモータ 制御コード

#include &amp;lt;TimerOne.h&amp;gt;

// ピンはどこでもOK
#define PIN_MTR_DIR 5
#define PIN_MTR_CK 6
#define PIN_MTR_CD 7

// 特性図
// https://www.orientalmotor.co.jp/file_addon/products/st/image/tj_pkp214u06[].gif
#define RPM_PER_PULSE_KHZ 300

bool pulseIsHigh = false;

void initSteppingMotor() {
  pinMode(PIN_MTR_DIR, OUTPUT);
  pinMode(PIN_MTR_CK, OUTPUT);
  pinMode(PIN_MTR_CD, OUTPUT);

  digitalWrite(PIN_MTR_DIR, LOW);
  digitalWrite(PIN_MTR_CK, LOW);
  digitalWrite(PIN_MTR_CD, HIGH);

  Timer1.initialize(1000*1000);
}

void stopPulse() {
  Timer1.detachInterrupt();
}
void startPulse() {
  Timer1.attachInterrupt(switchPulse);
}
void switchPulse() {
  pulseIsHigh = !pulseIsHigh;
  digitalWrite(PIN_MTR_CK, pulseIsHigh ? HIGH : LOW);
}

void setPulseLengthMillis(float pulseMillis) {
  int pulseMicros = pulseMillis * 1000;
  if (pulseMicros &amp;lt; 1) pulseMicros = 1;
  Timer1.setPeriod(pulseMicros);
}
void setPulseLengthByKHz(float khz) {
  float pulseMillis = 1.0 / khz;
  setPulseLengthMillis(pulseMillis);
}
void setPulseLengthByRPM(float rpm) {
  float pulseKHz = rpm / RPM_PER_PULSE_KHZ;
  setPulseLengthByKHz(pulseKHz);
}

void disableCurrentDown() {
  digitalWrite(PIN_MTR_CD, LOW);
}
void enableCurrentDown() {
  digitalWrite(PIN_MTR_CD, HIGH);
}

void setCW() {
  digitalWrite(PIN_MTR_DIR, LOW);
}
void setCCW() {
  digitalWrite(PIN_MTR_DIR, HIGH);
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;実行コード&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E5%AE%9F%E8%A1%8C%E3%82%B3%E3%83%BC%E3%83%89&quot; aria-label=&quot;実行コード permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;実行コード&lt;/h3&gt;&lt;p&gt;以下のようにテスト用の実行コードを作った。
30rpm、300rpm、1000rpm、300rpm、30rpm、停止、のように回転し、一巡するごとに回転方向を反転する（あまり急激に変化させると脱調してしまい回らない）。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;// ステッピングモータ 実行コード

int prevPhase = -1;
bool isClockwise = true;

void setup() {
  Serial.begin(115200);

  initSteppingMotor();
}

void loop() {
  long now = millis();
  int interval = 1000;
  int phase = (now / interval) % 6;


  if (phase != prevPhase) {
    Serial.print(&amp;quot;[&amp;quot;);
    Serial.print(now);
    Serial.print(&amp;quot;] &amp;quot;);
    if (isClockwise) Serial.print(&amp;quot;(C) &amp;quot;);
    else             Serial.print(&amp;quot;(A) &amp;quot;);

    if (phase == 0) {
      Serial.println(&amp;quot;stop&amp;quot;);
      stopPulse();
      enableCurrentDown();
    }
    else if (phase == 1) {
      Serial.println(&amp;quot;30rpm&amp;quot;);

      disableCurrentDown();

      if (isClockwise) setCW();
      else             setCCW();
      isClockwise = !isClockwise;

      setPulseLengthByRPM(30);
      startPulse();
    }
    else if (phase == 2) {
      Serial.println(&amp;quot;300rpm&amp;quot;);
      setPulseLengthByRPM(300);
    }
    else if (phase == 3) {
      Serial.println(&amp;quot;1000rpm&amp;quot;);
      setPulseLengthByRPM(1000);
    }
    else if (phase == 4) {
      Serial.println(&amp;quot;300rpm&amp;quot;);
      setPulseLengthByRPM(300);
    }
    else if (phase == 5) {
      Serial.println(&amp;quot;30rpm&amp;quot;);
      setPulseLengthByRPM(30);
    }
    else {
      Serial.println(&amp;quot;nope&amp;quot;);
    }
  }

  prevPhase = phase;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;ロータリエンコーダによる角度取得&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%AD%E3%83%BC%E3%82%BF%E3%83%AA%E3%82%A8%E3%83%B3%E3%82%B3%E3%83%BC%E3%83%80%E3%81%AB%E3%82%88%E3%82%8B%E8%A7%92%E5%BA%A6%E5%8F%96%E5%BE%97&quot; aria-label=&quot;ロータリエンコーダによる角度取得 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ロータリエンコーダによる角度取得&lt;/h2&gt;&lt;h3 id=&quot;配線-1&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E9%85%8D%E7%B7%9A-1&quot; aria-label=&quot;配線 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;配線&lt;/h3&gt;&lt;p&gt;ロータリエンコーダ本体からは、左から白・橙・黄・青・緑・茶・赤・黒の8本のケーブルが出ている。
これは説明書を見ると
赤・茶がA相（A+・A-）、
緑・青がB相（B+・B-）、
黃・橙がZ相（Z+、Z-）、
白がVCC（5V）、
黒がGNDになっている。
+-はそれぞれ出力が反転しているだけなので、
各相1本だけを接続すればいい。
Z+は軸が一周するタイミングで正になる端子で、誤差修正に使う。
よって、赤・緑・黃・白・黒の5本を接続する。&lt;/p&gt;&lt;p&gt;ロータリエンコーダの読み取りには割り込みを使うので、
A+、B+は2番、3番ピンに接続する。
Z+は4番ピン（これはどこでもOK）に接続することにする。
VCCとGNDはArduinoの5V、GNDに接続すればいい。&lt;/p&gt;&lt;h3 id=&quot;計算コード&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E8%A8%88%E7%AE%97%E3%82%B3%E3%83%BC%E3%83%89&quot; aria-label=&quot;計算コード permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;計算コード&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://jumbleat.com/2016/12/17/encoder_1/&quot;&gt;ロータリーエンコーダを使う part 1 : 外部割込みとチャタリング対策 – jumbleat&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;この記事を参考にして、ロータリエンコーダの角度計算をするコードを書いた。
A相B相のパターンに基づく計算はそのままで、不要な部分の除去とZ相によるリセット、オーバーフロー防止のためカウント超過時のリセットを追加した。
なおPPRは200なので、1.8°の分解能になる。&lt;/p&gt;&lt;p&gt;&lt;code&gt;RotaryEncoder.ino&lt;/code&gt;として新規タブに貼り付ける。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;// ロータリエンコーダ 計算コード

#define PPR 200 // p/r, pulse per revolution

#define PIN_RTE_A 2
#define PIN_RTE_B 3
#define PIN_RTE_Z 4

#define NONE 0
#define CW 1
#define CCW 2

volatile char direction = NONE; // NONE, CW, CCW
volatile int steps = 0;

volatile bool prevPinA = false;
volatile bool prevPinB = false;
volatile bool prevPinZ = false;

void initRotaryEncoder() {
  pinMode(PIN_RTE_A, INPUT_PULLUP);
  pinMode(PIN_RTE_B, INPUT_PULLUP);
  pinMode(PIN_RTE_Z, INPUT_PULLUP);

  attachInterrupt(0, onRotaryEncoderPulse, CHANGE); // pin2
  attachInterrupt(1, onRotaryEncoderPulse, CHANGE); // pin3
}

int getRotaryEncoderStep() {
  return steps;
}
float getRotaryEncoderAngleRate() {
  return (float)steps / PPR;
}
float getRotaryEncoderAngleDegrees() {
  return getRotaryEncoderAngleRate() * 360.0f;
}
float getRotaryEncoderAngleRadians() {
  return getRotaryEncoderAngleRate() * 2 * PI;
}

void onRotaryEncoderPulse() {
  bool pinZ = digitalRead(PIN_RTE_Z);
  if (pinZ &amp;amp;&amp;amp; prevPinZ) steps = 0;

  bool pinA = !digitalRead(PIN_RTE_A);
  bool pinB = !digitalRead(PIN_RTE_B);

  if (pinA != prevPinA || pinB != prevPinB) {
    if (direction == NONE) {
      if (pinA) direction = CW;
      if (pinB) direction = CCW;
    }
    else {
      if (!pinA &amp;amp;&amp;amp; !pinB) {
        if      (direction == CW  &amp;amp;&amp;amp; prevPinB) steps++;
        else if (direction == CCW &amp;amp;&amp;amp; prevPinA) steps--;

        if (steps &amp;lt; 0)    steps += PPR;
        if (PPR &amp;lt;= steps) steps -= PPR;

        direction = NONE;
      }
    }
  }

  prevPinA = pinA;
  prevPinB = pinB;
  prevPinZ = pinZ;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;実行コード-1&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E5%AE%9F%E8%A1%8C%E3%82%B3%E3%83%BC%E3%83%89-1&quot; aria-label=&quot;実行コード 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;実行コード&lt;/h3&gt;&lt;p&gt;以下のようにテスト用の実行コードを作った。
感電に注意しつつ、手で軸を回して角度が変化することを確認する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;// ロータリエンコーダ 実行コード

void setup() {
  Serial.begin(115200);

  initRotaryEncoder();
}

void loop() {
  Serial.println(getRotaryEncoderAngleDegrees());
  delay(10);
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;ステッピングモータロータリエンコーダ&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%B9%E3%83%86%E3%83%83%E3%83%94%E3%83%B3%E3%82%B0%E3%83%A2%E3%83%BC%E3%82%BF%E3%83%AD%E3%83%BC%E3%82%BF%E3%83%AA%E3%82%A8%E3%83%B3%E3%82%B3%E3%83%BC%E3%83%80&quot; aria-label=&quot;ステッピングモータロータリエンコーダ permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ステッピングモータ+ロータリエンコーダ&lt;/h2&gt;&lt;h3 id=&quot;シリアル通信で送られてきたjsonをパースする&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%B7%E3%83%AA%E3%82%A2%E3%83%AB%E9%80%9A%E4%BF%A1%E3%81%A7%E9%80%81%E3%82%89%E3%82%8C%E3%81%A6%E3%81%8D%E3%81%9Fjson%E3%82%92%E3%83%91%E3%83%BC%E3%82%B9%E3%81%99%E3%82%8B&quot; aria-label=&quot;シリアル通信で送られてきたjsonをパースする permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;シリアル通信で送られてきたJSONをパースする&lt;/h3&gt;&lt;p&gt;シリアル通信で改行文字で区切られたJSONをやり取りするため、&lt;code&gt;SerialJsonLineReader.ino&lt;/code&gt;を作った。要&lt;a href=&quot;https://github.com/bblanchon/ArduinoJson&quot;&gt;ArduinoJson&lt;/a&gt;。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;// Requirements:
// #include &amp;lt;ArduinoJson.h&amp;gt;

String serialBuffer = &amp;quot;&amp;quot;;

bool nextSerialLine(String *serialLine) {
  *serialLine = &amp;quot;&amp;quot;;

  while (Serial.available() &amp;gt; 0) {
    int ch = Serial.read();
    if (ch != -1) {
      if (ch == &amp;#x27;\n&amp;#x27;) {
        *serialLine = serialBuffer;
        serialBuffer = &amp;quot;&amp;quot;;
        return true;
      }

      serialBuffer += (char) ch;
    }
  }

  return false;
}

bool nextSerialJson(JsonDocument *serialJson, bool *jsonError) {
  String serialLine = &amp;quot;&amp;quot;;

  *jsonError = false;
  serialJson-&amp;gt;clear();

  if (nextSerialLine(&amp;amp;serialLine)) {
    DeserializationError error;
    error = deserializeJson(*serialJson, serialLine);

    if (error == DeserializationError::Ok) {
      return true;
    }

    *jsonError = true;
    serialJson-&amp;gt;clear();
  }

  return false;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;シリアル通信からステッピングモータ制御角度取得&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%B7%E3%83%AA%E3%82%A2%E3%83%AB%E9%80%9A%E4%BF%A1%E3%81%8B%E3%82%89%E3%82%B9%E3%83%86%E3%83%83%E3%83%94%E3%83%B3%E3%82%B0%E3%83%A2%E3%83%BC%E3%82%BF%E5%88%B6%E5%BE%A1%E8%A7%92%E5%BA%A6%E5%8F%96%E5%BE%97&quot; aria-label=&quot;シリアル通信からステッピングモータ制御角度取得 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;シリアル通信からステッピングモータ制御+角度取得&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{&amp;quot;rpm&amp;quot;: 300}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;このようなJSONをシリアル通信でArduinoに送ることで、
ステッピングモータが回転するようにし、
また逐次回転角度をシリアル通信で送る実行コードを作った。
要&lt;code&gt;SteppingMotor.ino&lt;/code&gt;、
&lt;code&gt;RotaryEncoder.ino&lt;/code&gt;、
&lt;code&gt;SerialJsonLineReader.ino&lt;/code&gt;。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;#include &amp;lt;ArduinoJson.h&amp;gt;

#define MIN_RPM 30
#define MAX_RPM 3000
float rpm = 0;

void setup() {
  Serial.begin(115200);

  initRotaryEncoder();
  initSteppingMotor();
}

void loop() {
  float angleDegrees = getRotaryEncoderAngleDegrees();

  if (rpm &amp;lt; MIN_RPM) {
    rpm = 0;
    stopPulse();
    enableCurrentDown();
  }
  else {
    setPulseLengthByRPM(rpm);
    startPulse();
  }

  StaticJsonDocument&amp;lt;255&amp;gt; msg;
  msg[&amp;quot;angle&amp;quot;] = angleDegrees;
  msg[&amp;quot;rpm&amp;quot;] = rpm;

  serializeJson(msg, Serial); Serial.println();

// serialEvent is now deprecated and not working on some Arduino devices (e.g. Arduino Nano Every).
// https://github.com/arduino/ArduinoCore-avr/issues/206#issuecomment-532133626
// https://forum.arduino.cc/t/nano-every-serialevent-does-not-get-called/690025
//
// }
//
// void serialEvent() {
//   StaticJsonDocument&amp;lt;255&amp;gt; msg;
  bool jsonError = false;

  if (nextSerialJson(&amp;amp;msg, &amp;amp;jsonError)) {
    float _rpm = msg[&amp;quot;rpm&amp;quot;];
    if (_rpm &amp;lt; MIN_RPM) _rpm = 0; // current down
    if (MAX_RPM &amp;lt; _rpm) _rpm = MAX_RPM;

    rpm = _rpm;
  }
  else if (jsonError) {
    // StaticJsonDocument&amp;lt;255&amp;gt; response;
    // serializeJson(response, Serial); Serial.println();
  }
}
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[PulseAudioでマイク入力をスピーカから出力する]]></title><description><![CDATA[PulseAudioでマイク入力をスピーカから出力する まずはPCに接続されている音声入力デバイスのIDを確認する。 ここでは、以下のようになっている。 ID 種類 3 本体のヘッドホン端子 4 HDMI 5 USBサウンドカードのヘッドホン端子 6 USB…]]></description><link>https://blog.aoirint.com2020/pulseaudio_mic_input_to_speaker_output/</link><guid isPermaLink="false">https://blog.aoirint.com2020/pulseaudio_mic_input_to_speaker_output/</guid><pubDate>Sat, 03 Oct 2020 18:40:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;pulseaudioでマイク入力をスピーカから出力する&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#pulseaudio%E3%81%A7%E3%83%9E%E3%82%A4%E3%82%AF%E5%85%A5%E5%8A%9B%E3%82%92%E3%82%B9%E3%83%94%E3%83%BC%E3%82%AB%E3%81%8B%E3%82%89%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B&quot; aria-label=&quot;pulseaudioでマイク入力をスピーカから出力する permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PulseAudioでマイク入力をスピーカから出力する&lt;/h1&gt;&lt;p&gt;まずはPCに接続されている音声入力デバイスのIDを確認する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;pactl list short sources
# pactl list sources
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;3   alsa_output.pci-0000_00_1f.3.analog-stereo.monitor  module-alsa-card.c  s16le 2ch 44100Hz   RUNNING
4   alsa_output.pci-0000_01_00.1.hdmi-stereo.monitor    module-alsa-card.c  s16le 2ch 44100Hz   RUNNING
5   alsa_output.usb-GeneralPlus_USB_Audio_Device-00.iec958-stereo.monitor   module-alsa-card.c  s16le 2ch 44100Hz   RUNNING
6   alsa_input.usb-GeneralPlus_USB_Audio_Device-00.analog-mono  module-alsa-card.c  s16le 1ch 44100Hz   RUNNING
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ここでは、以下のようになっている。&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;left&quot;&gt;ID&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;種類&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;3&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;本体のヘッドホン端子&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;4&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;HDMI&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;5&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;USBサウンドカードのヘッドホン端子&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;6&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;USBサウンドカードのマイク端子&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;以下のコマンドで、ID=6のUSBサウンドカードのマイク端子に入力されている音声をスピーカにループバックするモジュールがロードされる。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;pacmd load-module module-loopback source=6
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;名前を使って指定することもできる。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;pacmd load-module module-loopback source=alsa_input.usb-GeneralPlus_USB_Audio_Device-00.analog-mono
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;必要に応じて、&lt;code&gt;pavucontrol&lt;/code&gt;を開いて出力先デバイスを設定する。&lt;/p&gt;&lt;p&gt;以下のコマンドで、ループバックモジュールをアンロードする。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;pacmd unload-module module-loopback
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[Ubuntu, pyenv環境でtkinterを使う]]></title><description><![CDATA[Ubuntu, pyenv環境でtkinterを使う]]></description><link>https://blog.aoirint.com2020/setup_python_tkinter_pyenv_ubuntu/</link><guid isPermaLink="false">https://blog.aoirint.com2020/setup_python_tkinter_pyenv_ubuntu/</guid><pubDate>Sat, 03 Oct 2020 18:30:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;ubuntu-pyenv環境でtkinterを使う&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#ubuntu-pyenv%E7%92%B0%E5%A2%83%E3%81%A7tkinter%E3%82%92%E4%BD%BF%E3%81%86&quot; aria-label=&quot;ubuntu pyenv環境でtkinterを使う permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu, pyenv環境でtkinterを使う&lt;/h1&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo apt install tk-dev python-tk python3-tk
pyenv install 3.8.6
pyenv global 3.8.6

python3 -m tkinter
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[Ubuntu プロキシ設定]]></title><description><![CDATA[Ubuntu プロキシ設定 User (Desktop): Settings > Network > Network Proxy Settings > Network > Network Proxy > Manualに設定する。
自動的に環境変数HTTP_PROXY, HTTPS…]]></description><link>https://blog.aoirint.com2020/ubuntu_proxy/</link><guid isPermaLink="false">https://blog.aoirint.com2020/ubuntu_proxy/</guid><pubDate>Fri, 02 Oct 2020 06:40:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;ubuntu-プロキシ設定&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#ubuntu-%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7%E8%A8%AD%E5%AE%9A&quot; aria-label=&quot;ubuntu プロキシ設定 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu プロキシ設定&lt;/h1&gt;&lt;h2 id=&quot;user-desktop-settings--network--network-proxy&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#user-desktop-settings--network--network-proxy&quot; aria-label=&quot;user desktop settings  network  network proxy permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User (Desktop): Settings &amp;gt; Network &amp;gt; Network Proxy&lt;/h2&gt;&lt;p&gt;Settings &amp;gt; Network &amp;gt; Network Proxy &amp;gt; Manualに設定する。
自動的に環境変数HTTP_PROXY, HTTPS_PROXYにスキームが追加された状態で設定される。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;HTTP Proxy: &lt;code&gt;proxy&lt;/code&gt; &lt;code&gt;port&lt;/code&gt;&lt;/li&gt;&lt;li&gt;HTTPS Proxy: &lt;code&gt;proxy&lt;/code&gt; &lt;code&gt;port&lt;/code&gt;&lt;/li&gt;&lt;li&gt;Ignore Hosts: &lt;code&gt;localhost, 127.0.0.0/8, ::1&lt;/code&gt;（プライベートネットワーク・組織内ネットワークのIPアドレス範囲またはドメインも追加する）&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;curlやwget、pipなど主要コマンドは
注意点として、別ユーザとしてコマンドを実行すると環境変数が引き継がれない。
例えばsudo curlしたときにプロキシに接続しにいかない。&lt;/p&gt;&lt;h2 id=&quot;etcsudoers&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#etcsudoers&quot; aria-label=&quot;etcsudoers permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/etc/sudoers&lt;/h2&gt;&lt;p&gt;sudoでコマンドを実行したとき、実行時シェルに設定されている環境変数を引き継ぐようにする。
sudoersは書き込み禁止になっているためvisudoで編集する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# run as root
visudo -f /etc/sudoers
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&quot;language-sudoers&quot;&gt;Defaults env_keep+=&amp;quot;HTTP_PROXY&amp;quot;
Defaults env_keep+=&amp;quot;HTTPS_PROXY&amp;quot;
Defaults env_keep+=&amp;quot;NO_PROXY&amp;quot;
Defaults env_keep+=&amp;quot;EDITOR&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;etcenvironment&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#etcenvironment&quot; aria-label=&quot;etcenvironment permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/etc/environment&lt;/h2&gt;&lt;p&gt;システム全体の環境変数として設定される。影響範囲が大きいので注意。
デスクトップユーザではSettings側の設定（Disabledなら設定されない）が優先されるようだった。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;HTTP_PROXY=http://proxy:port
HTTPS_PROXY=http://proxy:port
NO_PROXY=localhost, 127.0.0.0/8, ::1
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;apt-etcaptaptconf&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#apt-etcaptaptconf&quot; aria-label=&quot;apt etcaptaptconf permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;apt: /etc/apt/apt.conf&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;Acquire::http::proxy &amp;quot;http://proxy:port&amp;quot;;                             
Acquire::https::proxy &amp;quot;http://proxy:port&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;snap-systemctl-edit-snapdservice&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#snap-systemctl-edit-snapdservice&quot; aria-label=&quot;snap systemctl edit snapdservice permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Snap: systemctl edit snapd.service&lt;/h2&gt;&lt;p&gt;/etc/systemd/system/snapd.service.d/override.confにsystemdの設定ファイルを作成する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# run as root
systemctl edit snapd.service # edit service file here
systemctl daemon-reload
systemctl restart snapd.service

# run as user
snap install ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;/etc/systemd/system/snapd.service.d/override.conf&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-systemd&quot;&gt;[Service]
Environment=http_proxy=http://proxy:port
Environment=https_proxy=http://proxy:port
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://blog.livedoor.jp/tamanooboshi/archives/31598849.html&quot; title=&quot;社内Proxyに阻まれSnapでパッケージ管理できないあなたへ : サイコロイドの備忘ログ&quot;&gt;社内Proxyに阻まれSnapでパッケージ管理できないあなたへ : サイコロイドの備忘ログ&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://forum.snapcraft.io/t/set-snapd-proxy-via-core-configuration/467/21&quot; title=&quot;Set snapd proxy via core configuration - snapd - snapcraft.io&quot;&gt;Set snapd proxy via core configuration - snapd - snapcraft.io&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;透過プロキシ&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E9%80%8F%E9%81%8E%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7&quot; aria-label=&quot;透過プロキシ permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;透過プロキシ&lt;/h2&gt;&lt;p&gt;プロキシ非対応のHTTPアプリケーションでもプロキシを通過させるようにする透過プロキシを利用すると便利。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://blog.aoirint.com/entry/2021/transproxy_ubuntu/&quot;&gt;透過プロキシ（Ubuntu, go-transproxy）&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Python Requests]]></title><description><![CDATA[Python Requests Headers Copy cookies from Selenium Download a file]]></description><link>https://blog.aoirint.com2020/python_requests/</link><guid isPermaLink="false">https://blog.aoirint.com2020/python_requests/</guid><pubDate>Mon, 28 Sep 2020 02:30:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;python-requests&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#python-requests&quot; aria-label=&quot;python requests permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Python Requests&lt;/h1&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;ses = requests.Session()
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;headers&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#headers&quot; aria-label=&quot;headers permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Headers&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;ses.headers.update({
})
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;copy-cookies-from-selenium&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#copy-cookies-from-selenium&quot; aria-label=&quot;copy cookies from selenium permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copy cookies from Selenium&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;ses.cookies.clear()
for cookie in driver.get_cookies():
    rc = requests.cookies.create_cookie(domain=cookie[&amp;#x27;domain&amp;#x27;], name=cookie[&amp;#x27;name&amp;#x27;], value=cookie[&amp;#x27;value&amp;#x27;])
    ses.cookies.set_cookie(rc)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;download-a-file&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#download-a-file&quot; aria-label=&quot;download a file permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download a file&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;file_url: str
dest_path: str

with tempfile.NamedTemporaryFile() as fp:
    with ses.get(file_url, stream=True) as r:
        r.raise_for_status()

        for chunk in r.iter_content(chunk_size=8192):
            fp.write(chunk)

    fp.flush()
    shutil.copy(fp.name, dest_path)
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[docker-composeによるPython + Selenium環境]]></title><description><![CDATA[docker-composeによるPython + Selenium環境 docker-compose.yml app/Dockerfile app/requirements.txt app/code/main.py]]></description><link>https://blog.aoirint.com2020/docker_compose_python_selenium/</link><guid isPermaLink="false">https://blog.aoirint.com2020/docker_compose_python_selenium/</guid><pubDate>Mon, 28 Sep 2020 02:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;docker-composeによるpython--selenium環境&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker-compose%E3%81%AB%E3%82%88%E3%82%8Bpython--selenium%E7%92%B0%E5%A2%83&quot; aria-label=&quot;docker composeによるpython  selenium環境 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;docker-composeによるPython + Selenium環境&lt;/h1&gt;&lt;p&gt;docker-compose.yml&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!yaml
version: &amp;#x27;3.8&amp;#x27;
services:
  app:
    build: ./app/
    entrypoint: [ &amp;quot;wait-for-it&amp;quot;, &amp;quot;selenium:4444&amp;quot;, &amp;quot;--&amp;quot;, &amp;quot;python3&amp;quot;, &amp;quot;/code/main.py&amp;quot; ]
    volumes:
      - ./work:/work
    environment:
      SELENIUM_URL: http://selenium:4444/wd/hub
    depends_on:
      - selenium
  selenium:
    image: selenium/standalone-chrome
    volumes:
      - /dev/shm:/dev/shm
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;app/Dockerfile&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!dockerfile
FROM python:3

WORKDIR /work

RUN apt update &amp;amp;&amp;amp; apt install -y \
  wait-for-it

ADD requirements.txt /tmp/
RUN pip3 install -r /tmp/requirements.txt

ADD code/ /code
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;app/requirements.txt&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!requirements
requests &amp;gt;= 2.24.0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;app/code/main.py&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!python
from selenium import webdriver
from selenium.common.exceptions import NoSuchElementException
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

selenium_url = os.environ[&amp;#x27;SELENIUM_URL&amp;#x27;]
website_url: str = None

driver = webdriver.Remote(
    command_executor=selenium_url,
    desired_capabilities=DesiredCapabilities.CHROME,
)

driver.get(website_url)
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[docker-compose run --rm終了時に他のコンテナも削除する]]></title><description><![CDATA[docker-compose run --rm終了時に他のコンテナも削除する docker-compose run --rm app を実行するとサービスappが起動してコンテナが作られ、実行が終わり次第コンテナは削除される。
このとき削除されるコンテナはforeground…]]></description><link>https://blog.aoirint.com2020/docker_compose_run_rm_linked_containers/</link><guid isPermaLink="false">https://blog.aoirint.com2020/docker_compose_run_rm_linked_containers/</guid><pubDate>Mon, 28 Sep 2020 01:10:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;docker-compose-run---rm終了時に他のコンテナも削除する&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker-compose-run---rm%E7%B5%82%E4%BA%86%E6%99%82%E3%81%AB%E4%BB%96%E3%81%AE%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%82%82%E5%89%8A%E9%99%A4%E3%81%99%E3%82%8B&quot; aria-label=&quot;docker compose run   rm終了時に他のコンテナも削除する permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;docker-compose run --rm終了時に他のコンテナも削除する&lt;/h1&gt;&lt;p&gt;&lt;code&gt;docker-compose run --rm app&lt;/code&gt;を実行するとサービスappが起動してコンテナが作られ、実行が終わり次第コンテナは削除される。
このとき削除されるコンテナはforegroundで実行されたもののみで、
&lt;code&gt;depends_on&lt;/code&gt;などの設定からリンクを通じて起動した他サービスのdetachedコンテナは削除されず残り続ける。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/docker/compose/issues/2791&quot; title=&quot;docker-compose run &amp;lt;container&amp;gt; --rm does not rm links · Issue #2791 · docker/compose&quot;&gt;docker-compose run &amp;lt;container&amp;gt; --rm does not rm links · Issue #2791 · docker/compose&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;このissueでlinked containersを同時に削除する機能について議論されているが、
&lt;code&gt;run&lt;/code&gt;コマンドにオプションを増やしたくない、ということで却下されている。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;As mentioned in this thread, docker-compose rm -f --all and docker-compose down already allow cleaning up a project&amp;#x27;s containers / resources. We won&amp;#x27;t overload run with more options at that point.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;ひとまず&lt;code&gt;docker-compose run&lt;/code&gt;終了後に&lt;code&gt;docker-compose down&lt;/code&gt;を実行するシェルスクリプトで対応する。&lt;/p&gt;&lt;p&gt;compose_run.sh&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!/bin/bash

docker-compose run --rm &amp;quot;$@&amp;quot;
EXIT_CODE=$?
docker-compose down
exit $EXIT_CODE
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[GitHub Actions, ビルド結果を別ブランチにpushする]]></title><description><![CDATA[GitHub Actions, ビルド結果を別ブランチにpushする GitHub Actions実行中に生成した build ディレクトリの内容を別ブランチにpushする。 github:s0/git-publish-subdir-action]]></description><link>https://blog.aoirint.com2020/github_actions_push_build_results/</link><guid isPermaLink="false">https://blog.aoirint.com2020/github_actions_push_build_results/</guid><pubDate>Sun, 27 Sep 2020 07:30:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;github-actions-ビルド結果を別ブランチにpushする&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#github-actions-%E3%83%93%E3%83%AB%E3%83%89%E7%B5%90%E6%9E%9C%E3%82%92%E5%88%A5%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%ABpush%E3%81%99%E3%82%8B&quot; aria-label=&quot;github actions ビルド結果を別ブランチにpushする permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GitHub Actions, ビルド結果を別ブランチにpushする&lt;/h1&gt;&lt;p&gt;GitHub Actions実行中に生成した&lt;code&gt;build&lt;/code&gt;ディレクトリの内容を別ブランチにpushする。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/s0/git-publish-subdir-action&quot;&gt;github:s0/git-publish-subdir-action&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code&gt;#!yaml
name: Build
on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        # Version range or exact version of a Python version to use, using SemVer&amp;#x27;s version range syntax.
        python-version: 3.x

    - name: Install dependencies
      run: pip3 install -r requirements.txt

    - name: Build
      run: python3 app/main.py
      # run: |
      #   python3 app/cmd1.py
      #   python3 app/cmd2.py

    # https://github.com/s0/git-publish-subdir-action
    - name: Push to build branch
      uses: s0/git-publish-subdir-action@master
      env:
        REPO: self
        BRANCH: build
        FOLDER: build
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[Ubuntu 18.04のKernelをアップデートした（HWE Kernel）]]></title><description><![CDATA[Ubuntu 18.04のKernelをアップデートした（HWE Kernel） 環境の整理を兼ねて、UbuntuのKernelのアップデートをしたので、そのときのメモ。 Ubuntu 18.04のKernelをアップデートした（HWE Kernel…]]></description><link>https://blog.aoirint.com2020/ubuntu_kernel_update/</link><guid isPermaLink="false">https://blog.aoirint.com2020/ubuntu_kernel_update/</guid><pubDate>Sun, 20 Sep 2020 15:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;ubuntu-1804のkernelをアップデートしたhwe-kernel&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#ubuntu-1804%E3%81%AEkernel%E3%82%92%E3%82%A2%E3%83%83%E3%83%97%E3%83%87%E3%83%BC%E3%83%88%E3%81%97%E3%81%9Fhwe-kernel&quot; aria-label=&quot;ubuntu 1804のkernelをアップデートしたhwe kernel permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu 18.04のKernelをアップデートした（HWE Kernel）&lt;/h1&gt;&lt;p&gt;環境の整理を兼ねて、UbuntuのKernelのアップデートをしたので、そのときのメモ。&lt;/p&gt;&lt;h2 id=&quot;ubuntu-1804のkernelをアップデートしたhwe-kernel-1&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#ubuntu-1804%E3%81%AEkernel%E3%82%92%E3%82%A2%E3%83%83%E3%83%97%E3%83%87%E3%83%BC%E3%83%88%E3%81%97%E3%81%9Fhwe-kernel-1&quot; aria-label=&quot;ubuntu 1804のkernelをアップデートしたhwe kernel 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu 18.04のKernelをアップデートした（HWE Kernel）&lt;/h2&gt;&lt;h3 id=&quot;カーネルバージョンについて&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%AB%E3%83%BC%E3%83%8D%E3%83%AB%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6&quot; aria-label=&quot;カーネルバージョンについて permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;カーネルバージョンについて&lt;/h3&gt;&lt;p&gt;&lt;code&gt;/lib/modules&lt;/code&gt;を見る限りインストール時のバージョンは&lt;code&gt;4.10.0-28&lt;/code&gt;で、
&lt;code&gt;/usr/src&lt;/code&gt;を見る限り&lt;code&gt;4.15.0-115&lt;/code&gt;をしばらく使ったあと、
&lt;code&gt;4.16.18&lt;/code&gt;に更新していた。&lt;/p&gt;&lt;p&gt;バージョン&lt;code&gt;4.10.x&lt;/code&gt;はおそらくUbuntu 16.04をクリーンインストールしたときのもので、
バージョン&lt;code&gt;4.15.x&lt;/code&gt;は&lt;code&gt;dist-upgrade&lt;/code&gt;でUbuntu 18.04にアップデートしたときに変更されたと思われる。
その後ソフトウェア導入のためのバージョン合わせかなにかで&lt;code&gt;4.16.x&lt;/code&gt;にして、そのまま使っていた。&lt;/p&gt;&lt;p&gt;4.15.xから4.16.xにアップデートするときにはUKUU（Ubuntu Kernel Update Utility）を使っていた。
このとき参考にしたサイト： &lt;a href=&quot;https://linuxhint.com/upgrade-kernel-ubuntu-1804/&quot; title=&quot;Upgrade Kernel on Ubuntu 18.04 – Linux Hint&quot;&gt;Upgrade Kernel on Ubuntu 18.04 – Linux Hint&lt;/a&gt;&lt;/p&gt;&lt;p&gt;ところで、カーネルバージョンの後ろに付いているハイフン以降の数字はUbuntu Release ABIというらしいのだが、
UKUUを使ってカーネルをインストールするとこの部分がバージョン番号（ハイフンの前）を6ケタの数字に直したようなものになるので、
これはABIとは違いそうだ（ABIは0から255までの範囲のように思われる）。
ABIのドキュメントらしきものがあったので、機会があれば読みたい：&lt;a href=&quot;https://wiki.ubuntu.com/KernelTeam/BuildSystem/ABI&quot; title=&quot;KernelTeam/BuildSystem/ABI - Ubuntu Wiki&quot;&gt;KernelTeam/BuildSystem/ABI - Ubuntu Wiki&lt;/a&gt;&lt;/p&gt;&lt;h3 id=&quot;ukuuとセキュリティアップデートについて&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#ukuu%E3%81%A8%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3%E3%82%A2%E3%83%83%E3%83%97%E3%83%87%E3%83%BC%E3%83%88%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6&quot; aria-label=&quot;ukuuとセキュリティアップデートについて permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UKUUとセキュリティアップデートについて&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://kledgeb.blogspot.com/2020/09/ubuntu-2004-164-linux-kerneldos.html&quot; title=&quot;Ubuntu 20.04 その164 - Linux kernelにDoSや任意コード実行の脆弱性・アップデートを - kledgeb&quot;&gt;Ubuntu 20.04 その164 - Linux kernelにDoSや任意コード実行の脆弱性・アップデートを - kledgeb&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://ubuntu.com/security/notices/USN-4489-1&quot; title=&quot;USN-4489-1: Linux kernel vulnerability | Ubuntu security notices | Ubuntu&quot;&gt;USN-4489-1: Linux kernel vulnerability | Ubuntu security notices | Ubuntu&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;通常の方法でインストールされるカーネルを使っている場合、
Linux Kernelに脆弱性が発見されてもこのようにUbuntu側からセキュリティアップデートが提供される。&lt;/p&gt;&lt;p&gt;しかしUKUUを使って（起動時にデフォルトで使用する）カーネルのバージョンを変更した場合、
これは（デバッグ目的などで）カーネルのバージョンを固定しているのに近いと思われるので、
セキュリティアップデートを手動で行う必要があるのではないかという懸念があった。
実際カーネルバージョンは4.16.xインストール時から固定されていたので、
e1000eの自動ビルドはおそらく無駄で（4.10から4.15では意味があったが）、
4.16.xカーネルのセキュリティアップデートも行われていなかったのではないかと思っている。&lt;/p&gt;&lt;h3 id=&quot;hweカーネルのインストール&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#hwe%E3%82%AB%E3%83%BC%E3%83%8D%E3%83%AB%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&quot; aria-label=&quot;hweカーネルのインストール permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HWEカーネルのインストール&lt;/h3&gt;&lt;p&gt;はじめはUKUUを使って5.4.xにアップデートしたものの、
前項の懸念からUbuntuが公式に提供しているHWEカーネルというものを使うことにした。
これならばaptでカーネルが管理され、自動でパッチが適用されるものと思われる。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://iberianpig.github.io/posts/2017-02-06_how_to_upgrade_kernel/&quot; title=&quot;Ubuntuのベースバージョンを変えずにLinuxカーネルをアップグレードする方法 - iberianpigsty&quot;&gt;Ubuntuのベースバージョンを変えずにLinuxカーネルをアップグレードする方法 - iberianpigsty&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://gihyo.jp/admin/serial/01/ubuntu-recipe/0278&quot; title=&quot;第278回　Ubuntuカーネルとの付き合い方：Ubuntu Weekly Recipe｜gihyo.jp … 技術評論社&quot;&gt;第278回　Ubuntuカーネルとの付き合い方：Ubuntu Weekly Recipe｜gihyo.jp … 技術評論社&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Ubuntu 18.04の場合、&lt;code&gt;linux-generic-hwe-18.04&lt;/code&gt;が安定版、&lt;code&gt;linux-generic-hwe-18.04-edge&lt;/code&gt;が開発版ということだろうか。
今回は安定性を重視するので安定版を選んでアップデートする。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;sudo apt install linux-generic-hwe-18.04
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;このあとから以下のようになったので、このシステムでaptが管理していたカーネルバージョンは&lt;code&gt;4.15.0-115&lt;/code&gt;だったことがわかる。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;The following packages were automatically installed and are no longer required:
  linux-headers-4.15.0-115 linux-headers-4.15.0-115-generic
  linux-image-4.15.0-115-generic linux-modules-4.15.0-115-generic
  linux-modules-extra-4.15.0-115-generic
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;余談ukuuを使ったカーネル導入とデフォルトカーネルとgrubの設定&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E4%BD%99%E8%AB%87ukuu%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E3%82%AB%E3%83%BC%E3%83%8D%E3%83%AB%E5%B0%8E%E5%85%A5%E3%81%A8%E3%83%87%E3%83%95%E3%82%A9%E3%83%AB%E3%83%88%E3%82%AB%E3%83%BC%E3%83%8D%E3%83%AB%E3%81%A8grub%E3%81%AE%E8%A8%AD%E5%AE%9A&quot; aria-label=&quot;余談ukuuを使ったカーネル導入とデフォルトカーネルとgrubの設定 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;余談：UKUUを使ったカーネル導入とデフォルトカーネルとgrubの設定&lt;/h3&gt;&lt;p&gt;ここで、grubのデフォルトエントリがUKUUで入れた5.4.xカーネルのままで、
新たにインストールしたUbuntu HWEカーネルではなかった。
この項ではこの理由を検討するが、実際にはgrub（またはUbuntuに同梱されているgrub）のデフォルトの挙動であったので、
余談である。&lt;/p&gt;&lt;p&gt;（カーネルインストール時に自動で呼ばれるが）&lt;code&gt;update-grub&lt;/code&gt;実行時には以下のように表示される。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ sudo update-grub
Sourcing file `/etc/default/grub&amp;#x27;
Generating grub configuration file ...
Found linux image: /boot/vmlinuz-5.4.42-050442-generic      &amp;lt;-- UKUUで入れたカーネル（デフォルト）
Found initrd image: /boot/initrd.img-5.4.42-050442-generic
Found linux image: /boot/vmlinuz-5.4.0-47-generic           &amp;lt;-- 新しいカーネル（HWE）
Found initrd image: /boot/initrd.img-5.4.0-47-generic
Found linux image: /boot/vmlinuz-4.16.18-041618-generic     &amp;lt;-- 現在のカーネル（UKUU）
Found initrd image: /boot/initrd.img-4.16.18-041618-generic
Found linux image: /boot/vmlinuz-4.15.0-117-generic         &amp;lt;-- 未使用?
Found initrd image: /boot/initrd.img-4.15.0-117-generic
Found linux image: /boot/vmlinuz-4.15.0-115-generic         &amp;lt;-- aptが管理しているカーネル
Found initrd image: /boot/initrd.img-4.15.0-115-generic
Found Windows Boot Manager on /dev/sdc1@/EFI/Microsoft/Boot/bootmgfw.efi
Adding boot menu entry for EFI firmware configuration
done
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;/boot/grub/grub.cfg&lt;/code&gt;をみると、&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-grub&quot;&gt;menuentry &amp;#x27;Ubuntu&amp;#x27; --class ubuntu --class gnu-linux --class gnu --class os $menu
entry_id_option &amp;#x27;gnulinux-simple-ed8cbed5-714e-4201-b606-c41d570f834d&amp;#x27; {
        recordfail
        load_video
        gfxmode $linux_gfx_mode
        insmod gzio
        if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
        insmod part_gpt
        insmod ext2
        set root=&amp;#x27;hd0,gpt1&amp;#x27;
        if [ x$feature_platform_search_hint = xy ]; then
          search --no-floppy --fs-uuid --set=root --hint-bios=hd0,gpt1 --hint-ef
i=hd0,gpt1 --hint-baremetal=ahci0,gpt1  ed8cbed5-714e-4201-b606-c41d570f834d
        else
          search --no-floppy --fs-uuid --set=root ed8cbed5-714e-4201-b606-c41d570f834d
        fi
        linux   /boot/vmlinuz-5.4.42-050442-generic root=UUID=ed8cbed5-714e-4201-b606-c41d570f834d ro  quiet splash $vt_handoff
        initrd  /boot/initrd.img-5.4.42-050442-generic
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;このような記述があったので、grubメニューの0番目に表示される&lt;code&gt;Ubuntu&lt;/code&gt;という項目は&lt;code&gt;5.4.42-050442&lt;/code&gt;のカーネルを起動するようになっていることがわかる。
この設定は&lt;code&gt;apt install linux-generic-hwe-18.04&lt;/code&gt;のあと&lt;code&gt;update-grub2&lt;/code&gt;しても変わらなかった。
おそらくUKUUが自動で設定したと思われる（以下で調べるが、実際には違った）が、これをaptの管理するカーネルになるようにしたい。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-grub&quot;&gt;### BEGIN /etc/grub.d/10_linux ###
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;とあるので、この部分は&lt;code&gt;/etc/grub.d/10_linux&lt;/code&gt;からインクルードされている。&lt;/p&gt;&lt;p&gt;grub.d以下は標準出力をgrub.cfgに書き出し、エラー出力を&lt;code&gt;update-grub&lt;/code&gt;したときに表示するような
シェルスクリプトになっているようで、自動的にカーネルイメージを見つける作りになっているようだ。&lt;/p&gt;&lt;p&gt;grubのメニューには&lt;code&gt;Ubuntu&lt;/code&gt;（menuentry）、&lt;code&gt;Advanced options for Ubuntu&lt;/code&gt;（submenu./men）のように並ぶ。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.atmarkit.co.jp/ait/articles/1901/31/news048.html&quot; title=&quot;【 grub2-set-default／grub-set-default 】コマンド――GRUB 2のデフォルト起動メニューを設定する：Linux基本コマンドTips（277） - ＠IT&quot;&gt;【 grub2-set-default／grub-set-default 】コマンド――GRUB 2のデフォルト起動メニューを設定する：Linux基本コマンドTips（277） - ＠IT&lt;/a&gt;&lt;/p&gt;&lt;p&gt;一番上のmenuentryを生成している&lt;code&gt;/etc/grub.d/10_linux&lt;/code&gt;の一部：&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;    linux_entry &amp;quot;${OS}&amp;quot; &amp;quot;${version}&amp;quot; simple \
    &amp;quot;${GRUB_CMDLINE_LINUX} ${GRUB_CMDLINE_LINUX_DEFAULT}&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;関数linux_entryでは、第3引数に&lt;code&gt;simple&lt;/code&gt;が指定されている場合、以下のようなコード（一部）でmenuentryを生成する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;linux_entry ()
{
  os=&amp;quot;$1&amp;quot;
  version=&amp;quot;$2&amp;quot;
  type=&amp;quot;$3&amp;quot;
  args=&amp;quot;$4&amp;quot;

（略）

      echo &amp;quot;menuentry &amp;#x27;$(echo &amp;quot;$os&amp;quot; | grub_quote)&amp;#x27; ${CLASS} \$menuentry_id_option &amp;#x27;gnulinux-simple-$boot_device_id&amp;#x27; {&amp;quot; | sed &amp;quot;s/^/$submenu_indentation/&amp;quot;

（略）

        sed &amp;quot;s/^/$submenu_indentation/&amp;quot; &amp;lt;&amp;lt; EOF
        linux   ${rel_dirname}/${basename} root=${linux_root_device_thisversion} ro ${args}
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;${rel_dirname}や${basename}は関数&lt;code&gt;version_find_latest $list&lt;/code&gt;から生成しているようだ。
menuentryのループを回している部分では、以下のように&lt;code&gt;version_find_latest $list&lt;/code&gt;を呼び出していて、
&lt;code&gt;is_top_level&lt;/code&gt;は初回のループで&lt;code&gt;true&lt;/code&gt;になり、このとき一番上のメニューを生成する。
関数&lt;code&gt;linux_entry&lt;/code&gt;を呼び出しているところは上に書いたものと同じ部分である。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;is_top_level=true
while [ &amp;quot;x$list&amp;quot; != &amp;quot;x&amp;quot; ] ; do
  linux=`version_find_latest $list`

（略）

  if [ &amp;quot;x$is_top_level&amp;quot; = xtrue ] &amp;amp;&amp;amp; [ &amp;quot;x${GRUB_DISABLE_SUBMENU}&amp;quot; != xy ]; then
    linux_entry &amp;quot;${OS}&amp;quot; &amp;quot;${version}&amp;quot; simple \
    &amp;quot;${GRUB_CMDLINE_LINUX} ${GRUB_CMDLINE_LINUX_DEFAULT}&amp;quot;

    submenu_indentation=&amp;quot;$grub_tab&amp;quot;

    if [ -z &amp;quot;$boot_device_id&amp;quot; ]; then
        boot_device_id=&amp;quot;$(grub_get_device_id &amp;quot;${GRUB_DEVICE}&amp;quot;)&amp;quot;
    fi
    # TRANSLATORS: %s is replaced with an OS name
    echo &amp;quot;submenu &amp;#x27;$(gettext_printf &amp;quot;Advanced options for %s&amp;quot; &amp;quot;${OS}&amp;quot; | grub_quote)&amp;#x27; \$menuentry_id_option &amp;#x27;gnulinux-advanced-$boot_device_id&amp;#x27; {&amp;quot;
    is_top_level=false
  fi

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;$list&lt;/code&gt;は以下のように生成される。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;        list=
        for i in /boot/vmlinuz-* /vmlinuz-* /boot/kernel-* ; do
            if grub_file_is_not_garbage &amp;quot;$i&amp;quot; ; then list=&amp;quot;$list $i&amp;quot; ; fi
        done ;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これで問題は関数&lt;code&gt;version_find_latest&lt;/code&gt;のアルゴリズムということがわかった。&lt;/p&gt;&lt;p&gt;関数&lt;code&gt;version_find_latest&lt;/code&gt;は&lt;code&gt;/etc/grub.d/10_linux&lt;/code&gt;にはないので、
おそらくファイル先頭近くにある&lt;code&gt;. &amp;quot;$pkgdatadir/grub-mkconfig_lib&amp;quot;&lt;/code&gt;の部分で読み出されていると思われる。&lt;/p&gt;&lt;p&gt;&lt;code&gt;$pkgdatadir&lt;/code&gt;というのがどこかわからなかったので、&lt;code&gt;find&lt;/code&gt;で雑に検索を掛けたところ、&lt;code&gt;/usr/lib/grub/grub-mkconfig_lib&lt;/code&gt;を読み出していそうなことがわかった。
以下は&lt;code&gt;/usr/lib/grub/grub-mkconfig_lib&lt;/code&gt;の一部である。確かに&lt;code&gt;version_find_latest&lt;/code&gt;があった。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;version_test_gt ()
{
  version_test_gt_sedexp=&amp;quot;s/[^-]*-//;s/[._-]\(pre\|rc\|test\|git\|old\|trunk\)/~\1/g&amp;quot;
  version_test_gt_a=&amp;quot;`echo &amp;quot;$1&amp;quot; | sed -e &amp;quot;$version_test_gt_sedexp&amp;quot;`&amp;quot;
  version_test_gt_b=&amp;quot;`echo &amp;quot;$2&amp;quot; | sed -e &amp;quot;$version_test_gt_sedexp&amp;quot;`&amp;quot;
  version_test_gt_cmp=gt
  if [ &amp;quot;x$version_test_gt_b&amp;quot; = &amp;quot;x&amp;quot; ] ; then
    return 0
  fi

  # GRUB_FLAVOUR_ORDER is an ordered list of kernels, in decreasing
  # priority. Any items in the list take precedence over other kernels,
  # and earlier flavours are preferred over later ones.
  for flavour in ${GRUB_FLAVOUR_ORDER:-}; do
    version_test_gt_a_preferred=$(echo &amp;quot;$version_test_gt_a&amp;quot; | grep --  &amp;quot;-[0-9]*-$flavour\$&amp;quot;)
    version_test_gt_b_preferred=$(echo &amp;quot;$version_test_gt_b&amp;quot; | grep --  &amp;quot;-[0-9]*-$flavour\$&amp;quot;)

    if [ -n &amp;quot;$version_test_gt_a_preferred&amp;quot; -a -z &amp;quot;$version_test_gt_b_preferred&amp;quot; ] ; then
      return 0
    elif [ -z &amp;quot;$version_test_gt_a_preferred&amp;quot; -a -n &amp;quot;$version_test_gt_b_preferred&amp;quot; ] ; then
      return 1
    fi
  done

  case &amp;quot;$version_test_gt_a:$version_test_gt_b&amp;quot; in
    *.old:*.old) ;;
    *.old:*) version_test_gt_a=&amp;quot;`echo &amp;quot;$version_test_gt_a&amp;quot; | sed -e &amp;#x27;s/\.old$//&amp;#x27;`&amp;quot; ; version_test_gt_cmp=gt ;;
    *:*.old) version_test_gt_b=&amp;quot;`echo &amp;quot;$version_test_gt_b&amp;quot; | sed -e &amp;#x27;s/\.old$//&amp;#x27;`&amp;quot; ; version_test_gt_cmp=ge ;;
  esac
  dpkg --compare-versions &amp;quot;$version_test_gt_a&amp;quot; &amp;quot;$version_test_gt_cmp&amp;quot; &amp;quot;$version_test_gt_b&amp;quot;
  return &amp;quot;$?&amp;quot;
}

version_find_latest ()
{
  version_find_latest_a=&amp;quot;&amp;quot;
  for i in &amp;quot;$@&amp;quot; ; do
    if version_test_gt &amp;quot;$i&amp;quot; &amp;quot;$version_find_latest_a&amp;quot; ; then
      version_find_latest_a=&amp;quot;$i&amp;quot;
    fi
  done
  echo &amp;quot;$version_find_latest_a&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;GRUB_FLAVOUR_ORDER&lt;/code&gt;がおそらく&lt;code&gt;/etc/default/grub&lt;/code&gt;で指定されていなければ、
&lt;code&gt;dpkg --compare-versions PKG_A COMPARATOR PKG_B&lt;/code&gt;によってソートされそうなことがわかった。&lt;/p&gt;&lt;p&gt;ここでUKUUについて調べてみると、
UKUUは2019年1月に有料化しているようだが、
ppa:teejee2008/ppaとコードベースは残っていた。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://teejeetech.in/2019/01/20/ukuu-v19-01/&quot; title=&quot;Ukuu v19.01 – TeejeeTech&quot;&gt;Ukuu v19.01 – TeejeeTech&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gothicVI
January 22, 2019 at 1:18 am&lt;/p&gt;&lt;p&gt;So ukuu now completely turned into a closed source project?&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;Tony George
January 22, 2019 at 12:09 pm&lt;/p&gt;&lt;p&gt;Yes.
Older versions are still open-source. Somebody can develop that version further if they have the time and interest. I may open the source again if I stop working on it (it won’t happen anytime soon).&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/teejee2008/ukuu&quot; title=&quot;teejee2008/ukuu: A paid version of Ukuu is now available with more features. https://teejeetech.in/2019/01/20/ukuu-v19-01/ Kernel Update Utility for Ubuntu-based distributions. Provides desktop notifications when new mainline kernel is available. Lists kernels from http://kernel.ubuntu.com/~kernel-ppa/mainline/ with options to install and remove.&quot;&gt;teejee2008/ukuu: A paid version of Ukuu is now available with more features. https://teejeetech.in/2019/01/20/ukuu-v19-01/ Kernel Update Utility for Ubuntu-based distributions. Provides desktop notifications when new mainline kernel is available. Lists kernels from http://kernel.ubuntu.com/~kernel-ppa/mainline/ with options to install and remove.&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;grubの設定をいじっているソースコードを探したところ、&lt;code&gt;update-grub&lt;/code&gt;を呼び出すくらいで特に優先度を設定するようなことはしていなさそうだったので、
&lt;code&gt;dpkg --compare-versions&lt;/code&gt;を使ったソートの結果、単純に最初に来たカーネルがデフォルト（一番上のmenuentry）に使われていそうとわかった（なにも特殊なことはない普通の動作だ..）。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/teejee2008/ukuu/blob/master/src/Common/LinuxKernel.vala#L1298&quot; title=&quot;ukuu/LinuxKernel.vala at master · teejee2008/ukuu&quot;&gt;ukuu/LinuxKernel.vala#L1298 at master · teejee2008/ukuu&lt;/a&gt;&lt;/p&gt;&lt;p&gt;問題はdpkgがUbuntu HWEカーネルよりUKUUで入れた5.4.xカーネルの方が新しいと判断していることが原因で、
UKUUは特殊なことをしていないとわかったので、
単純にUKUUから入れたカーネルを削除して&lt;code&gt;update-grub&lt;/code&gt;すればデフォルトが（もっとも新しい）HWEカーネルになりそうだとわかった。
一度別のカーネル（HWEでOK）で起動して、UKUUのGUIを使ってUKUU側の5.4.xを削除（ふつうに選択してRemove）すればデフォルトでもっとも新しいHWEカーネルが起動するようになる。&lt;/p&gt;&lt;h2 id=&quot;準備中e1000eのdkms設定&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E6%BA%96%E5%82%99%E4%B8%ADe1000e%E3%81%AEdkms%E8%A8%AD%E5%AE%9A&quot; aria-label=&quot;準備中e1000eのdkms設定 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;（準備中）e1000eのDKMS設定&lt;/h2&gt;&lt;h3 id=&quot;intel-nicのドライバe1000eについて&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#intel-nic%E3%81%AE%E3%83%89%E3%83%A9%E3%82%A4%E3%83%90e1000e%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6&quot; aria-label=&quot;intel nicのドライバe1000eについて permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Intel NICのドライバe1000eについて&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ find /lib/modules/5.4.0-47-generic -name e1000e*
/lib/modules/5.4.0-47-generic/kernel/drivers/net/ethernet/intel/e1000e
/lib/modules/5.4.0-47-generic/kernel/drivers/net/ethernet/intel/e1000e/e1000e.ko
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;このようにデフォルトでe1000eのドライバがカーネルに付属しているようなのだが、
（デバイスによっては?）チェックサム検証に失敗（&lt;code&gt;The NVM Checksum Is Not Valid&lt;/code&gt; by &lt;code&gt;netdev.c&lt;/code&gt;）する問題がある。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# lspci -vvv
00:1f.6 Ethernet controller: Intel Corporation Ethernet Connection (2) I219-V
    Subsystem: Intel Corporation Ethernet Connection (2) I219-V
    Control: I/O- Mem+ BusMaster- SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx-
    Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast &amp;gt;TAbort- &amp;lt;TAbort- &amp;lt;MAbort- &amp;gt;SERR- &amp;lt;PERR- INTx-
    Interrupt: pin A routed to IRQ 16
    Region 0: Memory at df100000 (32-bit, non-prefetchable) [size=128K]
    Capabilities: [c8] Power Management version 3
        Flags: PMEClk- DSI+ D1- D2- AuxCurrent=0mA PME(D0+,D1-,D2-,D3hot+,D3cold+)
        Status: D0 NoSoftRst+ PME-Enable- DSel=0 DScale=1 PME-
    Capabilities: [d0] MSI: Enable- Count=1/1 Maskable- 64bit+
        Address: 00000000fee00338  Data: 0000
    Capabilities: [e0] PCI Advanced Features
        AFCap: TP+ FLR+
        AFCtrl: FLR-
        AFStatus: TP-
    Kernel modules: e1000e  &amp;lt;-- これが動かない
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;エラーログ&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ zegrep e1000e /var/log/kern.log*
kernel: [    1.296005] e1000e: Intel(R) PRO/1000 Network Driver - 3.2.6-k
kernel: [    1.296006] e1000e: Copyright(c) 1999 - 2015 Intel Corporation.
kernel: [    1.296023] e1000e 0000:00:1f.6: enabling device (0000 -&amp;gt; 0002)
kernel: [    1.296199] e1000e 0000:00:1f.6: Interrupt Throttling Rate (ints/sec) set to dynamic conservative mode
kernel: [    1.546779] e1000e 0000:00:1f.6: The NVM Checksum Is Not Valid
kernel: [    1.588850] e1000e: probe of 0000:00:1f.6 failed with error -5
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;そのため結局は無効にして自分でビルドする必要がある。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://downloadcenter.intel.com/ja/download/15817&quot; title=&quot;ダウンロード Linux * での PCIe * Intel®ギガビット・イーサネット・ネットワーク接続向けインテル®ネットワーク・アダプター・ドライバー&quot;&gt;ダウンロード Linux &lt;em&gt; での PCIe &lt;/em&gt; Intel®ギガビット・イーサネット・ネットワーク接続向けインテル®ネットワーク・アダプター・ドライバー&lt;/a&gt;&lt;/p&gt;&lt;p&gt;解凍したあと、&lt;code&gt;src/nvm.c&lt;/code&gt;の&lt;code&gt;e1000e_validate_nvm_checksum_generic&lt;/code&gt;が0を返すように編集する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# チェックサム検証のスキップ
sed -i &amp;quot;/s32 e1000e_validate_nvm_checksum_generic(struct e1000_hw \*hw)/N;s/\n{/\n{return 0;/&amp;quot; nvm.c
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;ukuuとe1000eのビルドについて&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#ukuu%E3%81%A8e1000e%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6&quot; aria-label=&quot;ukuuとe1000eのビルドについて permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UKUUとe1000eのビルドについて&lt;/h3&gt;&lt;p&gt;今回はUKUUを使わないためこれは余談なのだが、UKUUで導入したカーネルでe1000eをビルドするときには、チェックサム検証の問題に加えてABIに関連した問題が起こる。
ここにe1000eのソースコード（&lt;code&gt;kcompat.h&lt;/code&gt;）の一部を引用するが、以下のようにe1000eのプログラム内でABIのチェックが行われていて、
4.16.xのカーネルをUKUUで導入した際はこのバージョンチェックをコメントアウトする必要があった。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;/* Ubuntu Release ABI is the 4th digit of their kernel version. You can find
 * it in /usr/src/linux/$(uname -r)/include/generated/utsrelease.h for new
 * enough versions of Ubuntu. Otherwise you can simply see it in the output of
 * uname as the 4th digit of the kernel. The UTS_UBUNTU_RELEASE_ABI is not in
 * the linux-source package, but in the linux-headers package. It begins to
 * appear in later releases of 14.04 and 14.10.
 *
 * Ex:
 * &amp;lt;Ubuntu 14.04.1&amp;gt;
 *  $uname -r
 *  3.13.0-45-generic
 * ABI is 45
 *
 * &amp;lt;Ubuntu 14.10&amp;gt;
 *  $uname -r
 *  3.16.0-23-generic
 * ABI is 23
 */

(略)

#if UTS_UBUNTU_RELEASE_ABI &amp;gt; 255
#error UTS_UBUNTU_RELEASE_ABI is too large...
#endif /* UTS_UBUNTU_RELEASE_ABI &amp;gt; 255 */
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# ABIチェックのスキップ
sed -i &amp;quot;s/#error UTS_UBUNTU_RELEASE_ABI is too large.../\/\/#error UTS_UBUNTU_RELEASE_ABI is too large.../&amp;quot; kcompat.h
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;他にe1000e以外で注意が必要かもしれない点として、
おそらくメジャーバージョンが1ケタであるせいで、この数字の始まりが0からになっているため、
これを直接Cコードに埋め込んだりすると8進数扱いされて（さらに数字に8以上が含まれていて）ビルドが通らないということがあった（どのソフトウェアか覚えていないが）。&lt;/p&gt;&lt;h3 id=&quot;これまでのe1000e自動ビルドについて&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%81%93%E3%82%8C%E3%81%BE%E3%81%A7%E3%81%AEe1000e%E8%87%AA%E5%8B%95%E3%83%93%E3%83%AB%E3%83%89%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6&quot; aria-label=&quot;これまでのe1000e自動ビルドについて permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;これまでのe1000e自動ビルドについて&lt;/h3&gt;&lt;p&gt;Linuxにはカーネルバージョンをアップデートしたときにドライバなどのモジュールを再ビルドするための
DKMS（Dynamic Kernel Module Support）というソフトウェアがあるのだが、
導入当時はこれを使うキャパシティがなかったので、当時でもなんとなく使い方のわかっていたsystemdを使って
起動時に毎回e1000eを自動ビルド・再インストールするという荒い方法で継続的に動作させていた。&lt;/p&gt;&lt;p&gt;/etc/systemd/system/uscript-e1000e.service&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-systemd&quot;&gt;[Unit]
Description=Make Install e1000e

[Service]
Type=oneshot
ExecStart=/etc/uscript/e1000e

TimeoutSec=0
StandardOutput=tty
RemainAfterExit=yes
SysVStartPriority=99

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;/etc/uscript/e1000e&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!/bin/bash

modprobe -r e1000e
make clean -C /etc/uscript/e1000e-latest/src
make install -C /etc/uscript/e1000e-latest/src
modprobe e1000e
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;カーネルバージョンを更新するにあたって、DKMSに移行することとし、これは不要になったので削除した。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ sudo systemctl stop uscript-e1000e.service
$ sudo systemctl disable uscript-e1000e.service
Removed /etc/systemd/system/multi-user.target.wants/uscript-e1000e.service.
$ sudo rm /etc/systemd/system/uscript-e1000e.service
$ sudo rm /etc/uscript/e1000e

$ sudo modprobe -r e1000e
$ sudo make uninstall -C /etc/uscript/e1000e-latest/src
$ sudo rm -r /etc/uscript/e1000e-latest
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;dkmsを使ったe1000e自動ビルドについて&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#dkms%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9Fe1000e%E8%87%AA%E5%8B%95%E3%83%93%E3%83%AB%E3%83%89%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6&quot; aria-label=&quot;dkmsを使ったe1000e自動ビルドについて permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DKMSを使ったe1000e自動ビルドについて&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://netlog.jpn.org/r271-635/2019/06/ubuntu_rtl8189ftv_dkms.html&quot; title=&quot;Ubuntu 16.04でRTL8189FTV （RTL8188FU）ドライバのDKMS化 (r271-635)&quot;&gt;Ubuntu 16.04でRTL8189FTV （RTL8188FU）ドライバのDKMS化 (r271-635)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;これを参考にカーネルアップデート時に自動でリビルドするDKMSに対応させる作業をした。&lt;/p&gt;&lt;p&gt;まず、あらかじめ&lt;code&gt;dkms&lt;/code&gt;をインストールしておく。
もし先にカーネルを更新してしまって&lt;code&gt;dkms&lt;/code&gt;を取得できないときは、一度手動で&lt;code&gt;e1000e&lt;/code&gt;をビルドすればOK（&lt;code&gt;make uninstall&lt;/code&gt;を忘れずに）。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo apt install dkms
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;まずは&lt;code&gt;/usr/src&lt;/code&gt;以下にソースディレクトリをコピーする。
今回の場合、&lt;code&gt;e1000e-3.8.4.tar.gz&lt;/code&gt;を解凍した&lt;code&gt;e1000e-3.8.4&lt;/code&gt;ディレクトリを&lt;code&gt;/usr/src/e1000e-3.8.4&lt;/code&gt;としてコピーする。
そして&lt;code&gt;/usr/src/e1000e-3.8.4/dkms.conf&lt;/code&gt;を作成する。&lt;/p&gt;&lt;p&gt;dkms.confの細かい説明：&lt;a href=&quot;https://manpages.ubuntu.com/manpages/bionic/man8/dkms.8.html#dkms.conf&quot; title=&quot;Ubuntu Manpage: dkms - Dynamic Kernel Module Support&quot;&gt;Ubuntu Manpage: dkms - Dynamic Kernel Module Support&lt;/a&gt;&lt;/p&gt;&lt;p&gt;ディレクトリ構造&lt;/p&gt;&lt;pre&gt;&lt;code&gt;| /usr/src/e1000e-3.8.4/
|-- README
|-- dkms.conf  &amp;lt;-- New!
|-- ...
|-- src/
|----- Makefile
|----- e1000.h
|----- ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;dkms.conf&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-dkms&quot;&gt;PACKAGE_NAME=&amp;quot;e1000e&amp;quot;
PACKAGE_VERSION=&amp;quot;3.8.4&amp;quot;
CLEAN=&amp;quot;cd src; make clean&amp;quot;
BUILT_MODULE_NAME[0]=&amp;quot;e1000e&amp;quot;
BUILT_MODULE_LOCATION[0]=&amp;quot;src/&amp;quot;
DEST_MODULE_NAME[0]=&amp;quot;e1000e-dkms&amp;quot;
MAKE[0]=&amp;quot;cd src; make -j$(nproc)&amp;quot;
DEST_MODULE_LOCATION[0]=&amp;quot;/updates/dkms&amp;quot;
AUTOINSTALL=&amp;quot;yes&amp;quot;
REMAKE_INITRD=&amp;quot;yes&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これだけでDKMSに登録する準備が完了した。次はDKMSにこのソースディレクトリを登録する。
DKMSはデフォルトで&lt;code&gt;/usr/src&lt;/code&gt;以下のディレクトリを見に行くように思われる。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ sudo dkms add e1000e/3.8.4

Creating symlink /var/lib/dkms/e1000e/3.8.4/source -&amp;gt;
                 /usr/src/e1000e-3.8.4

DKMS: add completed.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;/var/lib/dkms/e1000e/3.8.4/source&lt;/code&gt;からのシンボリックリンクが張られ、DKMSに登録された。DKMSから削除するには：&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ sudo dkms remove e1000e/3.8.4 --all

------------------------------
Deleting module version: 3.8.4
completely from the DKMS tree.
------------------------------
Done.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;次はビルドしてみる。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ sudo dkms build e1000e/3.8.4

Kernel preparation unnecessary for this kernel.  Skipping...

Building module:
cleaning build area...
cd src; make -j8....
Signing module:
 - /var/lib/dkms/e1000e/3.8.4/5.4.0-47-generic/x86_64/module/e1000e-dkms.ko
Secure Boot not enabled on this system.
cleaning build area...

DKMS: build completed.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;そしてインストール。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ sudo dkms install e1000e/3.8.4

e1000e-dkms:
Running module version sanity check.
 - Original module
   - No original module exists within this kernel
 - Installation
   - Installing to /lib/modules/5.4.0-47-generic/updates/dkms/

depmod...

DKMS: install completed.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;デフォルトの&lt;code&gt;e1000e&lt;/code&gt;を無効化する。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo modprobe -r e1000e

# 再起動時にロードされないようにnouveauにならって設定しようとしたが、うまくいかなかった
# printf &amp;quot;# disable default e1000e driver; use self-built version instead.\nblacklist e1000e\n&amp;quot; | sudo tee /etc/modprobe.d/blacklist-e1000e.conf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;自動でモジュールが読み込まれないと思われるので、&lt;code&gt;dkms&lt;/code&gt;の方の&lt;code&gt;e1000e&lt;/code&gt;を&lt;code&gt;modprobe&lt;/code&gt;を使って手動で読み込む。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo modprobe e1000e-dkms
modinfo e1000e-dkms
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;https://blog.spiralray.net/archives/474&quot; title=&quot;オンボードのEthernetコントローラ(I219-V)がUbuntuで動かない時の対処 | Ray&amp;#x27;s Note&quot;&gt;オンボードのEthernetコントローラ(I219-V)がUbuntuで動かない時の対処 | Ray&amp;#x27;s Note&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[ArduinoのPWM信号をアナログスイッチで非同時マルチチャンネル音源として使う]]></title><description><![CDATA[ArduinoのPWM信号をアナログスイッチで非同時マルチチャンネル音源として使う 4回路入り CMOSアナログスイッチ TC74HC4066AP(F…]]></description><link>https://blog.aoirint.com2020/multi_channel_speaker/</link><guid isPermaLink="false">https://blog.aoirint.com2020/multi_channel_speaker/</guid><pubDate>Sat, 19 Sep 2020 23:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;arduinoのpwm信号をアナログスイッチで非同時マルチチャンネル音源として使う&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#arduino%E3%81%AEpwm%E4%BF%A1%E5%8F%B7%E3%82%92%E3%82%A2%E3%83%8A%E3%83%AD%E3%82%B0%E3%82%B9%E3%82%A4%E3%83%83%E3%83%81%E3%81%A7%E9%9D%9E%E5%90%8C%E6%99%82%E3%83%9E%E3%83%AB%E3%83%81%E3%83%81%E3%83%A3%E3%83%B3%E3%83%8D%E3%83%AB%E9%9F%B3%E6%BA%90%E3%81%A8%E3%81%97%E3%81%A6%E4%BD%BF%E3%81%86&quot; aria-label=&quot;arduinoのpwm信号をアナログスイッチで非同時マルチチャンネル音源として使う permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ArduinoのPWM信号をアナログスイッチで非同時マルチチャンネル音源として使う&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.marutsu.co.jp/pc/i/37603/&quot;&gt;4回路入り CMOSアナログスイッチ TC74HC4066AP(F)｜電子部品・半導体通販のマルツ&lt;/a&gt;&lt;/p&gt;&lt;p&gt;アナログスイッチというものを買って試してみました。
その名の通りアナログ信号をスイッチングするICです。
このICには4回路入っています（4つスイッチがあります）。
アナログ信号（PWM信号）源としてArduino UNO（互換品）を使いました。&lt;/p&gt;&lt;h2 id=&quot;pwm&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#pwm&quot; aria-label=&quot;pwm permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PWM&lt;/h2&gt;&lt;p&gt;PWM（Pulse Width Modulation）はパルス信号の幅（デューティ比）を変化させる変調のことです。
ここでは、スイッチのON/OFFの比率を調節する形で、
デジタルパルス信号の平均電圧を可変にする（擬似的なアナログ信号を作る）ために使います（参考：&lt;a href=&quot;https://ja.wikipedia.org/wiki/%E3%83%91%E3%83%AB%E3%82%B9%E5%B9%85%E5%A4%89%E8%AA%BF&quot;&gt;パルス幅変調 - Wikipedia&lt;/a&gt;）。&lt;/p&gt;&lt;p&gt;[
デューティ比 = \frac{{\rm ON} の時間（=パルス幅）}{パルスの周期}
]&lt;/p&gt;&lt;p&gt;パルス幅 1μs、パルス周期 4μs（つまりON 1μs、OFF 3μsの繰り返し）のとき、デューティ比は0.25になります（参考：&lt;a href=&quot;https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%A5%E3%83%BC%E3%83%86%E3%82%A3%E6%AF%94&quot;&gt;デューティ比 - Wikipedia&lt;/a&gt;）。&lt;/p&gt;&lt;p&gt;デューティ比 (D) 、パルス電圧 (V) のとき、平均電圧 (V&amp;#x27; = D V) となります。&lt;/p&gt;&lt;h2 id=&quot;arduinoのpwm制御&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#arduino%E3%81%AEpwm%E5%88%B6%E5%BE%A1&quot; aria-label=&quot;arduinoのpwm制御 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ArduinoのPWM制御&lt;/h2&gt;&lt;p&gt;ArduinoにはPWMを利用したアナログ出力関数（&lt;a href=&quot;https://cdn.arduino.cc/reference/jp/language/functions/analog-io/analogwrite/&quot;&gt;analogWrite - Arduinoリファレンス&lt;/a&gt;）があります。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.arduino.cc/en/Tutorial/PWM&quot;&gt;Arduino - PWM&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://labview.exblog.jp/20465460/&quot;&gt;Arduino PWM 周波数　高速化 : LabVIEW　info. Sharing 新館&lt;/a&gt;、
&lt;a href=&quot;https://ehbtj.com/electronics/speedup-arduino/&quot;&gt;Arduinoの高速化 | なんでも独り言&lt;/a&gt;、
&lt;a href=&quot;https://qiita.com/autumn-position/items/ac016c58190f77f66a13&quot;&gt;Arduinoプログラムの高速化 - Qiita&lt;/a&gt;
を参考にしていきます。&lt;/p&gt;&lt;p&gt;まず今回の内容とはあまり関係ないですが、
Arduinoの標準的な関数を使ったGPIO制御は（安全で楽、また互換性が高いですが）遅いということで、
Arduinoの本体であるAVRマイコンATmegaのレジスタを直接操作することで、高速化が見込めるらしいです。
注意点や詳しいことはリンク先の参照をお願いします。&lt;/p&gt;&lt;p&gt;また、ArduinoのデフォルトのPWM制御は、
動作クロックに対する分周比がだいたいのピンで64になっていて、
動作クロック16MHzのUNOの場合、約490Hzのパルスを使ったPWMになっているということです（オシロがほしいです..）。
これもタイマー関連のレジスタを直接操作して分周比を変更することで、PWMの周波数を変えることができます。&lt;/p&gt;&lt;p&gt;今回はPCで再生するような音声信号をPWMで再生します。よくある音声のサンプリング周波数は44100Hzまたは48000Hz（この周期で振幅＝電圧が変化する）で、これを再生するには490Hzのパルスでは遅すぎます。&lt;/p&gt;&lt;h2 id=&quot;音声データの設定&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E9%9F%B3%E5%A3%B0%E3%83%87%E3%83%BC%E3%82%BF%E3%81%AE%E8%A8%AD%E5%AE%9A&quot; aria-label=&quot;音声データの設定 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;音声データの設定&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://nn-hokuson.hatenablog.com/entry/2017/09/01/092945&quot;&gt;【Arduino】WAVまたはMP3ファイルを再生する - おもちゃラボ&lt;/a&gt;を参考にしていきます。&lt;/p&gt;&lt;p&gt;今回は音声データをArduinoのプログラムメモリに直接載せて再生することにします。
手元のArduino UNO互換機ではプログラムメモリ容量32256 bytesだったので、
音声データを載せるにも再生プログラムと合わせてこの範囲に収める必要があります。&lt;/p&gt;&lt;p&gt;そこで割とよく見るやり方で、データ量を減らすためにサンプリング周波数を8000Hzに落として、生の8bit波形を直接ソースコードに埋め込んでいきます。PWMの周波数が十分大きく、巨大な波形データを何らかの方法で格納できればサンプリング周波数を上げることができそうですが、今回はこの形でいきます。&lt;/p&gt;&lt;p&gt;シリアル通信で波形データをリアルタイムに送るのは遅すぎて無理と思われるので、
そのような場合にはMicroSDカード（TFカード）から読み出しながら再生するのがよさそうです。
シリアル通信経由で音源データをあらかじめ書き込むためのAPIくらいは作れるかもしれないですね。&lt;/p&gt;&lt;p&gt;音源には著作権の切れているハレルヤ・コーラスの頭近くから2秒分を切り出したものを使ってみます。生の波形（handel_2s.raw）はモノラル 8000Hz 2秒 振幅8bitで16000 bytesになります。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Messiah_Hallelujah_Chorus_1916.ogg&quot;&gt;File:Messiah Hallelujah Chorus 1916.ogg - Wikimedia Commons&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;handel_2s.wav&quot;&gt;handel_2s.wav&lt;/a&gt;（44100Hz）&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;handel_2s.raw&quot;&gt;handel_2s.raw&lt;/a&gt;（8000Hz、8bit）&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;音声データは3番ピン（Timer/Counter2、OCR2B）から出力することにします。&lt;/p&gt;&lt;p&gt;&lt;code&gt;xxd&lt;/code&gt;コマンドが使える場合、&lt;code&gt;xxd -i handel_2s.raw&lt;/code&gt;で&lt;code&gt;unsigned char handel_2s_raw[]&lt;/code&gt;を定義するCコードが出力されます。この頭に&lt;code&gt;const PROGMEM&lt;/code&gt;を付けてArduino用のソースコードに貼り付けます。&lt;/p&gt;&lt;h2 id=&quot;単チャンネル再生&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E5%8D%98%E3%83%81%E3%83%A3%E3%83%B3%E3%83%8D%E3%83%AB%E5%86%8D%E7%94%9F&quot; aria-label=&quot;単チャンネル再生 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;単チャンネル再生&lt;/h2&gt;&lt;p&gt;基本的には先に挙げた記事と同じことをしていきます。シリアル通信を入れると遅くなってしまうので、動作確認などで入れた場合は最終的には外したほうがいいです。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://garretlab.web.fc2.com/arduino/inside/hardware/arduino/avr/cores/arduino/wiring_analog.c/analogWrite.html&quot; title=&quot;analogWrite()&quot;&gt;analogWrite() - Arduinoで遊ぶページ&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://avrwiki.osdn.jp/cgi-bin/wiki.cgi?page=Timer2&quot; title=&quot;Timer2 - FreeStyleWiki&quot;&gt;Timer2 - AVRWiki&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;const PROGMEM unsigned char handel_2s_raw[] = {
  // 略
};
const unsigned int handel_2s_raw_len = 16000;

int counter = 0;

void setup(void) {
  pinMode(3, OUTPUT);
  TCCR2A = _BV(COM2B1) | _BV(WGM21) | _BV(WGM20);
  TCCR2B = _BV(CS20);
}

void loop(void) {
  OCR2B = pgm_read_byte_near(&amp;amp;handel_2s_raw[counter]);

  counter += 1;
  if (counter &amp;gt; handel_2s_raw_len) counter = 0;

  delayMicroseconds(125);
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Arduinoの3番ピン・GNDのとスピーカの端子（ダイナミックスピーカの場合はPAM8012やPAM8403などのアンプがほしい、圧電スピーカ・イヤホンなどの場合は不要）を接続する。&lt;/p&gt;&lt;h2 id=&quot;多チャンネル再生&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E5%A4%9A%E3%83%81%E3%83%A3%E3%83%B3%E3%83%8D%E3%83%AB%E5%86%8D%E7%94%9F&quot; aria-label=&quot;多チャンネル再生 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;多チャンネル再生&lt;/h2&gt;&lt;h3 id=&quot;回路の設定&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E5%9B%9E%E8%B7%AF%E3%81%AE%E8%A8%AD%E5%AE%9A&quot; aria-label=&quot;回路の設定 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;回路の設定&lt;/h3&gt;&lt;p&gt;図を&lt;a href=&quot;https://www.marutsu.co.jp/pc/i/37603/&quot;&gt;TC74HC4066A&lt;/a&gt;の&lt;a href=&quot;https://www.marutsu.co.jp/contents/shop/marutsu/datasheet/TC74HC4066A.pdf&quot;&gt;データシート&lt;/a&gt;から引用していきます。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;TC74HC4066A_1.png&quot; alt=&quot;TC74HC4066A_1&quot; title=&quot;TC74HC4066A_1&quot;/&gt;&lt;/p&gt;&lt;p&gt;とりあえずArduinoの4、5、6、7番ピンをアナログスイッチのスイッチングに使います
（ラインデコーダなんかを使って2bitにしてもよさそうですが）。
これはデータシートから、それぞれIC側の13、5、6、12番ピン（1C、2C、3C、4C）に接続します。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;TC74HC4066A_2.png&quot; alt=&quot;TC74HC4066A_2&quot; title=&quot;TC74HC4066A_2&quot;/&gt;&lt;/p&gt;&lt;p&gt;各ピンがHighのときにn I/Oがn O/Iに出力されます。例えば、1C=Highのとき、1 O/I = 1 I/O（アナログ信号）になり、1C=Lowのとき、1 O/I=0 Vになります。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[GPU PC (Desktop) のセットアップメモ]]></title><description><![CDATA[GPU PC (Desktop) のセットアップメモ Ubuntu 18.04.5 LTS (Bionic Beaver) Ubuntu 18.04、Windows 1…]]></description><link>https://blog.aoirint.com2020/gpu_pc_setup/</link><guid isPermaLink="false">https://blog.aoirint.com2020/gpu_pc_setup/</guid><pubDate>Fri, 18 Sep 2020 11:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;gpu-pc-desktop-のセットアップメモ&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#gpu-pc-desktop-%E3%81%AE%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97%E3%83%A1%E3%83%A2&quot; aria-label=&quot;gpu pc desktop のセットアップメモ permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GPU PC (Desktop) のセットアップメモ&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://releases.ubuntu.com/18.04.5/&quot; title=&quot;Ubuntu 18.04.5 LTS (Bionic Beaver)&quot;&gt;Ubuntu 18.04.5 LTS (Bionic Beaver)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Ubuntu 18.04、Windows 10のデュアルブート環境を構築する。
プロキシ下を想定しているので、不要な場合は適宜調整。&lt;/p&gt;&lt;h2 id=&quot;時刻ずれの解消&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E6%99%82%E5%88%BB%E3%81%9A%E3%82%8C%E3%81%AE%E8%A7%A3%E6%B6%88&quot; aria-label=&quot;時刻ずれの解消 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;時刻ずれの解消&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://linux.just4fun.biz/?Linux%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/%E3%83%87%E3%83%A5%E3%82%A2%E3%83%AB%E3%83%96%E3%83%BC%E3%83%88%E3%81%AEWindows%E6%99%82%E5%88%BB%E3%82%92UTC%E3%81%AB%E3%81%99%E3%82%8B&quot; title=&quot;Linux環境設定/デュアルブートのWindows時刻をUTCにする - Linuxと過ごす&quot;&gt;Linux環境設定/デュアルブートのWindows時刻をUTCにする - Linuxと過ごす&lt;/a&gt;&lt;/p&gt;&lt;p&gt;デュアルブート環境では、BIOSの時刻を介してWindows側の時刻管理（ローカル時間）とUbuntu側の時刻管理（UTC時間）が衝突して、タイムゾーンの時差分、時計がずれてしまう。ここでは、Windows側の時刻管理をUTC時間にするようにレジストリを変更して対処する。&lt;/p&gt;&lt;p&gt;Windows上で管理者権限でコマンドプロンプトを起動し、以下のコマンドを実行する。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!cmd
reg add &amp;quot;HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\TimeZoneInformation&amp;quot; /v RealTimeIsUniversal /d 1 /t REG_DWORD /f
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;ntpサーバの設定プロキシ環境&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#ntp%E3%82%B5%E3%83%BC%E3%83%90%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7%E7%92%B0%E5%A2%83&quot; aria-label=&quot;ntpサーバの設定プロキシ環境 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NTPサーバの設定（プロキシ環境）&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://sicklylife.hatenablog.com/entry/2016/02/03/201557&quot; title=&quot;Ubuntu 18.04 / 16.04 で時刻合わせの設定を変更する - Sickly Life Blog&quot;&gt;Ubuntu 18.04 / 16.04 で時刻合わせの設定を変更する - Sickly Life Blog&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://yyatsuo.com/post-1297/&quot; title=&quot;systemdのSNTPクライアント機能を使ってみる | Keep the Light Alive&quot;&gt;systemdのSNTPクライアント機能を使ってみる | Keep the Light Alive&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://go-journey.club/archives/9491&quot; title=&quot;【Windows】「ハードウェアクロック」と「システムクロック」と「NTP 時刻同期」の関係 | 100%レンタルサーバーを使いこなすサイト&quot;&gt;【Windows】「ハードウェアクロック」と「システムクロック」と「NTP 時刻同期」の関係 | 100%レンタルサーバーを使いこなすサイト&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;時刻同期のためプロキシ内のNTPサーバを設定する。&lt;/p&gt;&lt;p&gt;Settings &amp;gt; Details &amp;gt; Date &amp;amp; Timeで使われるNTPサービスは&lt;code&gt;systemd-timesyncd&lt;/code&gt;。&lt;/p&gt;&lt;p&gt;設定ファイルの&lt;code&gt;/etc/systemd/timesyncd.conf&lt;/code&gt;を開いて編集する。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!systemd
[Time]
NTP=YOUR_NTP_SERVER
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;#!bash
sudo systemctl restart systemd-timesyncd
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これで時刻が同期される。&lt;/p&gt;&lt;h2 id=&quot;プロキシの設定-1-environment-variable-apt&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7%E3%81%AE%E8%A8%AD%E5%AE%9A-1-environment-variable-apt&quot; aria-label=&quot;プロキシの設定 1 environment variable apt permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;プロキシの設定 (1) Environment Variable, apt&lt;/h2&gt;&lt;p&gt;Settings &amp;gt; Networkからプロキシを設定する。設定した内容は&lt;code&gt;HTTP_PROXY&lt;/code&gt;などの環境変数に出力される。スキーム部分は不要（OS側で付けるので二重プロトコルになってしまう）。&lt;/p&gt;&lt;p&gt;また/etc/apt/apt.confを作成し、プロキシ設定を追記する&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!apt
Acquire::http::proxy &amp;quot;http://YOUR_HTTP_PROXY&amp;quot;;
Acquire::https::proxy &amp;quot;http://YOUR_HTTP_PROXY&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;package-indexの更新とpackageの更新&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#package-index%E3%81%AE%E6%9B%B4%E6%96%B0%E3%81%A8package%E3%81%AE%E6%9B%B4%E6%96%B0&quot; aria-label=&quot;package indexの更新とpackageの更新 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Package Indexの更新とPackageの更新&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;#!bash
sudo apt update
sudo apt upgrade -y
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;gitビルドツールほかのインストール&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#git%E3%83%93%E3%83%AB%E3%83%89%E3%83%84%E3%83%BC%E3%83%AB%E3%81%BB%E3%81%8B%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&quot; aria-label=&quot;gitビルドツールほかのインストール permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;git、ビルドツールほかのインストール&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;#!bash
sudo apt install -y \
  git \
  build-essential \
  make \
  cmake \
  vim
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;#!bash
git config --global core.editor vim
git config --global credential.helper cache
git config --global user.name YOUR_NAME
git config --global user.email YOUR_EMAIL
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;~/.vimrc&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!vim
set shiftwidth=4
set tabstop=4
set expandtab
&amp;quot;set number
set cursorline
set smartindent
set laststatus=2
syntax enable

set hlsearch
nmap &amp;lt;Esc&amp;gt;&amp;lt;Esc&amp;gt; :nohlsearch&amp;lt;CR&amp;gt;&amp;lt;Esc&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;日本語imeibus-mozc言語サポートのインストール&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E6%97%A5%E6%9C%AC%E8%AA%9Eimeibus-mozc%E8%A8%80%E8%AA%9E%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&quot; aria-label=&quot;日本語imeibus mozc言語サポートのインストール permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;日本語IME（ibus-mozc）、言語サポートのインストール&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;#!bash
sudo apt install -y ibus-mozc

ibus restart
gsettings set org.gnome.desktop.input-sources sources &amp;quot;[(&amp;#x27;ibus&amp;#x27;, &amp;#x27;mozc-jp&amp;#x27;), (&amp;#x27;xkb&amp;#x27;, &amp;#x27;jp&amp;#x27;)]&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;#!bash
sudo apt install -y $(check-language-support)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;プロキシの設定-2-git&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7%E3%81%AE%E8%A8%AD%E5%AE%9A-2-git&quot; aria-label=&quot;プロキシの設定 2 git permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;プロキシの設定 (2) git&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;#!bash
git config --global http.proxy ${HTTP_PROXY}
git config --global https.proxy ${HTTPS_PROXY}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;pyenvpythonのインストール&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#pyenvpython%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&quot; aria-label=&quot;pyenvpythonのインストール permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pyenv、Pythonのインストール&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/pyenv/pyenv#basic-github-checkout&quot;&gt;pyenv/pyenv: Simple Python version management&lt;/a&gt;&lt;/p&gt;&lt;p&gt;新しいPythonを使うため、それからシステムと開発環境を分離してモジュール管理をaptとpipで分けて衝突事故を起こさないようにするため、pyenvを使うのが安定。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!bash
git clone https://github.com/pyenv/pyenv.git ~/.pyenv

echo &amp;#x27;export PYENV_ROOT=&amp;quot;$HOME/.pyenv&amp;quot;&amp;#x27; &amp;gt;&amp;gt; ~/.bashrc
echo &amp;#x27;export PATH=&amp;quot;$PYENV_ROOT/bin:$PATH&amp;quot;&amp;#x27; &amp;gt;&amp;gt; ~/.bashrc

echo -e &amp;#x27;if command -v pyenv 1&amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then\n  eval &amp;quot;$(pyenv init -)&amp;quot;\nfi&amp;#x27; &amp;gt;&amp;gt; ~/.bashrc

source ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/pyenv/pyenv/wiki/common-build-problems&quot; title=&quot;Common build problems · pyenv/pyenv Wiki&quot;&gt;Common build problems · pyenv/pyenv Wiki&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code&gt;#!bash
sudo apt install -y \
  libssl-dev \
  zlib1g-dev \
  libbz2-dev \
  libreadline-dev \
  libsqlite3-dev \
  wget \
  curl \
  llvm \
  libncurses5-dev \
  libncursesw5-dev \
  xz-utils \
  tk-dev \
  libffi-dev \
  liblzma-dev \
  python-openssl

pyenv install 3.8.5
pyenv global 3.8.5
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;docker--docker-composeのインストール&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker--docker-compose%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&quot; aria-label=&quot;docker  docker composeのインストール permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker &amp;amp; Docker Composeのインストール&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://docs.docker.com/engine/install/ubuntu/&quot; title=&quot;Install Docker Engine on Ubuntu | Docker Documentation&quot;&gt;Install Docker Engine on Ubuntu | Docker Documentation&lt;/a&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!bash
sudo apt remove docker docker-engine docker.io containerd runc
sudo apt update
sudo apt install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common

curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
  -x &amp;quot;${HTTP_PROXY}&amp;quot; \
  | sudo apt-key add -
sudo apt-key fingerprint 0EBFCD88

sudo add-apt-repository \
   &amp;quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable&amp;quot;
sudo apt update

sudo apt install -y docker-ce docker-ce-cli containerd.io
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;https://docs.docker.com/compose/install/&quot; title=&quot;Install Docker Compose | Docker Documentation&quot;&gt;Install Docker Compose | Docker Documentation&lt;/a&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!bash
sudo curl -L &amp;quot;https://github.com/docker/compose/releases/download/1.27.3/docker-compose-$(uname -s)-$(uname -m)&amp;quot; \
  -o /usr/local/bin/docker-compose \
  -x &amp;quot;${HTTP_PROXY}&amp;quot;
sudo chmod +x /usr/local/bin/docker-compose
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;一応、sudoせずにdockerを実行できるようにしておく。
注意として、共有サーバにおいては特権昇格できてしまうため、Docker 20.10以降のDocker rootlessを設定する。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/security/rootless/&quot;&gt;https://docs.docker.com/engine/security/rootless/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code&gt;#!bash
sudo groupadd docker
sudo adduser $USER docker
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;プロキシの設定-3-docker&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7%E3%81%AE%E8%A8%AD%E5%AE%9A-3-docker&quot; aria-label=&quot;プロキシの設定 3 docker permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;プロキシの設定 (3) Docker&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;#!bash
sudo systemctl edit docker
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;このコマンドで開いたファイルに以下を追記する。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!systemd
[Service]
Environment=&amp;quot;HTTP_PROXY=YOUR_HTTP_PROXY&amp;quot;
Environment=&amp;quot;HTTPS_PROXY=YOUR_HTTP_PROXY&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;#!bash
sudo systemctl restart docker

docker pull hello-world
docker run --rm hello-world
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;正常に実行されればOK。&lt;/p&gt;&lt;h2 id=&quot;cuda--nvidia-driverのインストール&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#cuda--nvidia-driver%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&quot; aria-label=&quot;cuda  nvidia driverのインストール permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CUDA &amp;amp; NVIDIA Driverのインストール&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://pytorch.org/get-started/locally/&quot; title=&quot;Start Locally | PyTorch&quot;&gt;Start Locally | PyTorch&lt;/a&gt;&lt;/p&gt;&lt;p&gt;PyTorchの対応バージョンを見ながらCUDA Toolkitをインストールする。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://developer.nvidia.com/cuda-10.2-download-archive&quot; title=&quot;CUDA Toolkit 10.2 Download | NVIDIA Developer&quot;&gt;CUDA Toolkit 10.2 Download | NVIDIA Developer&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;del&gt;CUDA Installerのrunfileを使って、runfileに同梱されているNVIDIA Driverを同時に入れるのが安定（2.5GBくらいで結構重いが）。&lt;/del&gt;&lt;/p&gt;&lt;p&gt;追記（2021/01/04）：カーネルアップデートのたびに再インストールする必要が出てくるので、ドライバについてはDKMSが使える通常のNVIDIA Driverインストールをした方がいい。
適切にPATH、LD_LIBRARY_PATHを設定すれば問題ない。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://developer.nvidia.com/cuda-10.2-download-archive?target_os=Linux&amp;amp;target_arch=x86_64&amp;amp;target_distro=Ubuntu&amp;amp;target_version=1804&amp;amp;target_type=runfilelocal&quot;&gt;Download runfile installer for Ubuntu 18.04&lt;/a&gt;&lt;/p&gt;&lt;p&gt;CUIモードでないとインストールに失敗するので、ダウンロードが終わったら一度デスクトップからログアウトし、Ctrl+Alt+F2などでCUIモードにする。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!bash
sudo systemctl stop gdm
# sudo systemctl stop lightdm # for Ubuntu 16.04
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これでデスクトップマネージャを止めてからインストールを始める（再起動してGUIモードでログインせずにCUIモードにして実行でもいけるかも）。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!bash
wget http://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda_10.2.89_440.33.01_linux.run
sudo sh cuda_10.2.89_440.33.01_linux.run
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;~/.bashrcに以下を追記する。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!bash
export PATH=/usr/local/cuda/bin:$PATH
export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;PyTorchが入ったあと（どちらを先にいれてもいい）、&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!python
import torch
torch.cuda.is_available()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;でTrueが返ってくればOK。&lt;/p&gt;&lt;h2 id=&quot;opencv-python-numpy-pytorchほかのインストール&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#opencv-python-numpy-pytorch%E3%81%BB%E3%81%8B%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&quot; aria-label=&quot;opencv python numpy pytorchほかのインストール permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenCV-Python, Numpy, PyTorchほかのインストール&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;#!bash
pip3 install -U pip
pip3 install -U \
  opencv-python \
  numpy \
  Pillow \
  --proxy &amp;quot;${HTTP_PROXY}&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;#!bash
pip3 install -U \
  torch \
  torchvision \
  torchtext \
  torchaudio \
  --proxy &amp;quot;${HTTP_PROXY}&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;#!bash
pip3 install -U \
  matplotlib \
  tqdm \
  jupyter \
  PyYAML \
  tensorboardX \
  --proxy &amp;quot;${HTTP_PROXY}&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;ssh-serverほかのインストール&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#ssh-server%E3%81%BB%E3%81%8B%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&quot; aria-label=&quot;ssh serverほかのインストール permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SSH Serverほかのインストール&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;#!bash
sudo apt install -y openssh-server net-tools
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;#!bash
ifconfig
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;#!bash
sudo vim /etc/ssh/sshd_config
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;必要に応じてパスワード認証を無効にする。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!sshd
PasswordAuthentication no
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;owncloudのインストール&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#owncloud%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&quot; aria-label=&quot;owncloudのインストール permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ownCloudのインストール&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://software.opensuse.org/download/package?project=isv:ownCloud:desktop&amp;amp;package=owncloud-client&quot; title=&quot;Install package isv:ownCloud:desktop / owncloud-client&quot;&gt;Install package isv:ownCloud:desktop / owncloud-client&lt;/a&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!bash
echo &amp;#x27;deb http://download.opensuse.org/repositories/isv:/ownCloud:/desktop/Ubuntu_18.04/ /&amp;#x27; | sudo tee /etc/apt/sources.list.d/isv:ownCloud:desktop.list
curl -fsSL https://download.opensuse.org/repositories/isv:ownCloud:desktop/Ubuntu_18.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/isv:ownCloud:desktop.gpg &amp;gt; /dev/null
sudo apt update
sudo apt install owncloud-client
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;その他のインストール&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%81%9D%E3%81%AE%E4%BB%96%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&quot; aria-label=&quot;その他のインストール permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;その他のインストール&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;#!bash
ssh-keygen -f KEYNAME
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;#!bash
sudo apt install tmux autossh
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;おまけ&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%81%8A%E3%81%BE%E3%81%91&quot; aria-label=&quot;おまけ permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;おまけ&lt;/h2&gt;&lt;h3 id=&quot;sshのプロキシ設定&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#ssh%E3%81%AE%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7%E8%A8%AD%E5%AE%9A&quot; aria-label=&quot;sshのプロキシ設定 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sshのプロキシ設定&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/yuyhiraka/items/30766c69fb605fc5f182&quot; title=&quot;Mac OSXでHTTP Proxy経由でSSH - Qiita&quot;&gt;Mac OSXでHTTP Proxy経由でSSH - Qiita&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/_N4H4/items/d48ba7c728f2e1ebd159&quot; title=&quot;【GitHub】Windows10+プロキシ環境でSSH接続を試みた話 - Qiita&quot;&gt;【GitHub】Windows10+プロキシ環境でSSH接続を試みた話 - Qiita&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://gist.github.com/rurban/360940&quot; title=&quot;connect.c&quot;&gt;gist:rurban/connect.c&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://gist.github.com/aoirint/ed94d828c4903d3fe410649fb41e2a4b&quot; title=&quot;connect.c&quot;&gt;ミラー: connect.c&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;~/.ssh/configの&lt;code&gt;Host&lt;/code&gt;の下に書く。Windowsの場合は&lt;code&gt;connect&lt;/code&gt;をビルドする必要がある。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!ssh
    # Linux
    ProxyCommand nc -X connect -x YOUR_HTTP_PROXY %h %p

    # Windows
    ProxyCommand MY_APP_DIRECTORY\connect\connect.exe -H YOUR_HTTP_PROXY %h %p

    # Mac
    ProxyCommand ncat --proxy-type http --proxy YOUR_HTTP_PROXY %h %p
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;#!cmd
# for build `connect.c` on Windows
gcc -o connect -lwsock32 connect.c -lws2_32
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[Atom + LaTeX in Docker]]></title><description><![CDATA[Atom + LaTeX in Docker 概要 LaTeXをホストにインストールせず、Docker内で動かしつつ、
Atomからこれを利用できるようにする。 Requirements Ubuntu 18.04 Docker Atom Atom Packages latex…]]></description><link>https://blog.aoirint.com2020/atom_latex_docker/</link><guid isPermaLink="false">https://blog.aoirint.com2020/atom_latex_docker/</guid><pubDate>Wed, 16 Sep 2020 23:35:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;atom--latex-in-docker&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#atom--latex-in-docker&quot; aria-label=&quot;atom  latex in docker permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Atom + LaTeX in Docker&lt;/h1&gt;&lt;h2 id=&quot;概要&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E6%A6%82%E8%A6%81&quot; aria-label=&quot;概要 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;概要&lt;/h2&gt;&lt;p&gt;LaTeXをホストにインストールせず、Docker内で動かしつつ、
Atomからこれを利用できるようにする。&lt;/p&gt;&lt;h2 id=&quot;requirements&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#requirements&quot; aria-label=&quot;requirements permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Ubuntu 18.04&lt;/li&gt;&lt;li&gt;Docker&lt;/li&gt;&lt;li&gt;Atom&lt;/li&gt;&lt;li&gt;Atom Packages&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/latex&quot;&gt;latex&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;atom-packages&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#atom-packages&quot; aria-label=&quot;atom packages permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Atom Packages&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://atom.io/packages/latex&quot;&gt;latex&lt;/a&gt;を入れれば最低限ビルドコマンドは叩けるようになる。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/latex&quot;&gt;latex&lt;/a&gt;&lt;/li&gt;&lt;li&gt;シンタックスハイライト&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/language-latex&quot;&gt;language-latex&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;アウトライン表示&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/document-outline&quot;&gt;document-outline&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;PDFプレビュー&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;&quot;&gt;pdf-view&lt;/a&gt;（メモリリーク? Atomを一度閉じれば解消する）&lt;/li&gt;&lt;li&gt;または &lt;a href=&quot;&quot;&gt;pdf-view-plus&lt;/a&gt;（メモリリーク対策版らしい。&lt;code&gt;latex&lt;/code&gt;との連携はないので注意）&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;dockerイメージ&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8&quot; aria-label=&quot;dockerイメージ permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dockerイメージ&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://hub.docker.com/r/paperist/alpine-texlive-ja/&quot;&gt;paperist/alpine-texlive-ja&lt;/a&gt;を使う。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!bash
sudo docker pull paperist/alpine-texlive-ja
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;docker&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#docker&quot; aria-label=&quot;docker permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h2&gt;&lt;p&gt;&lt;code&gt;sudo&lt;/code&gt;なしでDockerを実行できるようにする。AtomからDockerコンテナを作るのに必要。&lt;/p&gt;&lt;p&gt;注意として、この方法で一般ユーザがDockerを使えるようにすると特権昇格できてしまうため、
共有サーバにおいてはDocker 20.10以降のDocker rootlessを設定する。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/security/rootless/&quot;&gt;https://docs.docker.com/engine/security/rootless/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;ユーザをdockerグループに追加したあと再ログインする。新しくdockerグループが作られた直後は&lt;code&gt;newgrp docker&lt;/code&gt;しなければならないことがあり、シェルごとにこれを実行する必要があるようなのでAtomに反映されず、この場合OSの再起動が必要。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!bash
sudo groupadd docker
sudo adduser $USER docker
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;latexmkスクリプトを作る&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#latexmk%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%82%92%E4%BD%9C%E3%82%8B&quot; aria-label=&quot;latexmkスクリプトを作る permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;latexmkスクリプトを作る&lt;/h2&gt;&lt;p&gt;&lt;code&gt;/usr/texbin/latexmk&lt;/code&gt;（手動で&lt;code&gt;latex&lt;/code&gt;の&lt;code&gt;TeX Path&lt;/code&gt;を設定するか、デフォルトでPATHの通っている場所ならどこでもいい）に以下のシェルスクリプトを作成し、&lt;code&gt;chmod +x /usr/texbin/latexmk&lt;/code&gt;しておく。&lt;/p&gt;&lt;p&gt;&lt;code&gt;${HOME}/.atom/packages/latex/resources&lt;/code&gt;のマウントは&lt;code&gt;latex&lt;/code&gt;の&lt;code&gt;Extended Build Mode&lt;/code&gt;が有効のときに&lt;code&gt;${HOME}/.atom/packages/latex/resources/latexmkrc&lt;/code&gt;が読み出されるため設定している（このパスはホストのAtomから渡されるのでマウント先パスもホストと同じ）。この機能を無効にしていれば不要。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!/bin/sh
docker run --rm \
  -v &amp;quot;${PWD}:/workdir&amp;quot; \
  -v &amp;quot;${HOME}/.atom/packages/latex/resources:${HOME}/.atom/packages/latex/resources&amp;quot; \
  paperist/alpine-texlive-ja \
  latexmk &amp;quot;$@&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;サンプルtexファイル&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%ABtex%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB&quot; aria-label=&quot;サンプルtexファイル permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;サンプルTeXファイル&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;#!tex
\documentclass[10pt,a4paper]{jsarticle}

\title{My Title}
\author{Author}
\date{2020-09-17}

\begin{document}
\maketitle

\section{サンプル}

\end{document}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;注意点&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E6%B3%A8%E6%84%8F%E7%82%B9&quot; aria-label=&quot;注意点 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;注意点&lt;/h2&gt;&lt;p&gt;カレントディレクトリ以下をマウントするため、外部においた&lt;code&gt;.sty&lt;/code&gt;などは読み込めないので注意（デフォルトでロードされるディレクトリがあれば追加のマウントをすればOKと思われる）。&lt;/p&gt;&lt;h2 id=&quot;おまけ&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%81%8A%E3%81%BE%E3%81%91&quot; aria-label=&quot;おまけ permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;おまけ&lt;/h2&gt;&lt;h3 id=&quot;stderrにコマンドを吐き出してエラー終了するスクリプト&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#stderr%E3%81%AB%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E5%90%90%E3%81%8D%E5%87%BA%E3%81%97%E3%81%A6%E3%82%A8%E3%83%A9%E3%83%BC%E7%B5%82%E4%BA%86%E3%81%99%E3%82%8B%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88&quot; aria-label=&quot;stderrにコマンドを吐き出してエラー終了するスクリプト permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;stderrにコマンドを吐き出してエラー終了するスクリプト&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;#!/bin/sh
echo $0 $@ &amp;gt;&amp;amp;2
exit 1;
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[静的サイトジェネレータMiyadaiku + GitHub Actions + GitHub Pagesでブログを作る]]></title><description><![CDATA[静的サイトジェネレータMiyadaiku + GitHub Actions + GitHub Pagesでブログを作る 概要 新しく静的サイトジェネレータでブログ環境を整備した。
細かい使い方には触れないが、構成を書いておく。 静的サイトジェネレータとCI/CD…]]></description><link>https://blog.aoirint.com2020/miyadaiku_github_actions/</link><guid isPermaLink="false">https://blog.aoirint.com2020/miyadaiku_github_actions/</guid><pubDate>Wed, 09 Sep 2020 00:48:39 GMT</pubDate><content:encoded>&lt;h1 id=&quot;静的サイトジェネレータmiyadaiku--github-actions--github-pagesでブログを作る&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E9%9D%99%E7%9A%84%E3%82%B5%E3%82%A4%E3%83%88%E3%82%B8%E3%82%A7%E3%83%8D%E3%83%AC%E3%83%BC%E3%82%BFmiyadaiku--github-actions--github-pages%E3%81%A7%E3%83%96%E3%83%AD%E3%82%B0%E3%82%92%E4%BD%9C%E3%82%8B&quot; aria-label=&quot;静的サイトジェネレータmiyadaiku  github actions  github pagesでブログを作る permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;静的サイトジェネレータMiyadaiku + GitHub Actions + GitHub Pagesでブログを作る&lt;/h1&gt;&lt;h2 id=&quot;概要&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E6%A6%82%E8%A6%81&quot; aria-label=&quot;概要 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;概要&lt;/h2&gt;&lt;p&gt;新しく静的サイトジェネレータでブログ環境を整備した。
細かい使い方には触れないが、構成を書いておく。&lt;/p&gt;&lt;h2 id=&quot;静的サイトジェネレータとcicd&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E9%9D%99%E7%9A%84%E3%82%B5%E3%82%A4%E3%83%88%E3%82%B8%E3%82%A7%E3%83%8D%E3%83%AC%E3%83%BC%E3%82%BF%E3%81%A8cicd&quot; aria-label=&quot;静的サイトジェネレータとcicd permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;静的サイトジェネレータとCI/CD&lt;/h2&gt;&lt;h3 id=&quot;静的サイトジェネレータ&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E9%9D%99%E7%9A%84%E3%82%B5%E3%82%A4%E3%83%88%E3%82%B8%E3%82%A7%E3%83%8D%E3%83%AC%E3%83%BC%E3%82%BF&quot; aria-label=&quot;静的サイトジェネレータ permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;静的サイトジェネレータ&lt;/h3&gt;&lt;p&gt;静的サイトジェネレータというのはSphinx（Python製）とかJekyll（Ruby製、GitHub Pages標準らしい）とかHugo（Go製）みたいなやつで、
MarkdownだとかreStructuredTextだとかのファイル群からHTMLを生成するツール。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.sphinx-doc.org/&quot;&gt;Sphinx&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://gohugo.io/&quot;&gt;Hugo&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;miyadaiku&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#miyadaiku&quot; aria-label=&quot;miyadaiku permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Miyadaiku&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://miyadaiku.github.io/&quot;&gt;Miyadaiku&lt;/a&gt;はPython製の静的サイトジェネレータ。
Flaskで使うテンプレートエンジンのJinja2が使えることが特徴みたい。Jinja2はDjangoのテンプレートエンジンに似ている。
テンプレート上でどんな変数が使えるかはMiyadaikuの領域なので、ドキュメント（とサンプルテンプレート、ソースコード）を見ていくしかないかも。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/miyadaiku/miyadaiku&quot;&gt;github:miyadaiku/miyadaiku&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://pypi.org/project/miyadaiku/&quot;&gt;pypi:miyadaiku&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;github-actions&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#github-actions&quot; aria-label=&quot;github actions permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GitHub Actions&lt;/h3&gt;&lt;p&gt;GitHub上のリポジトリに対してpushやPull Requestがなされた時に事前に指定した処理を実行することのできるGitHubの機能。
Jenkinsなどに近そう。また、GitLabにも同様の機能があったはず。
GitHubのサーバで動く仮想環境上でDockerのような使い方でテストケースの実行やリリースファイルのビルド、サーバへのデプロイ、
つまりCI（Continuos Integration、テストやビルドの自動化）/CD（Continuous Delivery、デプロイの自動化）を設定できる。
Pull Requestなどへの自動ラベル付けやSlackへの通知なんかも設定することがあるのかな。
この設定はYAMLファイルとしてGitリポジトリ内に保存しますが、秘密鍵/トークンなどの情報を参照するための機能もあるみたい。
バージョン管理システム的な点ではGitは分散型なので文書自体の分散バージョン管理はできるが、
GitHubが落ちたら解消するまで（手元にリポジトリがあっても）GitHub ActionsによるCI/CDができないのが難点な気がする。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.githubstatus.com/&quot;&gt;GitHub Status&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;考えていること&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E8%80%83%E3%81%88%E3%81%A6%E3%81%84%E3%82%8B%E3%81%93%E3%81%A8&quot; aria-label=&quot;考えていること permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;考えていること&lt;/h2&gt;&lt;h3 id=&quot;レンダリング後のhtmlファイルの分離&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%AC%E3%83%B3%E3%83%80%E3%83%AA%E3%83%B3%E3%82%B0%E5%BE%8C%E3%81%AEhtml%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E5%88%86%E9%9B%A2&quot; aria-label=&quot;レンダリング後のhtmlファイルの分離 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;レンダリング後のHTMLファイルの分離&lt;/h3&gt;&lt;p&gt;Markdownを書いている時に見えるところに（レンダリング後の）HTMLファイルを置きたくない。
できれば何も考えずに（Markdownで書いた）メモファイルを置くのに使っていた適当なディレクトリの上でコマンドを実行したら
HTTPサーバを介して（オプションで指定したテーマなどで）いい感じにレンダリングしてくれるようなものがいい
（HTMLファイル自体にファイルシステムからアクセスできる必要はない）と思っていた。&lt;/p&gt;&lt;p&gt;このHTMLはMarkdownファイル群とレンダリングのオプションだけでいつでも生成可能なので、
レンダリング後のファイル自体が見えなければ、後からこのファイルを何かの間違いで編集してしまって正規性（再レンダリングしても差分がない状態）が崩れてしまうことがない。
それからMarkdownファイルをGitで管理する場合、レンダリング後のファイルの差分には実質的に意味がないので、（見える）commitに含めたくない気持ちがある。&lt;/p&gt;&lt;p&gt;この部分は適切に.gitignoreやCI/CDを設定すれば大抵の静的サイトジェネレータで実現可能だろうと思う。
今回はGitHub Actionsを使って、GitHub上の仮想環境にリポジトリから文書を読み込んでHTMLを自動生成し、文書と履歴を共有しない別ブランチ（gh-pages）に自動でcommitされるように設定する。&lt;/p&gt;&lt;p&gt;GitHub Actionsを動かすには&lt;code&gt;.github/workflows&lt;/code&gt;以下にYAMLファイルを配置する。例えばこのような感じ。GitHub Pagesへのデプロイ（gh-pagesブランチの更新）には&lt;a href=&quot;https://github.com/peaceiris/actions-gh-pages&quot;&gt;github:peaceiris/actions-gh-pages&lt;/a&gt;を使っている。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!yaml
# deploy.yml
name: Deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called &amp;quot;build&amp;quot;
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          # Version range or exact version of a Python version to use, using SemVer&amp;#x27;s version range syntax.
          python-version: 3.x

      - name: Install dependencies
        run: pip3 install -r requirements.txt

      - name: Run miyadaiku-build
        run: miyadaiku-build --output public .

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;name&lt;/code&gt;、&lt;code&gt;run&lt;/code&gt;のところをコピーして増やせばコマンドを増やすことができる。&lt;/p&gt;&lt;h3 id=&quot;テーマと文書の分離&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%83%86%E3%83%BC%E3%83%9E%E3%81%A8%E6%96%87%E6%9B%B8%E3%81%AE%E5%88%86%E9%9B%A2&quot; aria-label=&quot;テーマと文書の分離 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;テーマと文書の分離&lt;/h3&gt;&lt;p&gt;テーマのリポジトリと文書のリポジトリを分離したい。
これをすることで、
文書のリポジトリでは本来の目的であるメモやブログの文章に関するcommitだけ（レンダリングの設定ファイルは残ってしまうかもだが）、
テーマのリポジトリでは本来の目的であるHTMLテンプレートに関するcommitだけが
履歴として見えるようになる。
また、テーマのリポジトリだけを公開する、というようなことができるようになる（公開しなくてもgit経由でpip installしたりすればいい）。&lt;/p&gt;&lt;p&gt;今回はテーマとして&lt;a href=&quot;https://github.com/aoirint/aoirint-miyadaiku-theme-blog&quot;&gt;aoirint-miyadaiku-theme-blog&lt;/a&gt;を作成した。ついでにPyPIにも登録した。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://pypi.org/project/aoirint-miyadaiku-theme-blog/&quot;&gt;pypi:aoirint-miyadaiku-theme-blog&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;文書の書きやすさ&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E6%96%87%E6%9B%B8%E3%81%AE%E6%9B%B8%E3%81%8D%E3%82%84%E3%81%99%E3%81%95&quot; aria-label=&quot;文書の書きやすさ permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;文書の書きやすさ&lt;/h3&gt;&lt;p&gt;日付の表示やタグ検索などレンダリング時の質を上げたければ、どうしても文書側にメタデータを付加しなければならないところがネックではある気はするが、
GitHub上でJekyll的なYAMLヘッダ（Miyadaikuも同様）のついたMarkdownを表示してみたところ、メタデータを整形表示してくれた。
この様子ならある程度互換性が期待できるし、そういう習慣をつけるのもいいのではないかなと思う。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.blog/2013-09-27-viewing-yaml-metadata-in-your-documents/&quot;&gt;Viewing YAML Metadata in your Documents - The GitHub Blog&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;PC上で文書を書いているときには、ブラウザの更新がかかったり、ネットワークが不安定で再起動が必要になったり、OSの更新で勝手に再起動したり、寝落ちしてバッテリが切れたりなど、Webページが強制リロードしたり、エディタが強制終了したりすることがよくある。こういうときに書きかけの文書をできる限り保全してくれる仕組みがほしいところ。GitHub上で書いているとそこが若干不安。この点ではHackMDを使うのがよさそうに思う（コピーしたファイルを編集する形で、書きかけでもサービス上に自動保存してくれるみたい）が、CommitterがHackMDになってしまうのが気になるところ（同時編集するときはこれでよさそうだが）。それから、画像を外に置かないと扱いにくそう..。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/github/using-git/changing-author-info&quot;&gt;Changing author info - GitHub Docs&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;またUbuntu、Mac、WindowsのPCを時と場所と気分と目的によって切り替えて使っていて、タイミングによっては特定のPCにアクセスできないようなこともあるので、基本的に文書がリモートにないと面倒なのだが、（あんまり分散管理という感じがしないが）GitHubを経由して同期すればいいというのがGitを使う利点の一つであるように思う。&lt;/p&gt;&lt;p&gt;それから、複数の書きかけの文書/記事があるとき、何度も変更して大量に履歴ができたり、複数の記事の履歴が入り乱れるとつらそう。これは記事ごとにブランチを切る（あとでmergeする）とか、squash/rebaseを使うとか、Pull Requestを使うとかしてうまく対処できないか考えている。&lt;/p&gt;&lt;h4 id=&quot;複数のコミットを1つにまとめる例&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E8%A4%87%E6%95%B0%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%82%921%E3%81%A4%E3%81%AB%E3%81%BE%E3%81%A8%E3%82%81%E3%82%8B%E4%BE%8B&quot; aria-label=&quot;複数のコミットを1つにまとめる例 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;複数のコミットを1つにまとめる例&lt;/h4&gt;&lt;p&gt;このような4つのコミット履歴のあるブランチがあるとする。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;branch A: W--X--Y--Z
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;まず&lt;code&gt;git log --oneline&lt;/code&gt;で対象のcommit IDを調べる。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ZZZZZZ COMMIT Z
YYYYYY COMMIT Y
XXXXXX COMMIT X
WWWWWW COMMIT W
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;git rebase -i COMMIT_ID&lt;/code&gt;は指定したIDのcommitの次のcommitから最新のcommitまでの履歴を操作するコマンド。エディタが開き、上から古い順にコミットが表示される。&lt;code&gt;git rebase -i WWWWWW&lt;/code&gt;を実行すると、このようになる。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;pick XXXXXX COMMIT X
pick YYYYYY COMMIT Y
pick ZZZZZZ COMMIT Z
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;頭の&lt;code&gt;pick&lt;/code&gt;を&lt;code&gt;squash&lt;/code&gt;か&lt;code&gt;s&lt;/code&gt;に変えることで1つ上（前）のcommitに差分が統合される。保存してエディタを閉じるとコミットメッセージの編集が始まる。なお、失敗してエラーが出たときは&lt;code&gt;git rebase --abort&lt;/code&gt;でrebaseを中断できる。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;pick XXXXXX COMMIT X
pick YYYYYY COMMIT Y
s    ZZZZZZ COMMIT Z
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;branch A: W--X--Y&amp;#x27;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;すでにCOMMIT Y、COMMIT Zがリモートの同ブランチにpushされているときは&lt;code&gt;git push -f&lt;/code&gt;する必要がある。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/tsuuuuu_san/items/f708a9f7ea8ab8eb6945&quot;&gt;【git rebase -i】gitのcommitをまとめる - Qiita&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;複数の記事を同時に書く際の例&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E8%A4%87%E6%95%B0%E3%81%AE%E8%A8%98%E4%BA%8B%E3%82%92%E5%90%8C%E6%99%82%E3%81%AB%E6%9B%B8%E3%81%8F%E9%9A%9B%E3%81%AE%E4%BE%8B&quot; aria-label=&quot;複数の記事を同時に書く際の例 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;複数の記事を同時に書く際の例&lt;/h4&gt;&lt;p&gt;まず、masterブランチ、記事Aを書いているブランチA、記事Bを書いているブランチBがあるとする。ブランチAとブランチBはmasterブランチの最終commit Xから分岐している。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;master  : X
           \
branch A:   |--Y
branch B:   |--Z
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ここで記事Aを書き終わったので、GitHub上でPull Requestを作成し、masterブランチにmergeした。ここでmasterブランチの最終commitはcommit Yになる。ブランチBは記事Bのcommit Zをすでに作成していて、masterブランチに対し、1 commit behind、1 commit aheadの状態になった。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;master  : X--------Y
           \
branch B:   |--Z
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ここでローカルでの作業に移りる。まずmasterブランチをcheckoutし、&lt;code&gt;git pull&lt;/code&gt;してcommit履歴を最新にする。次にブランチBをcheckoutし、&lt;code&gt;git pull&lt;/code&gt;してcommit履歴を最新にしたあと、&lt;code&gt;git rebase master&lt;/code&gt;を実行することでcommit Yの次にcommit Zがくる1 commit aheadの状態にすることができる。ローカルでブランチBをいじっていた場合は、一度commitしてから同様にrebaseすれば同じことができる（&lt;code&gt;git rebase origin/master&lt;/code&gt;というのもできる）。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;master  : X--------Y
                    \
branch B:            |--Z
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;すでに古いcommit履歴のbranch Bがリモートにpushされているときは&lt;code&gt;git push -f&lt;/code&gt;する必要がある。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://qiita.com/vsanna/items/451b42f886c599a16a55&quot;&gt;fast-forwardマージから理解するgit rebase - Qiita&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;miyadaikuを使う&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#miyadaiku%E3%82%92%E4%BD%BF%E3%81%86&quot; aria-label=&quot;miyadaikuを使う permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Miyadaikuを使う&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;#!bash
pip3 install miyadaiku
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;miyadaiku==1.17.0&lt;/code&gt;とする。
Miyadaikuをpipで入れると&lt;code&gt;miyadaiku-start&lt;/code&gt;、&lt;code&gt;miyadaiku-build&lt;/code&gt;コマンドが使えるようになる。&lt;/p&gt;&lt;p&gt;&lt;code&gt;miyadaiku-start&lt;/code&gt;は空のMiyadaikuプロジェクトを作成するコマンド。といっても空の&lt;code&gt;files&lt;/code&gt;、&lt;code&gt;templates&lt;/code&gt;ディレクトリ、サンプルのMarkdownファイル&lt;code&gt;index.md&lt;/code&gt;の入った&lt;code&gt;contents&lt;/code&gt;ディレクトリ、デフォルトのシンプルなコンフィグファイル&lt;code&gt;config.yml&lt;/code&gt;が生成されるだけ。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!yaml
# Miyadaiku config file

# Base URL of the site
site_url: http://localhost:8888/

# Title of the site
site_title: FIXME - site title

# Default language code
lang: en-US

# Default charset
charset: utf-8

# Default timezone
timezone: Asia/Tokyo

# List of site theme
# themes:
#   - miyadaiku.themes.sample.blog
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;files&lt;/code&gt;ディレクトリは、汎用的な画像やCSS、JSを置くのに使う。このディレクトリの内容はそのまま出力ディレクトリにコピーされる。
&lt;code&gt;templates&lt;/code&gt;ディレクトリには、Jinja2テンプレートを配置する。&lt;code&gt;contents&lt;/code&gt;ディレクトリは、中に置いたMarkdownファイルなどがHTMLに変換されたものが出力ディレクトリに吐き出される。&lt;/p&gt;&lt;p&gt;&lt;code&gt;config.yml&lt;/code&gt;の&lt;code&gt;themes&lt;/code&gt;にpipで入れたテーマのモジュール名を書くことで、そのモジュール内の&lt;code&gt;contents&lt;/code&gt;、&lt;code&gt;files&lt;/code&gt;、&lt;code&gt;templates&lt;/code&gt;が使えるようになる。&lt;code&gt;templates&lt;/code&gt;内のHTMLテンプレート（&lt;code&gt;page_index.html&lt;/code&gt;など）だけでなく、&lt;code&gt;contents&lt;/code&gt;内の記事一覧を表示する&lt;code&gt;index.yml&lt;/code&gt;などがテーマで用意されていれば、自分で作る必要はないみたい。&lt;/p&gt;&lt;p&gt;&lt;code&gt;miyadaiku-build&lt;/code&gt;はHTMLファイルを生成するコマンド。デフォルトで&lt;code&gt;outputs&lt;/code&gt;ディレクトリに吐き出される。
&lt;code&gt;--server&lt;/code&gt;オプションで簡易サーバが立ち、&lt;code&gt;--watch&lt;/code&gt;オプションで更新を自動検出する。&lt;code&gt;miyadaiku-build -sw .&lt;/code&gt;で現在のディレクトリにある&lt;code&gt;config.yml&lt;/code&gt;をもとに自動更新＆簡易サーバが立ち上がる。&lt;/p&gt;&lt;p&gt;&lt;code&gt;.gitignore&lt;/code&gt;を次のようにして、記事用のリポジトリを作った。&lt;code&gt;_depends.pickle&lt;/code&gt;というファイルはビルド時に生成されるが、バイナリなのでとりあえず載せないようにしている。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;/_depends.pickle
/outputs
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;config.yml&lt;/code&gt;は&lt;code&gt;pip3 install aoirint_miyadaiku_theme_blog&lt;/code&gt;したうえで、次のようにしている。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!yaml
# Miyadaiku config file

# Base URL of the site
site_url: https://www.example.com

# Title of the site
site_title: SITE TITLE

# Default language code
lang: ja

# Default charset
charset: utf-8

# Default timezone
timezone: Asia/Tokyo

copyright: Copyright © 20xx HOLDER.

favicon: /favicon.ico

# ga_tracking_id: UA-*

twitter_name: example
github_name: github


# List of site theme
themes:
  - aoirint_miyadaiku_theme_blog

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ディレクトリ構成はこのような感じ。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;blog-repository/
|- .git/            # git管理
|- .github/         # GitHub Action用
|- contents/        # 記事を書くディレクトリ
   |- post1.md
|- files/           # 共通ファイルを置くディレクトリ
   |- favicon.ico
|- .gitignore
|- config.yml
|- requirements.txt # miyadaiku、テーマのインストール用
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これで&lt;code&gt;miyadaiku-build -sw .&lt;/code&gt;を実行すればデフォルトのポートに簡易サーバが立ち、実際のレンダリングをみることができる。&lt;/p&gt;</content:encoded></item></channel></rss>