<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[えやみぐさ レポート RSS Feed]]></title><description><![CDATA[報告、アナウンス、近況、管理情報、リリース]]></description><link>https://blog.aoirint.com</link><generator>GatsbyJS</generator><lastBuildDate>Sat, 26 Feb 2022 09:45:31 GMT</lastBuildDate><item><title><![CDATA[はてなブログから古い記事を移しました]]></title><description><![CDATA[はてなブログから古い記事を移しました 新しい記事 blog.aoirint.com へ投稿しつつ、
古い記事は aoirint.hatenablog.com に残っていましたが、
古い記事を blog.aoirint.com…]]></description><link>https://blog.aoirint.com/entry/2022/moved_from_hatenablog/</link><guid isPermaLink="false">https://blog.aoirint.com/entry/2022/moved_from_hatenablog/</guid><pubDate>Tue, 22 Feb 2022 20:40:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;はてなブログから古い記事を移しました&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#%E3%81%AF%E3%81%A6%E3%81%AA%E3%83%96%E3%83%AD%E3%82%B0%E3%81%8B%E3%82%89%E5%8F%A4%E3%81%84%E8%A8%98%E4%BA%8B%E3%82%92%E7%A7%BB%E3%81%97%E3%81%BE%E3%81%97%E3%81%9F&quot; aria-label=&quot;はてなブログから古い記事を移しました permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;はてなブログから古い記事を移しました&lt;/h1&gt;&lt;p&gt;新しい記事 blog.aoirint.com へ投稿しつつ、
古い記事は aoirint.hatenablog.com に残っていましたが、
古い記事を blog.aoirint.com に移しました。&lt;/p&gt;&lt;p&gt;古い記事にはリダイレクトと移動先へのリンクを設置しています。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/x-motemen/blogsync&quot;&gt;https://github.com/x-motemen/blogsync&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;blogsyncで記事を取得したあと、以下のようなスクリプトでfrontmatterを変換しました。&lt;/p&gt;&lt;p&gt;以前の移行時の作業ミスでMarkdown記事がHTMLになってしまっていたので、
手動でMarkdownに書き戻しました。&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import glob
import yaml
from datetime import datetime
from pathlib import Path
import frontmatter as FM

for path in glob.glob(&amp;#x27;**/*.md&amp;#x27;, recursive=True):
  if path.startswith(&amp;#x27;output&amp;#x27;):
    continue

  print(path)
  with open(path, &amp;#x27;r&amp;#x27;) as fp:
    frontmatter = FM.load(fp)
    # docs = yaml.safe_load_all(fp)
    # frontmatter = next(docs)
    # body = next(docs)

  body = frontmatter.content
  print(frontmatter)
  print(body)

  title = frontmatter[&amp;#x27;Title&amp;#x27;]
  if title.startswith(&amp;#x27;（移動済）&amp;#x27;):
    print(f&amp;#x27;Skipped: {title}&amp;#x27;)
    continue

  print(f&amp;#x27;Processing: {title}&amp;#x27;)

  original_url = frontmatter[&amp;#x27;URL&amp;#x27;]
  date: datetime = frontmatter[&amp;#x27;Date&amp;#x27;]
  draft = frontmatter.get(&amp;#x27;Draft&amp;#x27;, False)

  tags = frontmatter.get(&amp;#x27;Category&amp;#x27;)
  category = tags[0] if tags else None

  new_frontmatter = {
    &amp;#x27;title&amp;#x27;: title,
    &amp;#x27;date&amp;#x27;: date.strftime(&amp;#x27;%Y-%m-%d %H:%M:%S&amp;#x27;),
    &amp;#x27;draft&amp;#x27;: draft,
    &amp;#x27;channel&amp;#x27;: &amp;#x27;技術ノート&amp;#x27;,
  }
  if category:
    new_frontmatter[&amp;#x27;category&amp;#x27;] = category
  if tags:
    new_frontmatter[&amp;#x27;tags&amp;#x27;] = tags

  output = yaml.dump(new_frontmatter, default_flow_style=False, sort_keys=False, allow_unicode=True)
  output_lines = output.split(&amp;#x27;\n&amp;#x27;)
  output_lines.insert(0, f&amp;#x27;---&amp;#x27;)
  output_lines.insert(1, f&amp;#x27;# moved from {original_url}&amp;#x27;)
  output_lines.insert(-1, f&amp;#x27;---&amp;#x27;)
  output = &amp;#x27;\n&amp;#x27;.join(output_lines)
  output += f&amp;#x27;# {title}\n\n&amp;#x27; + body + &amp;#x27;\n&amp;#x27;

  dest = Path(&amp;#x27;output&amp;#x27;, path)
  dest.parent.mkdir(parents=True, exist_ok=True)

  with open(dest, &amp;#x27;w&amp;#x27;) as fp:
    fp.write(output)
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item></channel></rss>