{"version":3,"file":"component---src-pages-index-tsx-54d747c4af92db378a37.js","mappings":"oKA6EA,IAlDkD,SAAC,GAM5C,IAAD,MALFA,KACEC,EAIA,EAJAA,KACAC,EAGA,EAHAA,OACAC,EAEA,EAFAA,YAGIC,EAAqB,uBAAwBF,EAASA,EAAOE,mBAAqB,QAClFC,EAAoC,UAAvBD,EAAA,IAAqCA,EAArC,IAA6D,IAE1EE,EAA4B,OAArBH,MAAAA,OAAA,EAAAA,EAAaG,MAAeC,GAAAA,CAAMJ,MAAAA,OAAD,EAACA,EAAaG,MAAME,OAAO,cAAgB,GACnFC,EAAkC,OAAxBN,MAAAA,OAAA,EAAAA,EAAaM,SAAkBF,GAAAA,CAAMJ,MAAAA,OAAD,EAACA,EAAaM,SAASD,OAAO,cAAgB,GAElG,OACI,uBAAKE,UAAU,QACb,uBAAKA,UAAU,IACb,gBAAC,EAAAC,KAAD,CAAMC,GAAE,GAAKP,EAAaJ,EAAQ,aAAW,SAC1CE,MAAAA,OADH,EACGA,EAAaU,OAEfP,GAAQG,EACP,uBAAKC,UAAU,YAAY,aAAW,cAAtC,IAEE,wBAAM,aAAW,eAAeJ,GAC/BA,GAAQG,EAAU,MAAQ,GAC3B,wBAAM,aAAW,eAAeA,GAJlC,KAOE,GACJ,uBAAKC,UAAU,YAAY,aAAW,QACV,OAAzBP,MAAAA,OAAA,EAAAA,EAAaW,UACZ,gCACE,gBAAC,EAAAH,KAAD,CAAMC,GAAE,cAAeT,MAAAA,OAAf,EAAeA,EAAaW,UAA5B,IAAyCJ,UAAU,OAAO,aAAW,YAC1EP,MAAAA,OADH,EACGA,EAAaW,UAEhB,wBAAMJ,UAAU,QAAhB,MAIA,GACHP,MAAAA,GAXH,UAWGA,EAAaY,YAXhB,aAWG,EAAmBC,KAAI,SAACC,GAAD,OACtB,gBAAC,EAAAN,KAAD,CAAMO,IAAKD,EAAKL,GAAE,SAAWK,EAAX,IAAmBP,UAAU,OAAO,aAAW,OAC9DO,W,iFC8FnB,UA5IsD,SAACE,GACrD,IAAMC,EAAOD,EAAMC,KACnB,OACE,gCACE,gBAAC,IAAD,KACE,sCACA,0BAAQC,OAAK,EAACC,IAAI,wDAEpB,gBAAC,IAAD,MACA,2BAASZ,UAAU,WACjB,uBAAKA,UAAU,aACb,uBAAKA,UAAU,wBACb,uBAAKA,UAAU,oBACb,uBAAKY,IAAKC,EAAAA,EAAMC,IAAI,aAAad,UAAU,yBAE7C,uBAAKA,UAAU,UACb,sBAAIA,UAAU,cAAd,SAGA,qBAAGA,UAAU,iBAAb,aAKJ,sBAAIA,UAAU,mBAAd,UAGA,uBAAKA,UAAU,gBACf,sBAAIA,UAAU,mBAAd,gBAGA,uBAAKA,UAAU,aACZU,EAAKK,MAAMC,MAAMC,MAAM,EAAG,IAAIX,KAAI,gBAAGY,EAAH,EAAGA,KAAH,OACjC,uBAAKV,IAAKU,EAAKC,IACb,gBAAC,IAAD,CAAc7B,KAAM4B,IACpB,sBAAIlB,UAAU,cAIpB,sBAAIA,UAAU,mBAAd,kBAGA,uBAAKA,UAAU,wBACZU,EAAKK,MAAMK,WAAWd,KAAI,SAACF,GAAD,OACzB,uBAAKI,IAAKJ,EAASiB,WAAYrB,UAAU,yBACvC,uBAAKA,UAAU,OACb,sBAAIA,UAAU,mBAAmBI,EAASiB,YAC1C,2BACGjB,EAASY,MAAMV,KAAI,gBAAGY,EAAH,EAAGA,KAAH,OAClB,uBAAKV,IAAKU,EAAKC,IACb,gBAAC,IAAD,CAAc7B,KAAM4B,IACpB,sBAAIlB,UAAU","sources":["webpack://blog-aoirint-com/./src/components/PostListItem.tsx","webpack://blog-aoirint-com/./src/pages/index.tsx"],"sourcesContent":["import React from 'react'\nimport dayjs from 'dayjs'\nimport { Link } from 'gatsby'\n\nexport interface Parent {\n    sourceInstanceName: string\n}\n\nexport interface Frontmatter {\n    title: string\n    date?: string\n    updated?: string\n    category?: string\n    tags?: string[]\n}\n\nexport interface Post {\n  id: string\n  slug?: string\n  parent?: {} | Parent\n  frontmatter?: Frontmatter\n}\n\nexport interface PostListItemProps {\n  post: Post\n}\n\nconst PostListItem: React.FC<PostListItemProps> = ({\n    post: {\n      slug,\n      parent,\n      frontmatter,\n    },\n}) => {\n    const sourceInstanceName = 'sourceInstanceName' in parent ? parent.sourceInstanceName : 'pages'\n    const pathPrefix = sourceInstanceName !== 'pages' ? `/${sourceInstanceName}/` : '/'\n\n    const date = frontmatter?.date != null ? dayjs(frontmatter?.date).format('YYYY-MM-DD') : ''\n    const updated = frontmatter?.updated != null ? dayjs(frontmatter?.updated).format('YYYY-MM-DD') : ''\n\n    return (\n        <div className='mb-2'>\n          <div className=''>\n            <Link to={`${pathPrefix}${slug}`} data-label='title'>\n              {frontmatter?.title}\n            </Link>\n            {date || updated ? (\n              <div className='is-size-7' data-label='dateString'>\n                [\n                <span data-label='dateCreated'>{date}</span>\n                {date && updated ? ' / ' : ''}\n                <span data-label='dateUpdated'>{updated}</span>\n                ]\n              </div>\n            ) : ''}\n            <div className='is-size-7' data-label='tags'>\n              {frontmatter?.category != null ? (\n                <>\n                  <Link to={`/category/${frontmatter?.category}/`} className='mr-2' data-label='category'>\n                    {frontmatter?.category}\n                  </Link>\n                  <span className='mr-2'>\n                    |\n                  </span>\n                </>\n              ) : ''}\n              {frontmatter?.tags?.map((tag) => (\n                <Link key={tag} to={`/tags/${tag}/`} className='mr-2' data-label='tag'>\n                  {tag}\n                </Link>\n              ))}\n            </div>\n          </div>\n        </div>\n    )\n}\n\nexport default PostListItem\n","import * as React from \"react\"\nimport Helmet from 'react-helmet'\nimport '../styles/main.scss'\n\nimport dayjs from 'dayjs'\n\nimport {\n  graphql,\n  PageProps,\n} from 'gatsby'\n\nimport icon from '../images/icon.png'\nimport {\n  Navbar,\n} from '../components'\n\nimport {\n  GetPostsQuery\n} from '../../generated/graphql-types'\nimport PostListItem from \"../components/PostListItem\"\n\n// markup\nconst IndexPage: React.FC<PageProps<GetPostsQuery>> = (props) => {\n  const data = props.data\n  return (\n    <>\n      <Helmet>\n        <title>えやみぐさ</title>\n        <script async src=\"https://cse.google.com/cse.js?cx=4b57e8a4ef2a8c489\"></script>\n      </Helmet>\n      <Navbar />\n      <section className='section'>\n        <div className='container'>\n          <div className='columns is-vcentered'>\n            <div className='column is-narrow'>\n              <img src={icon} alt=\"Logo image\" className='image is-64x64 mr-4' />\n            </div>\n            <div className='column'>\n              <h1 className='title is-2'>\n                えやみぐさ\n              </h1>\n              <p className='subtitle is-5'>\n                技術ノートとか\n              </p>\n            </div>\n          </div>\n          <h2 className='title is-5 mb-3'>\n            Search\n          </h2>\n          <div className=\"gcse-search\"></div>\n          <h2 className='title is-5 mb-3'>\n            Recent Notes\n          </h2>\n          <div className='mt-4 mb-5'>\n            {data.posts.edges.slice(0, 10).map(({ node }) => (\n              <div key={node.id}>\n                <PostListItem post={node} />\n                <hr className='my-1' />\n              </div>\n            ))}\n          </div>\n          <h2 className='title is-5 mb-3'>\n            Category Index\n          </h2>\n          <div className='columns is-multiline'>\n            {data.posts.categories.map((category) => (\n              <div key={category.fieldValue} className='column is-one-quarter'>\n                <div className='m-1'>\n                  <h2 className='title is-5 my-2'>{category.fieldValue}</h2>\n                  <div>\n                    {category.edges.map(({ node }) => (\n                      <div key={node.id}>\n                        <PostListItem post={node} />\n                        <hr className='my-1' />\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport const pageQuery = graphql`\n  query GetPosts {\n    posts: allMdx(\n      filter: {fields: {draft: {eq: false}}}\n      sort: {\n        fields: [frontmatter___lastModified]\n        order: DESC\n      }\n    ) {\n      edges {\n        node {\n          id\n          slug\n          parent {\n            ... on File {\n              sourceInstanceName\n            }\n          }\n          frontmatter {\n            title\n            date\n            updated\n            category\n            tags\n          }\n        }\n      }\n\n      categories: group(field: frontmatter___category) {\n        fieldValue\n        edges {\n          node {\n            id\n            slug\n            parent {\n              ... on File {\n                sourceInstanceName\n              }\n            }\n            frontmatter {\n              title\n              date\n              updated\n              category\n              tags\n            }\n          }\n        }\n      }\n\n      tags: group(field: frontmatter___tags) {\n        fieldValue\n        edges {\n          node {\n            id\n            slug\n            parent {\n              ... on File {\n                sourceInstanceName\n              }\n            }\n            frontmatter {\n              title\n              date\n              updated\n              category\n              tags\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n"],"names":["post","slug","parent","frontmatter","sourceInstanceName","pathPrefix","date","dayjs","format","updated","className","Link","to","title","category","tags","map","tag","key","props","data","async","src","icon","alt","posts","edges","slice","node","id","categories","fieldValue"],"sourceRoot":""}