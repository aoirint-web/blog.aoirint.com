{"version":3,"file":"component---src-components-tag-search-tsx-3200e4de62bba60a858b.js","mappings":"oKAwEA,IA7CkD,SAAC,GAM5C,IAAD,MALFA,KACEC,EAIA,EAJAA,KACAC,EAGA,EAHAA,OACAC,EAEA,EAFAA,YAGIC,EAAqB,uBAAwBF,EAASA,EAAOE,mBAAqB,QAClFC,EAAoC,UAAvBD,EAAA,IAAqCA,EAArC,IAA6D,IAE1EE,EAA4B,OAArBH,MAAAA,OAAA,EAAAA,EAAaG,MAAeC,GAAAA,CAAMJ,MAAAA,OAAD,EAACA,EAAaG,MAAME,OAAO,cAAgB,GACnFC,EAAkC,OAAxBN,MAAAA,OAAA,EAAAA,EAAaM,SAAkBF,GAAAA,CAAMJ,MAAAA,OAAD,EAACA,EAAaM,SAASD,OAAO,cAAgB,GAC5FE,GAAuB,KAATJ,GAA2B,KAAZG,EAAiB,IAAM,IAAMH,GAAiB,KAATA,GAA2B,KAAZG,EAAiB,MAAQ,IAAMA,GAAoB,KAATH,GAA2B,KAAZG,EAAiB,IAAM,IAEvK,OACI,uBAAKE,UAAU,QACb,uBAAKA,UAAU,IACb,gBAAC,EAAAC,KAAD,CAAMC,GAAE,GAAKR,EAAaJ,GACvBE,MAAAA,OADH,EACGA,EAAaW,OAEhB,uBAAKH,UAAU,aACZD,GAEH,uBAAKC,UAAU,aACa,OAAzBR,MAAAA,OAAA,EAAAA,EAAaY,UACZ,gCACE,gBAAC,EAAAH,KAAD,CAAMC,GAAE,cAAeV,MAAAA,OAAf,EAAeA,EAAaY,UAA5B,IAAyCJ,UAAU,QACxDR,MAAAA,OADH,EACGA,EAAaY,UAEhB,wBAAMJ,UAAU,QAAhB,MAIA,GACHR,MAAAA,GAXH,UAWGA,EAAaa,YAXhB,aAWG,EAAmBC,KAAI,SAACC,GAAD,OACtB,gBAAC,EAAAN,KAAD,CAAMO,IAAKD,EAAKL,GAAE,SAAWK,EAAX,IAAmBP,UAAU,QAC5CO,W,wECWnB,UAhE0D,SAAC,GAGpD,IAFHE,EAEE,EAFFA,YACAC,EACE,EADFA,KAEMH,EAAM,QAASE,EAAcE,OAAOF,EAAW,KAAW,GAEhE,OACI,gCACI,gBAAC,IAAD,KACI,qCAAaF,EAAb,YACA,wBAAMK,KAAK,SAASC,QAAQ,aAEhC,gBAAC,IAAD,MACA,2BAASb,UAAU,WACf,uBAAKA,UAAU,aACX,sBAAIA,UAAU,mBAAd,QACUO,GAEV,0BACKG,EAAKI,MAAMC,MAAMT,KAAI,gBAAGU,EAAH,EAAGA,KAAH,OAClB,gBAAC,IAAD,CAAc3B,KAAM2B","sources":["webpack://blog-aoirint-com/./src/components/PostListItem.tsx","webpack://blog-aoirint-com/./src/components/TagSearch.tsx"],"sourcesContent":["import React from 'react'\nimport dayjs from 'dayjs'\nimport { Link } from 'gatsby'\n\nexport interface Parent {\n    sourceInstanceName: string\n}\n\nexport interface Frontmatter {\n    title: string\n    date?: string\n    updated?: string\n    category?: string\n    tags?: string[]\n}\n\nexport interface Post {\n  id: string\n  slug?: string\n  parent?: {} | Parent\n  frontmatter?: Frontmatter\n}\n\nexport interface PostListItemProps {\n  post: Post\n}\n\nconst PostListItem: React.FC<PostListItemProps> = ({\n    post: {\n      slug,\n      parent,\n      frontmatter,\n    },\n}) => {\n    const sourceInstanceName = 'sourceInstanceName' in parent ? parent.sourceInstanceName : 'pages'\n    const pathPrefix = sourceInstanceName !== 'pages' ? `/${sourceInstanceName}/` : '/'\n\n    const date = frontmatter?.date != null ? dayjs(frontmatter?.date).format('YYYY-MM-DD') : ''\n    const updated = frontmatter?.updated != null ? dayjs(frontmatter?.updated).format('YYYY-MM-DD') : ''\n    const dateString = (date !== '' || updated !== '' ? '[' : '') + date + (date !== '' && updated !== '' ? ' / ' : '') + updated + (date !== '' || updated !== '' ? ']' : '')\n\n    return (\n        <div className='mb-2'>\n          <div className=''>\n            <Link to={`${pathPrefix}${slug}`}>\n              {frontmatter?.title}\n            </Link>\n            <div className='is-size-7'>\n              {dateString}\n            </div>\n            <div className='is-size-7'>\n              {frontmatter?.category != null ? (\n                <>\n                  <Link to={`/category/${frontmatter?.category}/`} className='mr-2'>\n                    {frontmatter?.category}\n                  </Link>\n                  <span className='mr-2'>\n                    |\n                  </span>\n                </>\n              ) : ''}\n              {frontmatter?.tags?.map((tag) => (\n                <Link key={tag} to={`/tags/${tag}/`} className='mr-2'>\n                  {tag}\n                </Link>\n              ))}\n            </div>\n          </div>\n        </div>\n    )\n}\n\nexport default PostListItem\n","import React from 'react'\nimport { graphql, PageProps } from \"gatsby\"\n\nimport {\n    GetTagSearchQuery\n} from '../../generated/graphql-types'\nimport { Helmet } from 'react-helmet'\nimport { Navbar } from '.'\nimport PostListItem from './PostListItem'\n\nconst TagSearch: React.FC<PageProps<GetTagSearchQuery>> = ({\n    pageContext,\n    data,\n}) => {\n    const tag = 'tag' in pageContext ? String(pageContext['tag']) : ''\n\n    return (\n        <>\n            <Helmet>\n                <title>Tag: {tag} · えやみぐさ</title>\n                <meta name=\"robots\" content=\"noindex\" />\n            </Helmet>\n            <Navbar />\n            <section className='section'>\n                <div className='container'>\n                    <h2 className='title is-4 mb-4'>\n                        Tag: {tag}\n                    </h2>\n                    <ul>\n                        {data.posts.edges.map(({ node }) => (\n                            <PostListItem post={node} />\n                        ))}\n                    </ul>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport const pageQuery = graphql`\n    query GetTagSearch(\n        $tag: String!\n    ) {\n        posts: allMdx(\n            filter: {\n                frontmatter: {\n                    tags: {\n                        in: [$tag]\n                    }\n                }\n            }\n        ) {\n            edges {\n                node {\n                    id\n                    slug\n                    parent {\n                        ... on File {\n                            sourceInstanceName\n                        }\n                    }\n                    frontmatter {\n                        title\n                        date\n                        updated\n                        category\n                        tags\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport default TagSearch\n"],"names":["post","slug","parent","frontmatter","sourceInstanceName","pathPrefix","date","dayjs","format","updated","dateString","className","Link","to","title","category","tags","map","tag","key","pageContext","data","String","name","content","posts","edges","node"],"sourceRoot":""}